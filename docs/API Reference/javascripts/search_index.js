var search_data = {
    "index": {
        "searchIndex": [
             "onvideosignalstrengthchange",
             "triggers when the value of the video signal strength changes.  @param signalvalue 0 - 100; 0 means no signal, 100 means the best signal strength;",
             "statustype",
             "pre-flight status types.",
             "offline",
             "the pre-flight status type is offline.",
             "good",
             "the pre-flight status type is good.",
             "warning",
             "the pre-flight status type is warning.",
             "error",
             "the pre-flight status type is error.",
             "focusexposureswitchwidget",
             "action widget that allows switching between between exposure and focus controls when touching. not supported on spark.  usage: preferred aspect ratio:  1:1",
             "mapwidget",
             "display: widget that displays the aircraft's state and information on the map this includes aircraft location, home location, aircraft trail path, aircraft heading, and no fly zones.  usage: preferred aspect ratio: 1:1",
             "getflightpathwidth",
             "gets the line width, in pixels, of the flight path. valid range is 0-100.  @return the width in pixels of the flight path.",
             "initheremap",
             "initializes the mapwidget with here maps. note: here maps currently only works on arm v7 devices,  and you must sign up for their premium package.  @param listener the onmapreadylistener which will invoke the onmapready method when the map has finished initializing.",
             "initgooglemap",
             "initializes the mapwidget with google maps.  note: google maps only works on devices with google  play services (not crystal sky).  important: the following lifecycle methods in your activity must call  the corresponding methods in mapwidget in order for the map to render correctly: {@link #oncreate(bundle)},  {@link #onresume()}, {@link #onpause()}, {@link #ondestroy()}, {@link #onsaveinstancestate(bundle)}, and {@link #onlowmemory()}.  @param listener the onmapreadylistener which will invoke the onmapready method when the map has finished initializing.",
             "initamap",
             "initializes the mapwidget with amaps.  @param listener the onmapreadylistener which will invoke the onmapready method when the map has finished initializing.",
             "initmapboxmap",
             "initializes the mapwidget with mapbox.  important: the following lifecycle methods in your activity must call  the corresponding methods in mapwidget in order for the map to render correctly: {@link #oncreate(bundle)},  {@link #onresume()}, {@link #onpause()}, {@link #ondestroy()}, {@link #onsaveinstancestate(bundle)}, and {@link #onlowmemory()}.  @param listener the onmapreadylistener which will invoke the onmapready method when the map has finished initializing. @param mapboxaccesstoken the api access token from mapbox.",
             "getmap",
             "get the djimap object.  @return a djimap object.",
             "hideallflyzones",
             "hides all fly zones.",
             "clearflightpath",
             "clears the flight path up to the current location. the flight path is removed even if it is hidden.",
             "setflightpathcolor",
             "sets the color of the flight path.  @param color the color of the flight path.",
             "setmapcenterlock",
             "sets the lock on the aircraft or the home location to be in center.  @param mapcenterlock parameter to select the mode of centering.",
             "setonmarkerclicklistener",
             "sets the onmarkerclicklistener for this widget.  @param onmarkerclicklistener the listener that is added to this widget.",
             "setautoframemap",
             "keeps the home location and the aircraft location visible and adjust the map bounds when set `true`.  @param isenabled parameter to enable or disable the map bounds lock.",
             "sethomebitmap",
             "changes the icon of the home marker.  @param bitmap the image to be set to.",
             "sethomebitmap",
             "changes the icon of the home marker.  @param bitmap the image to be set to. @param x specifies the x axis value of anchor to be at a particular point in the marker image. @param y specifies the y axis value of anchor to be at a particular point in the marker image.",
             "gethomebitmap",
             "gets the icon of the home marker.  @return the icon of the home marker.",
             "setflyzonecolor",
             "sets the color of the given fly zone category.  @param category the fly zone category. @param color the new border color.",
             "getflyzonecolor",
             "get the color of the given fly zone category.  @param category the fly zone category.  @return a color int.",
             "setflyzonealpha",
             "set the alpha of the given fly zone category.  @param category the fly zone category. @param alpha an alpha value from 0-255.",
             "getflyzonealpha",
             "get the alpha of the given fly zone category.  @param category the fly zone category.  @return an alpha value from 0-255.",
             "setflyzoneborderwidth",
             "set the border width of all fly zones.  @param width the width in pixels of the fly zone borders.",
             "getflyzoneborderwidth",
             "get the border width of all fly zones.  @return the width in pixels of the fly zone borders.",
             "getselfunlockcolor",
             "get the color of the self-unlock fly zones.  @return a color int.",
             "setselfunlockcolor",
             "set the color of the self-unlock fly zones.  @param selfunlockcolor the new color.",
             "getselfunlockalpha",
             "get the alpha of the self-unlock fly zones.  @return the alpha of the self-unlock fly zones.",
             "setselfunlockalpha",
             "set the alpha of the self unlock fly zones.  @param selfunlockalpha the new alpha.",
             "setcustomunlockflyzoneoverlaycolor",
             "set the color of the custom unlock fly zones.  @param customunlockcolor the new color.",
             "setcustomunlockflyzonesenttoaircraftoverlaycolor",
             "set the color of the custom unlock fly zones that have been sent to the aircraft.  @param customunlocksenttoaircraftcolor the new color.",
             "setcustomunlockflyzoneenabledoverlaycolor",
             "set the color of the currently enabled custom unlock fly zones.  @param customunlockenabledcolor the new color.",
             "getcustomunlockflyzoneoverlaycolor",
             "get the color of the custom unlock zone.  @return a color int.",
             "getcustomunlockflyzonesenttoaircraftoverlaycolor",
             "get the color of the custom unlock zones sent to the aircraft.  @return a color int.",
             "getcustomunlockflyzoneenabledoverlaycolor",
             "get the color of the currently enabled custom unlock fly zone.  @return a color int.",
             "setcustomunlockflyzoneoverlayalpha",
             "set the alpha of the custom unlock fly zones.  @param customunlockcoloralpha the new alpha.",
             "setcustomunlockflyzonesenttoaircraftoverlayalpha",
             "set the alpha of the custom unlock fly zones sent to the aircraft.  @param customunlocksenttoaircraftcoloralpha the new alpha.",
             "setcustomunlockflyzoneenabledoverlayalpha",
             "set the alpha of the currently enabled custom unlock fly zones.  @param customunlockenabledcoloralpha the new alpha.",
             "getcustomunlockflyzoneoverlayalpha",
             "get the alpha of the custom unlock fly zones.  @return the alpha.",
             "getcustomunlockflyzonesenttoaircraftoverlayalpha",
             "get the alpha of the custom unlock fly zones sent to the aircraft.  @return the alpha.",
             "getcustomunlockflyzoneenabledoverlayalpha",
             "get the alpha of the currently enabled custom unlock fly zone.  @return the alpha.",
             "getmaximumheightcolor",
             "get the color of the maximum height fly zones.  @return the color of the maximum height fly zones.",
             "setmaximumheightcolor",
             "set the color of the maximum height fly zones.  @param limitedheightcolor the new color.",
             "getmaximumheightalpha",
             "get the alpha of the maximum height fly zones.  @return the alpha.",
             "setmaximumheightalpha",
             "set the alpha of the maximum height fly zones.  @param maximumheightalpha the new alpha.",
             "setflyzonevisible",
             "set selected fly zone visibility on the map.  @param flyzonecategory represents the category of fly zone to show/hide. @param isvisible `true` to show fly zones.",
             "isflyzonevisible",
             "get selected fly zone visibility on the map.  @param flyzonecategory the category of the fly zone.  @return whether the given fly zone category is visible on the map.",
             "settaptounlockenabled",
             "this will enable the unlocking of fly zones by clicking on them.  @param isflyzonesunlockingenabled a boolean value that determines whether to enable fly zones unlocking.",
             "istaptounlockenabled",
             "gets whether tap to unlock is enabled.  @return `true` if tapping to unlock select fly zones is enabled. ",
             "setselfunlockedbitmap",
             "changes the icon of the unlocked self-unlock zones.  @param bitmap the image to be set.",
             "setselfunlockedbitmap",
             "changes the icon of the unlocked self-unlock zones.  @param bitmap the image to be set. @param x specifies the x axis value of anchor to be at a particular point in the marker image. @param y specifies the y axis value of anchor to be at a particular point in the marker image.",
             "setselflockedbitmap",
             "changes the icon of the locked self-unlock zones  @param bitmap the image to be set.",
             "setselflockedbitmap",
             "changes the icon of the locked self-unlock zones  @param bitmap the image to be set. @param x specifies the x axis value of anchor to be at a particular point in the marker image. @param y specifies the y axis value of anchor to be at a particular point in the marker image.",
             "setcustomunlockenabledbitmap",
             "changes the icon of the custom unlock zone which is enabled.  @param bitmap the image to be set.",
             "setcustomunlockenabledbitmap",
             "changes the icon of the custom unlock zone which is enabled.  @param bitmap the image to be set. @param x specifies the x axis value of anchor to be at a particular point in the marker image. @param y specifies the y axis value of anchor to be at a particular point in the marker image.",
             "setcustomunlocksenttoaircraftbitmap",
             "changes the icon of the custom unlock zone which is on aircraft but not enabled.  @param bitmap the image to be set.",
             "setcustomunlocksenttoaircraftbitmap",
             "changes the icon of the custom unlock zone which is on aircraft but not enabled.  @param bitmap the image to be set. @param x specifies the x axis value of anchor to be at a particular point in the marker image. @param y specifies the y axis value of anchor to be at a particular point in the marker image.",
             "setdirectiontohomevisible",
             "sets the visibility of the path from aircraft to home point.  @param isvisible a boolean value that determines whether to show the path from aircraft to home point.",
             "isdirectiontohomevisible",
             "defaults to `false`. a boolean value indicating whether the map displays a line showing     the direction to home.  @return `true` if direction to home is visible.",
             "setdirectiontohomecolor",
             "sets the color of the path from aircraft to home point.  @param color the new color of the path.",
             "getdirectiontohomecolor",
             "gets the color of the path from aircraft to home point.  @return the color of the path.",
             "setdirectiontohomewidth",
             "sets the width of the path from aircraft to home point.  @param width the width of the path.",
             "getdirectiontohomewidth",
             "gets the width of the path from aircraft to home point.  @return the width of the path.",
             "setflightpathvisible",
             "sets the flight path visibility.  @param isvisible a boolean value that determines whether to show the flight path.",
             "isflightpathvisible",
             "`true` if the flight path is visible. the default value is `false`  @return a boolean value indicating if the flight path is visible.",
             "getflightpathcolor",
             "gets the color of the flight path.  @return the color of the flight path.",
             "setflightpathwidth",
             "sets a line width, in pixels, for the flight path. valid range is 0-100.  @param width the width in pixels of the flight path.",
             "setgimbalattitudevisible",
             "sets the visibility of the gimbal attitude marker.  @param isvisible a boolean value that determines whether to show the gimbal attitude marker.",
             "isgimbalattitudevisible",
             "gets the visibility of the gimbal attitude marker.  @return `true` if the gimbal attitude marker is visible.",
             "setaircraftbitmap",
             "set the icon of the aircraft marker.  @param bitmap the image to be set. @param x specifies the x axis value of anchor to be at a particular point in the marker image. @param y specifies the y axis value of anchor to be at a particular point in the marker image.",
             "setaircraftbitmap",
             "changes the icon of the aircraft marker.  @param bitmap the image to be set to.",
             "getaircraftbitmap",
             "gets the icon of the aircraft marker.  @return the icon of the aircraft marker.",
             "setgimbalattitudebitmap",
             "changes the icon of the gimbal attitude marker.  @param bitmap the image to be set to.",
             "getgimbalattitudebitmap",
             "gets the icon of the gimbal attitude marker.  @return the icon of the gimbal attitude marker.",
             "sethomevisible",
             "sets the visibility of the home marker if present on the map.  @param isvisible a boolean value to determine if the home marker is visible.",
             "ishomevisible",
             "`true` if the map displays the home point of the aircraft. the default value of this property is `true`.  @return the icon of the home point marker.",
             "setdialogtheme",
             "sets the theme of all dialogs launched by this widget, such as self-unlock and custom unlock prompts.  the theme must be an appcompat theme since the alertdialog is from the support library.  @param dialogtheme the theme set for all dialogs launched by this widget.",
             "onmapreadylistener",
             "when added to the mapwidget, the onmapreadylistener can be used to  determine when the map is ready to modify. no modifications should  be done to the mapwidget before the map is initialized using one  of the initialization methods.",
             "onmapready",
             "a callback indicating that the map is finished initializing.  @param map the object of `djimap`.",
             "mapcenterlock",
             "map centering options.",
             "none",
             "this will disable the centering of map on any markers.",
             "aircraft",
             "this will keep the aircraft icon always in center of the screen and keep following it during flight.",
             "home",
             "this will keep the home icon always in center of the screen. the aircraft icon will disappear from view bounds if the aircraft travels that distance",
             "showallflyzones",
             "make all fly zones visible on the map.",
             "showflyzonelegend",
             "shows the fly zone legend. the fly zone legend indicates the color for all zone categories and self-unlock zones.  @param showflyzonelegend `true` to show the legend, `false` to hide.",
             "showdjiaccountloginindicator",
             "defaults to `false`. show a small indicator displaying the latest dji account login state.  useful if using flysafe features.  @param isloginindicatorvisible `true` if visible, `false` if hidden.",
             "isdjiaccountloginindicatorvisible",
             "get current visibility of dji account login indicator.  @return `true` if visible, `false` if hidden.",
             "showcustomunlockzones",
             "defaults to `false`. shows custom unlock zones if any are available for the currently connected aircraft.  @param isvisible `true` to show fly zones.",
             "iscustomunlockzonesvisible",
             "returns flag for the current visibility of custom unlock flyzones  @return `true` if custom unlock fly zones are visible.",
             "synccustomunlockzones",
             "call this to sync currently shown custom unlock zones to aircraft. they will still need to be manually enabled.",
             "wifisignalwidget",
             "display: widget that displays the aircraft's wifi signal strength and channel.  usage: preferred aspect ratio: 1:1",
             "onwifisignalchange",
             "triggers when wifi signal changes.  @param signalvalue 0 - 100; 0 means no signal, 100 means the best of the signal strength.",
             "radarwidget",
             "widget to see obstacle detection radar for front, back, left, right,  and top of aircraft.",
             "histogramwidget",
             "widget to display histogram chart.",
             "gethistogramlinecolor",
             "line color of the histogram.  @return an int value of histogram line color.",
             "sethistogramlinecolor",
             "set line color of the histogram.  @param histogramlinecolor an int value of histogram line color.",
             "gethistogramfillcolor",
             "fill color of the histogram.  @return an int value of histogram fill color.",
             "sethistogramfillcolor",
             "set fill color of the histogram.  @param histogramfillcolor an int value of the histogram fill color.",
             "gethistogramgridcolor",
             "grid color of the histogram.  @return an int value of the histogram grid color.",
             "sethistogramgridcolor",
             "set grid color of the histogram.  @param histogramgridcolor an int value of the histogram grid color.",
             "gethistogrambackgroundcolor",
             "background color of the histogram.  @return an int value of the histogram background color.",
             "sethistogrambackgroundcolor",
             "set background color of the histogram.  @param histogrambackgroundcolor an int value of the histogram background color.",
             "shoulddrawgrid",
             "return `true` if grid needs to be drawn.  @return a boolean value to check if grid needs to be drawn.",
             "setshoulddrawgrid",
             "determine whether grid needs to be drawn.  @param shoulddrawgrid `true` if grid needs to be drawn.",
             "shoulddrawcubic",
             "return `true` if histogram should be drawn in cubic mode.  @return a boolean value to check if cubic needs to be drawn.",
             "setshoulddrawcubic",
             "determine whether cubic needs to be drawn.  @param shoulddrawcubic `true` if cubic needs to be drawn.",
             "shouldshowclosebutton",
             "return `true` if histogram should show the close button.  @return a boolean value to check if histogram needs to show the close button.",
             "setshouldshowclosebutton",
             "determine whether histogram should show the close button.  @param shouldshowclosebutton `true` if histogram should show the close button.",
             "speakerwidget",
             "tapping the widget opens the speaker settings panel. the widget will be hidden automatically if the accessory is not present or not supported.",
             "speakerpanel",
             "this panel opens the controls to record voice or play voice on the speaker accessory it displays the list of the files on the drone available for playing.",
             "preflightchecklistpanel",
             "to allow user to toggle hide and show this panel, use in conjunction with `preflightstatuswidget`  display: panel that shows the preflight checklist that includes a list of items (like imu, gps etc) and their state that roll up into an overall state. <p> this panel is configurable to hide some of the items. use the attribute excludeitem with flags corresponding to each item to hide.  here are all the flags: <p> overall, flightmode, compass, imustatus, escstatus, visionsensors, radiochannelquality, remotecontrollermode, aircraftbattery, remotecontrollerbattery, aircraftbatterytemperature, remainingstoragecapacity, gimbalstatus</code>  <p> note that multiple flags can be used simultaneously by logically or'ing them. for example, if user wants to hide aircraft battery temperature item ad esc status item in the panel, it can be done by following two steps. <p> define custom xmlns in its layout file: xmlns:custom=http://schemas.android.com/apk/res-auto</code> <p> then, add following attribute to the preflightchecklistpanel: custom:excludeitem=aircraftbatterytemperature|escstatus</code>  interaction: all the settings are presented in listview hierarchy.",
             "djimap",
             "the public interface of map object.",
             "addmarker",
             "adds a marker to this map.  @param markeroptions describes how to create the marker.  @return the marker that was added to the map.",
             "getmap",
             "gets the base map object. this will enable all the features available by default in each map provider  @return the djimap object.",
             "animatecamera",
             "moves the camera position with default animation.  @param cameraupdate the change to apply to the camera.",
             "setoncamerachangelistener",
             "sets the `oncamerachangelistener` which can listen to camera changes.  @param listener the listener that is added to this map.",
             "removealloncamerachangelisteners",
             "removes all instances of `oncamerachangelistener` from the map.",
             "getcameraposition",
             "gets the camera position.  @return the `djicameraposition` object.",
             "movecamera",
             "moves the camera position.  @param cameraupdate the camera position.",
             "setmaptype",
             "sets the map type of this map.  @param type the map type that the map will be set to.",
             "addpolyline",
             "adds a polyline.  @param options the polyline options.  @return the `djipolyline` that was added to the map.",
             "addpolygon",
             "adds a polygon.  @param options the polygon options.  @return the `djipolygon` that was added to the map. returns null if the polygon is invalid.",
             "addsinglecircle",
             "adds a circle.  @param options the circle options.  @return the `djicircle` that was added to the map. returns null if the circle is invalid.",
             "removeonmarkerclicklistener",
             "removes the `` from the map.  @param listener the listener to remove.",
             "setonmarkerclicklistener",
             "sets the `` which can listen to click events on the map's markers.  @param listener the listener that is added to this map.",
             "setonmapclicklistener",
             "sets the ``.  @param listener the listener that is added to this map.",
             "removeonmapclicklistener",
             "removes the `` from the map.  @param listener the listener to remove.",
             "setonmarkerdraglistener",
             "sets the map's ``.  @param listener the listener that is added to this map.",
             "removeonmarkerdraglistener",
             "removes the `` from the map.  @param listener the listener to remove.",
             "removeallonmarkerdraglistener",
             "removes all instances of `` from the map.",
             "",
             "the overall representation of the map.",
             "normal",
             "the overall representation of the map.",
             "satellite",
             "satellite photograph data.",
             "hybrid",
             "satellite photograph data and roads",
             "",
             "listener on the marker click event.",
             "onmarkerclick",
             "a callback indicating that a marker on the map has been clicked.  @param marker an object of `djimarker`.  @return a boolean that indicates whether you have consumed the event (i.e.,  you want to suppress the default behavior). if it returns `false`, then  the default behavior will occur in addition to your custom behavior.",
             "",
             "listener on the map click event.",
             "onmapclick",
             "a callback indicating that the map has been clicked.  @param latlng the point on the map that was clicked.",
             "",
             "listener on the marker drag event.",
             "onmarkerdragstart",
             "a callback indicating that a marker drag has started.  @param marker the marker that is being dragged.",
             "onmarkerdrag",
             "a callback indicating that a marker drag is in progress.  @param marker the marker that is being dragged.",
             "onmarkerdragend",
             "a callback indicating that a marker drag has ended.  @param marker the marker that is being dragged.",
             "oncamerachangelistener",
             "listener on the camera change event.",
             "oncamerachange",
             "a callback indicating that the camera position has changed.  @param cameraposition the new camera position.",
             "djicircle",
             "a circle that exists on a map object. to add a new circle to a map, see `djicircleoptions`.",
             "remove",
             "removes the circle from the map it is on.",
             "setvisible",
             "changes the visibility of the circle.  @param visible `true` if the circle is visible, `false` if it is hidden.",
             "isvisible",
             "gets the visibility of the circle.  @return `true` if the circle is visible, `false` if it is hidden.",
             "setcenter",
             "sets the center of the circle.  @param center the coordinates of the center of the circle.",
             "getcenter",
             "gets the center of the circle.  @return the coordinates of the center of the circle.",
             "setradius",
             "sets the radius of the circle.  @param radius the radius of the circle.",
             "getradius",
             "gets the radius of the circle.  @return the radius of the circle.",
             "setfillcolor",
             "sets the fill color of the circle.  @param color the fill color of the circle.",
             "setstrokecolor",
             "sets the stroke color of the circle.  @param color the stroke color of the circle.",
             "setzindex",
             "sets the zindex of the circle.  @param zindex the zindex of the circle.",
             "getzindex",
             "gets the zindex of the circle.  @return the zindex of the circle.",
             "djicircleoptions",
             "represents a set of instructions for creating a new `djicircle`. this object can be passed to `djicircleoptions` to add a new circle to a map. each method returns the object itself so that they can be used in a builder pattern.",
             "center",
             "sets the center the new circle will have when added to the map.  @param center the coordinates of the center of the circle  @return the `djicircleoptions` object.",
             "radius",
             "sets the radius the new circle will have when added to the map.  @param radius the radius of the circle in meters.  @return the `djicircleoptions` object.",
             "zindex",
             "sets the zindex the new circle will have when added to the map.  @param zindex the zindex of the circle.  @return the `djicircleoptions` object.",
             "strokewidth",
             "sets the stroke width the new circle will have when added to the map.  @param width the stroke width of the circle in pixels.  @return the `djicircleoptions` object.",
             "strokecolor",
             "sets the stroke color the new circle will have when added to the map.  @param color the stroke color of the circle.  @return the `djicircleoptions` object.",
             "fillcolor",
             "sets the fill color the new circle will have when added to the map.  @param color the fill color of the circle.  @return the `djicircleoptions` object.",
             "djimarker",
             "a marker that exists on a map object. to add a new marker to a map, see `djimarkeroptions`.",
             "setposition",
             "sets the coordinates of the marker.  @param latlng the new coordinates.",
             "setrotation",
             "changes the rotation of the marker.  @param rotation the new rotation.",
             "seticon",
             "changes the icon of the marker.  @param bitmap the new icon.",
             "setanchor",
             "sets the anchor point of the marker image.  @param u horizontal distance, normalized to [0, 1], of the anchor from the left edge. @param v vertical distance, normalized to [0, 1], of the anchor from the top edge.",
             "getposition",
             "gets the position of the marker.  @return the position of the marker.",
             "settitle",
             "changes the title of the marker.  @param title the new title.",
             "gettitle",
             "gets the title of the marker.  @return the title of the marker.",
             "setvisible",
             "changes the visibility of the marker.  @param visible `true` if the marker is visible, `false` if it is hidden.",
             "isvisible",
             "gets the visibility of the marker.  @return `true` if the marker is visible, `false` if it is hidden.",
             "remove",
             "removes the marker from the map it is on.",
             "settag",
             "sets the tag which is an object associated with the marker.  @param o an object associated with the marker.",
             "gettag",
             "gets the tag.  @return an object associated with the marker.",
             "setdraggable",
             "sets the draggability of the marker.  @param draggable the draggability of the marker.",
             "isdraggable",
             "gets the draggability of the marker.  @return the draggability of the marker.",
             "djimarkeroptions",
             "represents a set of instructions for creating a new `djimarker`. this object can be passed to `djimarkeroptions` to add a new marker to a map. each method returns the object itself so that they can be used in a builder pattern.",
             "djimarkeroptions",
             "creates a new `djimarkeroptions` object.",
             "draggable",
             "sets the draggability the new marker will have when added to the map.  @param draggable the draggability of the marker.  @return the `djimarkeroptions` object.",
             "position",
             "sets the position the new marker will have when added to the map.  @param position the coordinates of the marker.  @return the `djimarkeroptions` object.",
             "anchor",
             "sets the anchor point the marker image will have when added to the map. the default is (0.5, 0.5).  @param u horizontal distance, normalized to [0, 1], of the anchor from the left edge. @param v vertical distance, normalized to [0, 1], of the anchor from the top edge.  @return the `djimarkeroptions` object.",
             "icon",
             "sets the icon the new marker will have when added to the map.  @param bitmap the icon of the marker.  @return the `djimarkeroptions` object.",
             "rotation",
             "sets the rotation the new marker will have when added to the map.  @param rotation the rotation of the marker.  @return the `djimarkeroptions` object.",
             "zindex",
             "sets the zindex the new marker will have when added to the map.  @param zindex the zindex of the marker.  @return the `djimarkeroptions` object.",
             "visible",
             "sets the visibility the new marker will have when added to the map.  @param visible the visibility of the marker.  @return the `djimarkeroptions` object.",
             "title",
             "sets the title the new marker will have when added to the map.  @param title the title of the marker.  @return the `djimarkeroptions` object.",
             "flat",
             "sets whether the marker should be flat against the map when added to the map. only supported by amaps and google maps.  @param flat `true` if the marker should be flat against the map, `false` if the marker should be a billboard facing the camera.  @return the `djimarkeroptions` object.",
             "setinfowindowenable",
             "sets whether the info window is enabled for the new marker when added to the map. only supported by amaps.  @param infowindowenable whether the info window is enabled for the marker.  @return the `djimarkeroptions` object.",
             "djipolygon",
             "a polygon that exists on a map object. to add a new polygon to a map, see `djipolygonoptions`.",
             "remove",
             "removes the polygon from the map it is on.",
             "setvisible",
             "changes the visibility of the polygon.  @param visible `true` if the polygon is visible, `false` if it is hidden.",
             "isvisible",
             "gets the visibility of the polygon.  @return `true` if the polygon is visible, `false` if it is hidden.",
             "setpoints",
             "sets the points of the polygon.  @param points the points of the polygon.",
             "setfillcolor",
             "sets the fill color of the polygon.  @param color the fill color of the polygon.",
             "setstrokecolor",
             "sets the stroke color of the polygon.  @param color the stroke color of the polygon.",
             "djipolygonoptions",
             "represents a set of instructions for creating a new `djipolygon`. this object can be passed to `djipolygonoptions` to add a new polygon to a map. each method returns the object itself so that they can be used in a builder pattern.",
             "djipolygonoptions",
             "creates a new `djipolygonoptions` object.",
             "strokewidth",
             "sets the stroke width the new polygon will have when added to the map.  @param width the stroke width of the polygon in pixels.  @return the `djipolygonoptions` object.",
             "zindex",
             "sets the zindex the new polygon will have when added to the map.  @param zindex the zindex of the polygon.  @return the `djipolygonoptions` object.",
             "strokecolor",
             "sets the stroke color the new polygon will have when added to the map.  @param color the stroke color of the polygon.  @return the `djipolygonoptions` object.",
             "fillcolor",
             "sets the fill color the new polygon will have when added to the map.  @param color the fill color of the polygon.  @return the `djipolygonoptions` object.",
             "add",
             "adds the given point to the polygon.  @param point the coordinates of the point to add.  @return the `djipolygonoptions` object.",
             "add",
             "adds the given points to the polygon.  @param points the coordinates of the points to add.  @return the `djipolygonoptions` object.",
             "addall",
             "adds the given points to the polygon.  @param points the coordinates of the points to add.  @return the `djipolygonoptions` object.",
             "djipolyline",
             "a polyline that exists on a map object. to add a new polyline to a map, see `djipolylineoptions`.",
             "remove",
             "removes the polyline from the map it is on.",
             "setwidth",
             "sets the width of the polyline.  @param width the width of the polyline.",
             "getwidth",
             "gets the width of the polyline.  @return the width of the polyline.",
             "setpoints",
             "sets the points of the polyline.  @param points the points of the polyline.",
             "setcolor",
             "sets the color of the polyline.  @param color the color of the polyline.",
             "setzindex",
             "sets the zindex of the polyline.  @param zindex the zindex of the polyline.",
             "getzindex",
             "gets the zindex of the polyline.  @return the zindex of the polyline.",
             "djipolylineoptions",
             "represents a set of instructions for creating a new `djipolyline`. this object can be passed to `djipolylineoptions` to add a new polyline to a map. each method returns the object itself so that they can be used in a builder pattern.",
             "djipolylineoptions",
             "creates a new `djipolylineoptions` object.",
             "width",
             "sets the width the new polyline will have when added to the map.  @param width the width of the polyline in pixels.  @return the `djipolylineoptions` object.",
             "zindex",
             "sets the zindex the new polyline will have when added to the map.  @param zindex the zindex of the polyline.  @return the `djipolylineoptions` object.",
             "color",
             "sets the color the new polyline will have when added to the map.  @param color the color of the polyline.  @return the `djipolylineoptions` object.",
             "geodesic",
             "indicates whether the polyline will be drawn as geodesic when added to the map. supported by amaps and google maps.  @param geodesic whether the polyline will be drawn as geodesic.  @return the `djipolylineoptions` object.",
             "visible",
             "sets the visibility the new polyline will have when added to the map.  @param visible the visibility of the polyline.  @return the `djipolylineoptions` object.",
             "setdashed",
             "indicates whether the new polyline will be dashed when added to the map.  @param dashed whether the polyline is dashed.  @return the `djipolylineoptions` object.",
             "setdashlength",
             "sets the dash length in pixels the new polyline will have when added to the map. not supported by amaps.  @param length the dash length in pixels of the polyline.  @return the `djipolylineoptions` object.",
             "add",
             "adds the given point to the polyline.  @param point the coordinates of the point to add.  @return the `djipolylineoptions` object.",
             "add",
             "adds the given points to the polyline.  @param points the coordinates of the points to add.  @return the `djipolylineoptions` object.",
             "addall",
             "adds the given points to the polyline.  @param points the coordinates of the points to add.  @return the `djipolylineoptions` object.",
             "djicameraposition",
             "the position of the camera.",
             "djicameraposition",
             "creates a new camera position with the given coordinates, zoom level, tilt, and bearing.  @param target the position of the center point. @param zoom the zoom level between 0 and 20. 0 is the lowest zoom level which will show  the entire map, and 20 is the highest zoom level. @param tilt the tilt of the camera. @param bearing the orientation of the camera.",
             "djicameraposition",
             "creates a new camera position with the given coordinates and zoom level.  @param position the position of the center point. @param zoom the zoom level between 0 and 20. 0 is the lowest zoom level which will show  the entire map, and 20 is the highest zoom level.",
             "getposition",
             "gets the position of the center point of the camera.  @return the position of the center point of the camera.",
             "getzoom",
             "gets the zoom level of the camera.  @return the zoom level of the camera.",
             "gettilt",
             "gets the tilt of the camera.  @return the tilt of the camera.",
             "getbearing",
             "gets the orientation of the camera.  @return the orientation of the camera.",
             "djicameraupdatefactory",
             "factory for creating djicameraupdate objects.",
             "newcameraposition",
             "creates a camera update that moves the center of the screen to the `djicameraposition`.  @param cameraposition the new position of the camera.  @return a djicameraupdate object.",
             "newlatlngbounds",
             "creates a camera update that moves the center of the screen to the `djilatlngbounds` at the given zoom level or with the given padding.  @param bounds the bounding box. @param zoom the zoom level. @param padding additional space in pixels to leave between the bounds and the edge.  @return a djicameraupdate object.",
             "newlatlngbounds",
             "creates a camera update that moves the center of the screen to the `djilatlngbounds` at the given zoom level.  @param bounds the bounding box. @param zoom the zoom level.  @return a djicameraupdate object.",
             "djibitmapdescriptorfactory",
             "used to create instances of djibitmapdescriptor.",
             "fromasset",
             "creates a djibitmapdescriptor using the name of a bitmap file in the assets directory.  @param assetname the name of a bitmap in the assets directory.  @return a djibitmapdescriptor object.",
             "frombitmap",
             "creates a djibitmapdescriptor from the given bitmap.  @param image a bitmap image.  @return a `djibitmapdescriptor object.",
             "fromfile",
             "creates a djibitmapdescriptor using the name of a bitmap image file located in the internal storage.  @param filename the name of the bitmap image file.  @return a djibitmapdescriptor object.",
             "frompath",
             "creates a djibitmapdescriptor from the absolute file path of a bitmap image.  @param path the absolute file path of the bitmap image file.  @return a `djibitmapdescriptor object.",
             "fromresource",
             "creates a djibitmapdescriptor from the resource id of a bitmap image.  @param resourceid the resource id of a bitmap image.  @return a djibitmapdescriptor object.",
             "djilatlng",
             "represents a point which includes latitude, longitude, altitude,  and accuracy info on a map.",
             "djilatlng",
             "creates a new `djilatlng` object with the coordinates (latitude, longitude).  @param latitude the latitude of the map point. @param longitude the longitude of the map point.",
             "djilatlng",
             "creates a new `djilatlng` object with the coordinates (latitude, longitude and altitude).  @param latitude the latitude of the map point. @param longitude the longitude of the map point. @param altitude the altitude of the map point.",
             "djilatlng",
             "creates a new `djilatlng` object with four related parameters.  @param latitude the latitude of the map point. @param longitude the longitude of the map point. @param altitude the altitude of the map point. @param accuracy the accuracy of the map point.",
             "djilatlng",
             "creates a new latlng object with five related parameters.  @param latitude the latitude of the map point. @param longitude the longitude of the map point. @param altitude the altitude of the map point. @param accuracy the accuracy of the map point. @param time the time of the map point.",
             "djilatlng",
             "creates a new latlng object with five related parameters.  @param latitude the latitude of the map point. @param longitude the longitude of the map point. @param altitude the altitude of the map point. @param accuracy the accuracy of the map point. @param time the time of the map point. @param elapsedrealtimenanos the time in elapsed real-time of the map point.",
             "djilatlng",
             "creates a new `djilatlng` object with a `djilatlng` parameter.  @param latlng a `djilatlng` object",
             "getlatitude",
             "gets the latitude of the map point.  @return the latitude of the map point.",
             "setlatitude",
             "sets the latitude of the map point.  @param latitude the latitude of the map point.",
             "getlongitude",
             "gets the longitude of the map point.  @return the longitude of the map point.",
             "setlongitude",
             "sets the longitude of the map point.  @param longitude the longitude of the map point.",
             "getaltitude",
             "gets the altitude of the map point.  @return the altitude of the map point.",
             "getaccuracy",
             "gets the accuracy of the map point.  @return the accuracy of the map point.",
             "setaccuracy",
             "sets the accuracy of the map point.  @param accuracy the accuracy of the map point.",
             "gettime",
             "gets the time of the map point.  @return the time of the map point.",
             "settime",
             "sets the time of the map point.  @param time the accuracy of the point.",
             "getelapsedrealtimenanos",
             "gets the time in elapsed real-time of the map point.  @return the time in elapsed real-time of the point.",
             "setelapsedrealtimenanos",
             "sets the time in elapsed real-time of the map point.  @param elapsedrealtimenanos the time in elapsed real-time of the point.",
             "isavailable",
             "determines if this map point is valid. a valid map point has a latitude in the range [-90,90], has a longitude in the range [-180,180], and is not (0,0).  @return `true` if this map point is valid.",
             "djilatlngbounds",
             "represents a rectangle defined by the coordinates of its northeast and southwest corners.",
             "fromlatlngs",
             "creates a new djilatlngbounds defined by the minimum and maximum coordinate values in the given list.  @param latlngs a list of coordinates.  @return a `djilatlngbounds` object.",
             "djimapviewinternal",
             "a view which displays a map. all the life cycle methods must be forwarded from the activity or fragment containing this view to the corresponding ones in this class. in particular, the following methods must be forwarded:     - `oncreate`     - `onstart`     - `onresume`     - `onpause`     - `onstop`     - `ondestroy`     - `onsaveinstancestate`     - `onlowmemory`",
             "oncreate",
             "must be called from the parent activity/fragment's corresponding method.  @param saveinstancestate bundle which contains the saved instance state.",
             "onstart",
             "must be called from the parent activity/fragment's corresponding method.",
             "onresume",
             "must be called from the parent activity/fragment's corresponding method.",
             "onpause",
             "must be called from the parent activity/fragment's corresponding method.",
             "onstop",
             "must be called from the parent activity/fragment's corresponding method.",
             "ondestroy",
             "must be called from the parent activity/fragment's corresponding method.",
             "onsaveinstancestate",
             "must be called from the parent activity/fragment's corresponding method.  @param outstate bundle in which to place your saved state.",
             "onlowmemory",
             "must be called from the parent activity/fragment's corresponding method.",
             "getdjimapasync",
             "initializes the map view.  @param callback the callback that will be invoked when the map is ready to be used.",
             "djimapview",
             "a view that contains a `djimapviewinternal` and initializes it based on the given defaultprovider attribute. if no attribute is given, the provider will be amaps. all the life cycle methods must be forwarded from the activity or fragment containing this view to the corresponding ones in this class. in particular, the following methods must be forwarded:     - `oncreate`     - `onstart`     - `onresume`     - `onpause`     - `onstop`     - `ondestroy`     - `onsaveinstancestate`     - `onlowmemory`",
             "oncreate",
             "must be called from the parent activity/fragment's corresponding method.  @param savedinstancestate bundle which contains the saved instance state.",
             "onstart",
             "must be called from the parent activity/fragment's corresponding method.",
             "onresume",
             "must be called from the parent activity/fragment's corresponding method.",
             "onpause",
             "must be called from the parent activity/fragment's corresponding method.",
             "onstop",
             "must be called from the parent activity/fragment's corresponding method.",
             "ondestroy",
             "must be called from the parent activity/fragment's corresponding method.",
             "onsaveinstancestate",
             "must be called from the parent activity/fragment's corresponding method.  @param outstate bundle in which to place your saved state.",
             "onlowmemory",
             "must be called from the parent activity/fragment's corresponding method.",
             "getdjimapasync",
             "initializes the map view.  @param callback the callback that will be invoked when the map is ready to be used.",
             "ondjimapreadycallback",
             "callback for the map ready event.",
             "ondjimapready",
             "a callback indicating that the djimap is ready.  @param map the djimap.",
             "mapprovider",
             "provides utility methods for creating map views.",
             "dispatchmapviewrequest",
             "dispatch a request to create a `djimapviewinternal` based on the given mapkitoptions. if mapkitoptions is null, a the default options will be used.  @param context a context object. @param mapkitoptions a set of options for initializing the map view.  @return a `djimapviewinternal` object.",
             "mapkit",
             "contains methods to set information that is required for map initialization.",
             "mapboxaccesstoken",
             "sets the mapbox access token. this must be called before fetching the mapbox map view.  @param accesstoken the mapbox access token.",
             "inmainlandchina",
             "sets whether the drone's location is in mainland china. this information is used for gps offset, and does not affect which map is used.  @param inmainlandchina `true` if the user is in mainland china.",
             "inhongkong",
             "sets whether the drone's location is in hong kong. this information is used for gps offset, and does not affect which map is used.  @param inhongkong `true` if the user is in hong kong.",
             "inmacau",
             "sets whether the drone's location is in macau. this information is used for gps offset, and does not affect which map is used.  @param inmacau `true` if the user is in macau.",
             "accesslockerwidget",
             "the access locker widget is used to manage the password protection status of the aircraft. when password protection is enabled, data on the aircraft is only accessible to the user after entering the password. tapping on the widget will bring up prompts according to the state of the access locker.",
             "autoexposurelockwidget",
             "display: a lock icon with two states shows whether the camera's ae (auto exposure) is locked or not.  usage: preferred aspect ratio: 1:1  interaction: tapping the lock icon will toggle the value of ae lock.",
             "onaelockchange",
             "updates when ae lock status has changed  @param islocked `true` means ae is locked, `false` otherwise.",
             "performaelockaction",
             "performs auto exposure lock action @see #`onaelockactionresult` to listen on the action result by overridding  @param islock `true` if auto exposure is to be locked",
             "onaelockactionresult",
             "triggers when ae lock action finishes  @param error error object, or null if no error has occurred",
             "preflightstatuswidget",
             "display: the text shows a summary of the preflight checklist situation of the aircraft. the color of the background changes depends on how severe the situation is. green indicates everything is ok. yellow indicates something is at warning level. red indicates something is wrong and aircraft won't take off.  usage: preferred aspect ratio: 238:33.  interaction: tapping on status text will toggle between show and hide `preflightchecklistpanel`.",
             "connectionwidget",
             "display: widget has two states representing by two icons. red triangle icon indicates there is no connection with the product. green circle icon indicates there is connection with the product.  usage: preferred aspect ratio: 1:1.",
             "flightmodewidget",
             "display: the current flight mode of the aircraft. it uses the same language as djigo.  usage: preferred aspect ratio: 103:22.",
             "onflycontrollermodechange",
             "triggers when flight controller's flight mode changes  @param flightmode current flight controller flight mode",
             "batterywidget",
             "<p> this widget is configurable to hide some of the subviews. use the attribute excludeview with flags corresponding to each subview to hide.  here are all the flags: <p> batteryicon, percentage, singlevoltage, doublevoltage</code>  <p> note that multiple flags can be used simultaneously by logically or'ing them. for example, if user wants to hide voltage subviews in the widget, it can be done by following two steps. <p> define custom xmlns in its layout file: xmlns:custom=http://schemas.android.com/apk/res-auto</code> <p> then, add following attribute to the batterywidget: custom:excludeview=singlevoltage|doublevoltage</code>  display: battery icon has two color states. white color indicates everything is ok. icon will change into red color if aircraft needs to return home, land immediately, or battery connection is bad. text shows percentage of charge remaining in battery. text also has two color states. green indicates the percentage is ok. red indicates the percentage is either below or just enough for returning home or landing immediately.  usage: preferred aspect ratio: 28:11.",
             "onbatterypercentagechange",
             "triggers when battery percentage changes  @param percentage from 0 - 100; 0 means empty, 100 means full.",
             "onbatteryconnectionstatechange",
             "triggers when djibatteryconnectionstate changes  @param status normal, means the battery status is good, other values mean the battery is in error state.",
             "onremainingbatterystatechange",
             "triggers when warning level of battery changes  @param warninglevel normal, means the battery energy is good. low, means the battery energy is ok to go home. verylow, means the battery energy is only for landing immediately.",
             "remotecontrolsignalwidget",
             "display: icon with 5 vertical bars total represents the current signal strength between rc and aircraft.  usage: preferred aspect ratio: 19:11.",
             "onremotecontrollersignalstrengthchange",
             "triggers when the value of remote controller signal strength changes  @param signalvalue 0 - 100; 0 means no signal, 100 means the best signal strength.",
             "gpssignalwidget",
             "display: small number on top of satellite icon shows the number of satellite available. 5 vertical bars represents the current gps signal strength. small 'r' letter shown or hidden indicates weather rtk is enabled or not.  usage: preferred aspect ratio: 21:11.",
             "ongpssignalstatuschange",
             "triggers when gpssignallevel changes  @param status status of the gps signal quality. level0 ~ level5; level0 means no signal, level5 means the best signal quality.",
             "onrtkenabled",
             "triggers when rtk is enabled or disabled.  @param isrtkenabled `true` means the rtk is enabled, `false` otherwise",
             "onsatellitenumberchange",
             "triggers when the number of available satellites changes  @param satellitenum current number of available satellites",
             "videosignalwidget",
             "display: 5 vertical bars represents the current video signal strength.  usage: preferred aspect ratio: 19:11.",
             "visionwidget",
             "display: widget has two visual states to show if visual positioning is being used.   - white icon indicates visual positioning is being used.   - red icon indicates visual positioning is not being used.  usage: preferred aspect ratio: 1:1.",
             "onisvisionusedchange",
             "triggers when the vision detection state changes  @param visionsystemstatus the status of the vision system. normal means the vision system is working and being used by flight controller. disabled or closed means the vision sensor is not used. @param avoidancesensorstatus the status of the omnidirectional obstacle avoidance sensors. all means all sensors are working. front_back means only the front and back sensors are working. none or closed means the avoidance sensors are not used.",
             "visionsystemstatus",
             "the status of the vision system.",
             "closed",
             "user avoidance is disabled by the user.",
             "disabled",
             "the vision system is disabled. this could be due to the flight mode, tap mode, tracking mode, or draw status.",
             "normal",
             "the vision system is functioning normally.",
             "avoidancesensorstatus",
             "the status of the omnidirectional obstacle avoidance sensors.",
             "all",
             "all vision systems are available.",
             "front_back",
             "only forward and backward vision systems are available. left and right vision systems are only available in activetrack mode and tripod mode.",
             "none",
             "vision systems are not available. this could be due to the flight mode or hardware failure.",
             "closed",
             "obstacle avoidance is disabled by the user.",
             "dashboardwidget",
             "display: compound widget that aggregates important physical state information of the aircraft into a dashboard. it includes the circular `compasswidget`, the `distancehomewidget`, the `horizontalvelocitywidget`, the `distancercwidget`, the `verticalvelocitywidget`, and the `altitudewidget`.  usage: preferred aspect ratio: 405:91.",
             "compasswidget",
             "display: compound widget that aggregates attitude and location data into one widget. the widget shows:   - heading of the aircraft relative to the pilot   - true north relative to pilot and aircraft   - roll and pitch of aircraft   - yaw and pitch of gimbal   - position of aircraft relative to pilot   - distance of aircraft from pilot   - home location  usage: preferred aspect ratio: 1:1. check `dashboardwidget` for an example of its usage.",
             "distancehomewidget",
             "display: distance between current location of the aircraft and home in meters.  usage: preferred aspect ratio: 71:16. check `dashboardwidget` for an example of its usage.",
             "horizontalvelocitywidget",
             "display: horizontal velocity of aircraft in m/s.  usage: preferred aspect ratio: 71:16. check `dashboardwidget` for an example of its usage.",
             "distancercwidget",
             "display: distance between current location of the aircraft and rc (pilot) in meters.  usage: preferred aspect ratio: 71:16. check `dashboardwidget` for an example of its usage.",
             "verticalvelocitywidget",
             "display: text shows the aircraft's current vertical velocity in m/s. arrow indicates whether the aircraft is going up or down.  usage: preferred aspect ratio: 71:16. check `dashboardwidget` for an example of its usage.",
             "altitudewidget",
             "display: current altitude of the aircraft in meters.  usage: preferred aspect ratio: 71:16. check `dashboardwidget` for an example of its usage.",
             "cameracontrolswidget",
             "display: compound widget  usage: preferred aspect ratio: 30:128  interaction: tapping the menu button will toggle between show and hide `camerasettingadvancedpanel`. tapping the switch button will toggle camera mode between shoot photo and record video. tapping the bottom button will toggle between show and hide `camerasettingexposurepanel`. full interaction with `cameracapturewidget`.",
             "setadvancedpanelvisibility",
             "shows/hides the camerasettingadvancedpanel.  @param isvisible true to show the panel, false to hide it.",
             "setexposurepanelvisibility",
             "shows/hides the camerasettingexposurepanel.  @param isvisible true to show the panel, false to hide it.",
             "picturevideoswitch",
             "display: a switch button shows weather the camera mode is in shoot photo or record video.  usage: preferred aspect ratio: 44:36. check `cameracontrolswidget` for an example of its usage.  interaction: use switch button to toggle the camera mode.",
             "cameracapturewidget",
             "display: in shooting photo, the widget can show the mode of photo will be taken and the related setting of that mode as following:   - single mode.   - hdr mode.   - burst mode and the number of burst shot will be taken.   - aeb mode and the number of shot will be taken.   - interval mode.  usage: preferred aspect ratio: 3:4. check `cameracontrolswidget` for an example of its usage.  interaction: tapping when in shoot photo mode will take a photo. tapping when in record video mode will start/stop recording.",
             "exposuresettingsmenu",
             "usage: preferred aspect ratio: 4:3. check `cameracontrolswidget` for an example of its usage.  interaction: tapping the button will toggle between show and hide `camerasettingexposurepanel`.",
             "remainingflighttimewidget",
             "display: has the same behavior as djigo's element. 1. the text inside white bubble shows the remaining flight time in minutes and seconds. 2. the middle line stretches along the width of the widget represents remaining battery percentage of the aircraft. if remaining battery is 100%, the line will cover the whole width of widget. if remaining battery is 0%, the line will disappear.   - red part of the line represents the battery percentage needed   to land aircraft immediately.   - yellow part of the line represents the battery percentage needed to   return aircraft home.   - green part of the line represents the battery percentage left to fly safely. 3. the two white dots represent the two settable battery threshold.   - the first one from the left represents the land immediately threshold.   - the second one represents the go home threshold. 4. the `h` icon is an addition to yellow part of the line. it represents the battery percentage needed to go home.",
             "colorwaveformwidget",
             "display: widget to display color waveform of live video.",
             "fpvwidget",
             "display: the video feed from camera.  usage: to allow user to interact with the video feed, use this widget in conjunction with ``fpvoverlaywidget",
             "setvideosource",
             "user can set video source to these three options: auto, primary, secondary. by default, the video source is set to auto if user does not specify it.  @param videosource an enum value of `videosource`.",
             "getvideosource",
             "retrieves the type of the video feed selection.  @return an enum value of `videosource`.",
             "setsourcecameranamevisibility",
             "shows or hides the video feed source's camera name on the video feed.  @param isvisible a boolean value that determines whether to show the source camera name.",
             "setsourcecamerasidevisibility",
             "flag to show/hide the side (starboard / port) of the camera on the video feed. only works on aircrafts that support multiple gimbals.  @param isvisible a boolean value that determines whether to show the source camera side.",
             "videosource",
             "options for the user to select the video feed to associate with the fpvwidget. please  be aware that the video feed can only associate with one fpvwidget object. if several  fpvwidget objects are associated with the same videosource, only the last one can get the live video.",
             "auto",
             "auto switch from primary video feed to secondary video feed to show the djicamera live video when connecting with m600, m600pro, a3, or n3 product. it is primary video feed by default when connecting with other products.",
             "primary",
             "the first video feed of getvideofeeds array list in videofeeder singleton object.",
             "secondary",
             "the second video feed of getvideofeeds array list in videofeeder singleton object.",
             "fpvoverlaywidget",
             "display: single tap will show the selected target on top of the `fpvwidget`. has two modes with two different icons.   - focus mode will have a green square icon.   - meter mode will have a yellow circle icon. press and hold will show the gimbal control.   - small white dot will stay at where user first taps the screen to indicate the anchor point.   - blue circle will follow user's drag. together with the anchor point, this dictates the gimbal movement. when grid mode is turned on (using the `camerasettingadvancedpanel`), this also shows the grid lines. when center  point is turned on  (using the `camerasettingadvancedpanel`), this also shows the center point.  usage: should be the same size and placed on top of `fpvoverlaywidget`.  interaction: tapping in focus mode will select that point as focus target point. tapping in meter mode will select that point as exposure meter target point. press and hold will activate gimbal control mode. dragging gimbal control will move the gimbal accordingly.",
             "setspotmeteringenabled",
             "enable or disable spot metering by this method.  enabled by default.  @param isspotmeteringenabled `true` to enable, `false` to disable.",
             "isspotmeteringenabled",
             "method to check if spot metering using touch is enabled.  @return `true` if enabled, `false` if disabled.",
             "setgimbalcontrolenabled",
             "enable or disable gimbal control by this method. enabled by default.  @param isgimbalcontrolenabled `true` to enable, `false` to disable.",
             "isgimbalcontrolenabled",
             "method to check if gimbal control using touch is enabled.  @return `true` if enabled, `false` if disabled.",
             "settouchfocusenabled",
             "enable or disable touch to focus by this method.  enabled by default.  @param istouhfocusenabled `true` to enable, `false` to disable.",
             "istouchfocusenabled",
             "method to check if touch to focus is enabled.  @return `true` if enabled, `false` if disabled.",
             "setgridoverlayenabled",
             "defaults to `true`. if `true`, fpvoverlaywidget will display grid setting if prompted by the user via the cameragridlistwidget. setting this to `false` means the grid will never be displayed.  @param isgridoverlayenabled `true` to enable, `false` to disable.",
             "isgridoverlayenabled",
             "if `true`, fpvoverlaywidget will display grid setting if prompted by the user via the cameragridlistwidget. if `false`, the grid will never be displayed.  @return `true` to enable, `false` to disable.",
             "setcurrentgridoverlaytype",
             "sets the type of the grid overlay.  @param type the grid overlay type.",
             "getcurrentgridoverlaytype",
             "gets the current type of the grid overlay.  @return the current grid overlay type.",
             "gridoverlaytype",
             "represents the types of grid lines that can be set to be on top of the fpv.",
             "none",
             "no grid lines are visible.",
             "parallel",
             "horizontal and vertical grid lines are visible using a 3x3 grid.",
             "parallel_diagonal",
             "same as `fpvoverlaywidget_gridoverlaytype_parallel` with the addition of 2 diagonal lines running through the center.",
             "unknown",
             "the type of grid is unknown.",
             "takeoffwidget",
             "display: widget has three states with three different interactions.  - white icon with arrow up indicates the aircraft is not flying and the widget interaction is to start taking off.  - white icon with arrow down indicates the aircraft is flying and the widget  interaction is to start landing.  - red icon indicates the aircraft is landing and the widget interaction is  to cancel landing.  usage: preferred aspect ratio: 1:1 widget needs to be in activity context to show dialog  interaction: tapping the widget will open up a dialog to confirm the desired action. slide the dialog from left to right to start the action.",
             "ontakeoffstatuschange",
             "triggers when take off status changes.  @param istakingoff `true` if taking off, `false` otherwise",
             "onlandingstatuschange",
             "triggers when landing status changes.  @param islanding `true` if in process of landing, `false` otherwise",
             "performtakeoffaction",
             "performs take off action @see #`ontakeoffactionresult` to listen on the action result by overridding",
             "performlandingaction",
             "performs landing action @see #`onlandingactionresult` to listen on the action result by overridding",
             "performcancellandingaction",
             "performs cancel landing action @see #`oncancellandingactionresult` to listen on the action result by overridding",
             "performlandingconfirmationaction",
             "performs the landing confirmation action. this allows aircraft to land when landing  confirmation is received.",
             "ontakeoffactionresult",
             "triggers when take off action completes @see #`performtakeoffaction`  @param error error object, or null if no error has occurred",
             "onlandingactionresult",
             "triggers when landing action completes @see #`performlandingaction`  @param error error object, or null if no error has occurred",
             "oncancellandingactionresult",
             "triggers when cancel landing action completes @see #`performcancellandingaction`  @param error error object, or null if no error has occurred",
             "onlandingconfirmedresult",
             "triggers when confirm landing action completes.  @param error error object, or null if no error has occurred.",
             "ontakeoffenable",
             "triggers when takeoff widget changes between being enabled or not.  @param enabled current state that is `true` if button is enabled.",
             "returnhomewidget",
             "display: widget has two states with two different interactions.  - white icon with arrow down indicates the aircraft is flying and the widget  interaction is to start returning home.  - red icon indicates the aircraft is returning home and the widget interaction is  to cancel returning home.  usage: preferred aspect ratio: 1:1. widget needs to be in activity context for showing dialog  interaction: tapping the widget will open up a dialog to confirm the desired action. slide the dialog from left to right to start the action.",
             "performreturnhomeaction",
             "performs return home action. @see #`onreturnhomeactionresult` for result of action by overridding",
             "onreturnhomeactionresult",
             "triggers when return home action completes @see #`performreturnhomeaction`  @param error null means success, otherwise error object returns",
             "performcancelreturnhomeaction",
             "perform cancel return home action @see #`oncancelreturnhomeactionresult`",
             "oncancelreturnhomeactionresult",
             "triggers when cancel return home action completes @see #`performcancelreturnhomeaction`  @param error null means success, otherwise error object returns",
             "manualfocuswidget",
             "display: allows the focus distance to be set manually by using a slider. macro and infinity buttons can also be clicked to set focus distance to those values.  usage: preferred aspect ratio: 36:7.",
             "focusmodewidget",
             "display: shows the current focus mode of aircraft camera.   - mf text highlighted (in green) indicates focus mode is mf.   - af text highlighted (in green) indicates focus mode is af.  usage: preferred aspect ratio: 1:1  interaction: tapping will toggle between af and mf mode.",
             "onfocusmodechange",
             "triggers when focusmode has changed  @param focusmode camera focus mode enum",
             "performfocusmodeaction",
             "performs the focusmode change action. @see #`onfocusmodeactionresult` to listen on the action result by overridding  @param mode focusmode enum value",
             "onfocusmodeactionresult",
             "triggers when focus mode action completes.  @param error error object, or null if no error has occurred",
             "cameraconfigshutterwidget",
             "display: camera's current shutter speed setting.  usage: preferred aspect ratio: 2:1.",
             "cameraconfigaperturewidget",
             "display: camera's current aperture setting.  usage: preferred aspect ratio: 2:1.",
             "cameraconfigisoandeiwidget",
             "display: camera's current iso setting.  usage: preferred aspect ratio: 2:1.",
             "cameraconfigwbwidget",
             "display: camera's current white balance setting.  usage: preferred aspect ratio: 2:1.",
             "cameraconfigstoragewidget",
             "display: first text from the left shows format/resolution of photo/video that camera wil capture. second text shows how many shots can be taken, or how many minutes can be recorded.  usage: preferred aspect ratio: 13:3.",
             "cameraconfigssdwidget",
             "usage: shows ssd video format, clip name, license, and capacity info.",
             "cameraconfigevwidget",
             "display: camera's current ev setting.  usage: preferred aspect ratio: 2:1.",
             "camerasettingadvancedpanel",
             "display: this panel shows all the camera settings that are not related to exposure. it is segmented in three parts:     - picture settings     - video settings     - common settings  usage: preferred aspect ratio: 53:79. to allow user to toggle hide and show this panel, use in conjunction with `cameracontrolswidget`  interaction: all the settings are presented in listview hierarchy.",
             "camerasettingexposurepanel",
             "display: this panel shows all the camera settings that are related to exposure. it allows exposure mode selection (auto, aperture priority, shutter priority and manual) depending on the connected camera. depending on the mode, the iso, aperture, shutter speed and exposure compensation value can also be set.  usage: preferred aspect ratio: 211:316. to allow user to toggle hide and show this panel, use in conjunction with `cameracontrolswidget`  interaction: all the settings are presented in listview hierarchy.",
             "rtkstatuspanel",
             "display: this panel shows all the information related to rtk.  this includes coordinates and altitude of the aircraft and base station, course angle, glonass, beidou and gps satellite counts for both antennas and the base station, and overall status of the rtk system.  interaction: rtk can be toggled using a switch at the top of the panel.",
             "compasscalibratingworkflow",
             "display: the progress of compas calibration.  usage: to step the user through the compass calibration process  interaction: depends on the step, there will be buttons at the bottom of the dialog for the user to interact. the user can either quit out of or continue with the process.",
             "startcalibration",
             "call this to send the start calibration command to the aircraft. as soon as the aircraft sends back the progress data, a dialog will show up to guide the user through the process.  @param callback actioncallback.",
             "stopcalibration",
             "call this to send the stop calibration command to the aircraft.  @param callback actioncallback.",
             "beaconwidget",
             "widget is used to turn on and turn off the beacon accessory on mavic 2 enterprise.  interaction: tapping the widget will enable/disable the flashing of the external beacon accessory.  the widget will be hidden automatically if the accessory is not present or not supported.",
             "spotlightwidget",
             "tapping the widget opens the spotlight settings panel. the widget will be hidden automatically if the accessory is not present or not supported.",
             "spotlightpanel",
             "this panel shows all the information related to the spotlight accessory on the mavic 2 enterprise. this includes a switch to enable/disable it, brightness control and display of it's temperature value.",
        ],
        "longSearchIndex": [
        ],
        "info": [
            [
                   "onVideoSignalStrengthChange",
                   2,
                   "/Widgets/VideoSignalWidget.html",
                   "#VideoSignalWidget_onVideoSignalStrengthChange_inline",
                   "Triggers when the value of the video signal strength changes.  @param signalValue 0 - 100; 0 means no signal, 100 means the best signal strength;",
            ],
            [
                   "Triggers when the value of the video signal strength changes.  @param signalValue 0 - 100; 0 means no signal, 100 means the best signal strength;",
                   1,
                   "/Widgets/VideoSignalWidget.html",
                   "#VideoSignalWidget_onVideoSignalStrengthChange_inline",
                   "",
            ],
            [
                   "StatusType",
                   2,
                   "/Widgets/PreFlightStatusWidget.html",
                   "#PreFlightStatusWidget_StatusType_inline",
                   "Pre-flight status types.",
            ],
            [
                   "Pre-flight status types.",
                   1,
                   "/Widgets/PreFlightStatusWidget.html",
                   "#PreFlightStatusWidget_StatusType_inline",
                   "",
            ],
            [
                   "OFFLINE",
                   2,
                   "/Widgets/PreFlightStatusWidget.html",
                   "#PreFlightStatusWidget_StatusType_offline_inline",
                   "The pre-flight status type is offline.",
            ],
            [
                   "The pre-flight status type is offline.",
                   1,
                   "/Widgets/PreFlightStatusWidget.html",
                   "#PreFlightStatusWidget_StatusType_offline_inline",
                   "",
            ],
            [
                   "GOOD",
                   2,
                   "/Widgets/PreFlightStatusWidget.html",
                   "#PreFlightStatusWidget_StatusType_good_inline",
                   "The pre-flight status type is good.",
            ],
            [
                   "The pre-flight status type is good.",
                   1,
                   "/Widgets/PreFlightStatusWidget.html",
                   "#PreFlightStatusWidget_StatusType_good_inline",
                   "",
            ],
            [
                   "WARNING",
                   2,
                   "/Widgets/PreFlightStatusWidget.html",
                   "#PreFlightStatusWidget_StatusType_warning_inline",
                   "The pre-flight status type is warning.",
            ],
            [
                   "The pre-flight status type is warning.",
                   1,
                   "/Widgets/PreFlightStatusWidget.html",
                   "#PreFlightStatusWidget_StatusType_warning_inline",
                   "",
            ],
            [
                   "ERROR",
                   2,
                   "/Widgets/PreFlightStatusWidget.html",
                   "#PreFlightStatusWidget_StatusType_error_inline",
                   "The pre-flight status type is error.",
            ],
            [
                   "The pre-flight status type is error.",
                   1,
                   "/Widgets/PreFlightStatusWidget.html",
                   "#PreFlightStatusWidget_StatusType_error_inline",
                   "",
            ],
            [
                   "FocusExposureSwitchWidget",
                   2,
                   "/Widgets/DUXExposureFocusSwitchWidget.html",
                   "",
                   "Action widget that allows switching between between Exposure and Focus controls when touching. Not supported on Spark.  Usage: Preferred Aspect Ratio:  1:1",
            ],
            [
                   "Action widget that allows switching between between Exposure and Focus controls when touching. Not supported on Spark.  Usage: Preferred Aspect Ratio:  1:1",
                   1,
                   "/Widgets/DUXExposureFocusSwitchWidget.html",
                   "",
                   "",
            ],
            [
                   "MapWidget",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "",
                   "Display: Widget that displays the aircraft's state and information on the map this includes aircraft location, home location, aircraft trail path, aircraft heading, and No Fly Zones.  Usage: Preferred Aspect Ratio: 1:1",
            ],
            [
                   "Display: Widget that displays the aircraft's state and information on the map this includes aircraft location, home location, aircraft trail path, aircraft heading, and No Fly Zones.  Usage: Preferred Aspect Ratio: 1:1",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "",
                   "",
            ],
            [
                   "getFlightPathWidth",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getFlightPathWidth_inline",
                   "Gets the line width, in pixels, of the flight path. Valid range is 0-100.  @return The width in pixels of the flight path.",
            ],
            [
                   "Gets the line width, in pixels, of the flight path. Valid range is 0-100.  @return The width in pixels of the flight path.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getFlightPathWidth_inline",
                   "",
            ],
            [
                   "initHereMap",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_initHereMap_inline",
                   "Initializes the MapWidget with Here Maps. Note: Here Maps currently only works on arm v7 devices,  and you must sign up for their premium package.  @param listener The OnMapReadyListener which will invoke the onMapReady method when the map has finished initializing.",
            ],
            [
                   "Initializes the MapWidget with Here Maps. Note: Here Maps currently only works on arm v7 devices,  and you must sign up for their premium package.  @param listener The OnMapReadyListener which will invoke the onMapReady method when the map has finished initializing.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_initHereMap_inline",
                   "",
            ],
            [
                   "initGoogleMap",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_initGoogleMap_inline",
                   "Initializes the MapWidget with Google Maps.  Note: Google Maps only works on devices with Google  Play Services (not Crystal Sky).  Important: The following lifecycle methods in your activity must call  the corresponding methods in MapWidget in order for the map to render correctly: {@link #onCreate(Bundle)},  {@link #onResume()}, {@link #onPause()}, {@link #onDestroy()}, {@link #onSaveInstanceState(Bundle)}, and {@link #onLowMemory()}.  @param listener The OnMapReadyListener which will invoke the onMapReady method when the map has finished initializing.",
            ],
            [
                   "Initializes the MapWidget with Google Maps.  Note: Google Maps only works on devices with Google  Play Services (not Crystal Sky).  Important: The following lifecycle methods in your activity must call  the corresponding methods in MapWidget in order for the map to render correctly: {@link #onCreate(Bundle)},  {@link #onResume()}, {@link #onPause()}, {@link #onDestroy()}, {@link #onSaveInstanceState(Bundle)}, and {@link #onLowMemory()}.  @param listener The OnMapReadyListener which will invoke the onMapReady method when the map has finished initializing.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_initGoogleMap_inline",
                   "",
            ],
            [
                   "initAMap",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_initAMap_inline",
                   "Initializes the MapWidget with AMaps.  @param listener The OnMapReadyListener which will invoke the onMapReady method when the map has finished initializing.",
            ],
            [
                   "Initializes the MapWidget with AMaps.  @param listener The OnMapReadyListener which will invoke the onMapReady method when the map has finished initializing.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_initAMap_inline",
                   "",
            ],
            [
                   "initMapboxMap",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_initMapbox_inline",
                   "Initializes the MapWidget with Mapbox.  Important: The following lifecycle methods in your activity must call  the corresponding methods in MapWidget in order for the map to render correctly: {@link #onCreate(Bundle)},  {@link #onResume()}, {@link #onPause()}, {@link #onDestroy()}, {@link #onSaveInstanceState(Bundle)}, and {@link #onLowMemory()}.  @param listener The OnMapReadyListener which will invoke the onMapReady method when the map has finished initializing. @param mapboxAccessToken The API access token from Mapbox.",
            ],
            [
                   "Initializes the MapWidget with Mapbox.  Important: The following lifecycle methods in your activity must call  the corresponding methods in MapWidget in order for the map to render correctly: {@link #onCreate(Bundle)},  {@link #onResume()}, {@link #onPause()}, {@link #onDestroy()}, {@link #onSaveInstanceState(Bundle)}, and {@link #onLowMemory()}.  @param listener The OnMapReadyListener which will invoke the onMapReady method when the map has finished initializing. @param mapboxAccessToken The API access token from Mapbox.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_initMapbox_inline",
                   "",
            ],
            [
                   "getMap",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getMap_inline",
                   "Get the DJIMap object.  @return A DJIMap object.",
            ],
            [
                   "Get the DJIMap object.  @return A DJIMap object.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getMap_inline",
                   "",
            ],
            [
                   "hideAllFlyZones",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_hideAllFlyZones_inline",
                   "Hides all fly zones.",
            ],
            [
                   "Hides all fly zones.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_hideAllFlyZones_inline",
                   "",
            ],
            [
                   "clearFlightPath",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_clearFlightPath_inline",
                   "Clears the flight path up to the current location. The flight path is removed even if it is hidden.",
            ],
            [
                   "Clears the flight path up to the current location. The flight path is removed even if it is hidden.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_clearFlightPath_inline",
                   "",
            ],
            [
                   "setFlightPathColor",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setFlightPathColor_inline",
                   "Sets the color of the flight path.  @param color The color of the flight path.",
            ],
            [
                   "Sets the color of the flight path.  @param color The color of the flight path.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setFlightPathColor_inline",
                   "",
            ],
            [
                   "setMapCenterLock",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setMapCenterLock_inline",
                   "Sets the lock on the aircraft or the home location to be in center.  @param mapCenterLock Parameter to select the mode of centering.",
            ],
            [
                   "Sets the lock on the aircraft or the home location to be in center.  @param mapCenterLock Parameter to select the mode of centering.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setMapCenterLock_inline",
                   "",
            ],
            [
                   "setOnMarkerClickListener",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setOnMarkerClickListener_inline",
                   "Sets the OnMarkerClickListener for this widget.  @param onMarkerClickListener The listener that is added to this widget.",
            ],
            [
                   "Sets the OnMarkerClickListener for this widget.  @param onMarkerClickListener The listener that is added to this widget.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setOnMarkerClickListener_inline",
                   "",
            ],
            [
                   "setAutoFrameMap",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setAutoFrameMap_inline",
                   "Keeps the home location and the aircraft location visible and adjust the map bounds when set `true`.  @param isEnabled Parameter to enable or disable the map bounds lock.",
            ],
            [
                   "Keeps the home location and the aircraft location visible and adjust the map bounds when set `true`.  @param isEnabled Parameter to enable or disable the map bounds lock.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setAutoFrameMap_inline",
                   "",
            ],
            [
                   "setHomeBitmap",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setHomeBitmap_inline",
                   "Changes the icon of the home marker.  @param bitmap The image to be set to.",
            ],
            [
                   "Changes the icon of the home marker.  @param bitmap The image to be set to.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setHomeBitmap_inline",
                   "",
            ],
            [
                   "setHomeBitmap",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setHomeBitmapWithPosition_inline",
                   "Changes the icon of the home marker.  @param bitmap The image to be set to. @param x Specifies the x axis value of anchor to be at a particular point in the marker image. @param y Specifies the y axis value of anchor to be at a particular point in the marker image.",
            ],
            [
                   "Changes the icon of the home marker.  @param bitmap The image to be set to. @param x Specifies the x axis value of anchor to be at a particular point in the marker image. @param y Specifies the y axis value of anchor to be at a particular point in the marker image.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setHomeBitmapWithPosition_inline",
                   "",
            ],
            [
                   "getHomeBitmap",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getHomeBitmap_inline",
                   "Gets the icon of the home marker.  @return The icon of the home marker.",
            ],
            [
                   "Gets the icon of the home marker.  @return The icon of the home marker.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getHomeBitmap_inline",
                   "",
            ],
            [
                   "setFlyZoneColor",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setFlyZoneColor_inline",
                   "Sets the color of the given fly zone category.  @param category The fly zone category. @param color The new border color.",
            ],
            [
                   "Sets the color of the given fly zone category.  @param category The fly zone category. @param color The new border color.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setFlyZoneColor_inline",
                   "",
            ],
            [
                   "getFlyZoneColor",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getFlyZoneColor_inline",
                   "Get the color of the given fly zone category.  @param category The fly zone category.  @return A color int.",
            ],
            [
                   "Get the color of the given fly zone category.  @param category The fly zone category.  @return A color int.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getFlyZoneColor_inline",
                   "",
            ],
            [
                   "setFlyZoneAlpha",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setFlyZoneAlpha_inline",
                   "Set the alpha of the given fly zone category.  @param category The fly zone category. @param alpha An alpha value from 0-255.",
            ],
            [
                   "Set the alpha of the given fly zone category.  @param category The fly zone category. @param alpha An alpha value from 0-255.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setFlyZoneAlpha_inline",
                   "",
            ],
            [
                   "getFlyZoneAlpha",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getFlyZoneAlpha_inline",
                   "Get the alpha of the given fly zone category.  @param category The fly zone category.  @return An alpha value from 0-255.",
            ],
            [
                   "Get the alpha of the given fly zone category.  @param category The fly zone category.  @return An alpha value from 0-255.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getFlyZoneAlpha_inline",
                   "",
            ],
            [
                   "setFlyZoneBorderWidth",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setFlyZoneBorderWidth_inline",
                   "Set the border width of all fly zones.  @param width The width in pixels of the fly zone borders.",
            ],
            [
                   "Set the border width of all fly zones.  @param width The width in pixels of the fly zone borders.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setFlyZoneBorderWidth_inline",
                   "",
            ],
            [
                   "getFlyZoneBorderWidth",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getFlyZoneBorderWidth_inline",
                   "Get the border width of all fly zones.  @return The width in pixels of the fly zone borders.",
            ],
            [
                   "Get the border width of all fly zones.  @return The width in pixels of the fly zone borders.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getFlyZoneBorderWidth_inline",
                   "",
            ],
            [
                   "getSelfUnlockColor",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getSelfUnlockedColor_inline",
                   "Get the color of the self-unlock fly zones.  @return A color int.",
            ],
            [
                   "Get the color of the self-unlock fly zones.  @return A color int.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getSelfUnlockedColor_inline",
                   "",
            ],
            [
                   "setSelfUnlockColor",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setSelfUnlockedColor_inline",
                   "Set the color of the self-unlock fly zones.  @param selfUnlockColor The new color.",
            ],
            [
                   "Set the color of the self-unlock fly zones.  @param selfUnlockColor The new color.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setSelfUnlockedColor_inline",
                   "",
            ],
            [
                   "getSelfUnlockAlpha",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getSelfUnlockedAlpha_inline",
                   "Get the alpha of the self-unlock fly zones.  @return The alpha of the self-unlock fly zones.",
            ],
            [
                   "Get the alpha of the self-unlock fly zones.  @return The alpha of the self-unlock fly zones.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getSelfUnlockedAlpha_inline",
                   "",
            ],
            [
                   "setSelfUnlockAlpha",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setSelfUnlockedAlpha_inline",
                   "Set the alpha of the self unlock fly zones.  @param selfUnlockAlpha The new alpha.",
            ],
            [
                   "Set the alpha of the self unlock fly zones.  @param selfUnlockAlpha The new alpha.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setSelfUnlockedAlpha_inline",
                   "",
            ],
            [
                   "setCustomUnlockFlyZoneOverlayColor",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setCustomUnlockFlyZoneOverlayColor_inline",
                   "Set the color of the custom unlock fly zones.  @param customUnlockColor The new color.",
            ],
            [
                   "Set the color of the custom unlock fly zones.  @param customUnlockColor The new color.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setCustomUnlockFlyZoneOverlayColor_inline",
                   "",
            ],
            [
                   "setCustomUnlockFlyZoneSentToAircraftOverlayColor",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setCustomUnlockFlyZoneSentToAircraftOverlayColor_inline",
                   "Set the color of the custom unlock fly zones that have been sent to the aircraft.  @param customUnlockSentToAircraftColor The new color.",
            ],
            [
                   "Set the color of the custom unlock fly zones that have been sent to the aircraft.  @param customUnlockSentToAircraftColor The new color.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setCustomUnlockFlyZoneSentToAircraftOverlayColor_inline",
                   "",
            ],
            [
                   "setCustomUnlockFlyZoneEnabledOverlayColor",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setCustomUnlockFlyZoneEnabledOverlayColor_inline",
                   "Set the color of the currently enabled custom unlock fly zones.  @param customUnlockEnabledColor The new color.",
            ],
            [
                   "Set the color of the currently enabled custom unlock fly zones.  @param customUnlockEnabledColor The new color.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setCustomUnlockFlyZoneEnabledOverlayColor_inline",
                   "",
            ],
            [
                   "getCustomUnlockFlyZoneOverlayColor",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getCustomUnlockFlyZoneOverlayColor_inline",
                   "Get the color of the custom unlock zone.  @return A color int.",
            ],
            [
                   "Get the color of the custom unlock zone.  @return A color int.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getCustomUnlockFlyZoneOverlayColor_inline",
                   "",
            ],
            [
                   "getCustomUnlockFlyZoneSentToAircraftOverlayColor",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getCustomUnlockFlyZoneSentToAircraftOverlayColor_inline",
                   "Get the color of the custom unlock zones sent to the aircraft.  @return A color int.",
            ],
            [
                   "Get the color of the custom unlock zones sent to the aircraft.  @return A color int.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getCustomUnlockFlyZoneSentToAircraftOverlayColor_inline",
                   "",
            ],
            [
                   "getCustomUnlockFlyZoneEnabledOverlayColor",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getCustomUnlockFlyZoneEnabledOverlayColor_inline",
                   "Get the color of the currently enabled custom unlock fly zone.  @return A color int.",
            ],
            [
                   "Get the color of the currently enabled custom unlock fly zone.  @return A color int.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getCustomUnlockFlyZoneEnabledOverlayColor_inline",
                   "",
            ],
            [
                   "setCustomUnlockFlyZoneOverlayAlpha",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setCustomUnlockFlyZoneOverlayAlpha_inline",
                   "Set the alpha of the custom unlock fly zones.  @param customUnlockColorAlpha The new alpha.",
            ],
            [
                   "Set the alpha of the custom unlock fly zones.  @param customUnlockColorAlpha The new alpha.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setCustomUnlockFlyZoneOverlayAlpha_inline",
                   "",
            ],
            [
                   "setCustomUnlockFlyZoneSentToAircraftOverlayAlpha",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setCustomUnlockFlyZoneSentToAircraftOverlayAlpha_inline",
                   "Set the alpha of the custom unlock fly zones sent to the aircraft.  @param customUnlockSentToAircraftColorAlpha The new alpha.",
            ],
            [
                   "Set the alpha of the custom unlock fly zones sent to the aircraft.  @param customUnlockSentToAircraftColorAlpha The new alpha.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setCustomUnlockFlyZoneSentToAircraftOverlayAlpha_inline",
                   "",
            ],
            [
                   "setCustomUnlockFlyZoneEnabledOverlayAlpha",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setCustomUnlockFlyZoneEnabledOverlayAlpha_inline",
                   "Set the alpha of the currently enabled custom unlock fly zones.  @param customUnlockEnabledColorAlpha The new alpha.",
            ],
            [
                   "Set the alpha of the currently enabled custom unlock fly zones.  @param customUnlockEnabledColorAlpha The new alpha.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setCustomUnlockFlyZoneEnabledOverlayAlpha_inline",
                   "",
            ],
            [
                   "getCustomUnlockFlyZoneOverlayAlpha",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getCustomUnlockFlyZoneOverlayAlpha_inline",
                   "Get the alpha of the custom unlock fly zones.  @return The alpha.",
            ],
            [
                   "Get the alpha of the custom unlock fly zones.  @return The alpha.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getCustomUnlockFlyZoneOverlayAlpha_inline",
                   "",
            ],
            [
                   "getCustomUnlockFlyZoneSentToAircraftOverlayAlpha",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getCustomUnlockFlyZoneSentToAircraftOverlayAlpha_inline",
                   "Get the alpha of the custom unlock fly zones sent to the aircraft.  @return The alpha.",
            ],
            [
                   "Get the alpha of the custom unlock fly zones sent to the aircraft.  @return The alpha.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getCustomUnlockFlyZoneSentToAircraftOverlayAlpha_inline",
                   "",
            ],
            [
                   "getCustomUnlockFlyZoneEnabledOverlayAlpha",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getCustomUnlockFlyZoneEnabledOverlayAlpha_inline",
                   "Get the alpha of the currently enabled custom unlock fly zone.  @return The alpha.",
            ],
            [
                   "Get the alpha of the currently enabled custom unlock fly zone.  @return The alpha.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getCustomUnlockFlyZoneEnabledOverlayAlpha_inline",
                   "",
            ],
            [
                   "getMaximumHeightColor",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getMaximumHeightColor_inline",
                   "Get the color of the maximum height fly zones.  @return The color of the maximum height fly zones.",
            ],
            [
                   "Get the color of the maximum height fly zones.  @return The color of the maximum height fly zones.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getMaximumHeightColor_inline",
                   "",
            ],
            [
                   "setMaximumHeightColor",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setMaximumHeightColor_inline",
                   "Set the color of the maximum height fly zones.  @param limitedHeightColor The new color.",
            ],
            [
                   "Set the color of the maximum height fly zones.  @param limitedHeightColor The new color.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setMaximumHeightColor_inline",
                   "",
            ],
            [
                   "getMaximumHeightAlpha",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getMaximumHeightAlpha_inline",
                   "Get the alpha of the maximum height fly zones.  @return The alpha.",
            ],
            [
                   "Get the alpha of the maximum height fly zones.  @return The alpha.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getMaximumHeightAlpha_inline",
                   "",
            ],
            [
                   "setMaximumHeightAlpha",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setMaximumHeightAlpha_inline",
                   "Set the alpha of the maximum height fly zones.  @param maximumHeightAlpha The new alpha.",
            ],
            [
                   "Set the alpha of the maximum height fly zones.  @param maximumHeightAlpha The new alpha.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setMaximumHeightAlpha_inline",
                   "",
            ],
            [
                   "setFlyZoneVisible",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setFlyZoneVisible_inline",
                   "Set selected fly zone visibility on the map.  @param flyZoneCategory Represents the category of fly zone to show/hide. @param isVisible `true` to show fly zones.",
            ],
            [
                   "Set selected fly zone visibility on the map.  @param flyZoneCategory Represents the category of fly zone to show/hide. @param isVisible `true` to show fly zones.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setFlyZoneVisible_inline",
                   "",
            ],
            [
                   "isFlyZoneVisible",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_isFlyZoneVisible_inline",
                   "Get selected fly zone visibility on the map.  @param flyZoneCategory The category of the fly zone.  @return Whether the given fly zone category is visible on the map.",
            ],
            [
                   "Get selected fly zone visibility on the map.  @param flyZoneCategory The category of the fly zone.  @return Whether the given fly zone category is visible on the map.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_isFlyZoneVisible_inline",
                   "",
            ],
            [
                   "setTapToUnlockEnabled",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setTapToUnlockEnabled_inline",
                   "This will enable the unlocking of fly zones by clicking on them.  @param isFlyZonesUnlockingEnabled A boolean value that determines whether to enable Fly Zones Unlocking.",
            ],
            [
                   "This will enable the unlocking of fly zones by clicking on them.  @param isFlyZonesUnlockingEnabled A boolean value that determines whether to enable Fly Zones Unlocking.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setTapToUnlockEnabled_inline",
                   "",
            ],
            [
                   "isTapToUnlockEnabled",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_isTapToUnlockEnabled_inline",
                   "Gets whether tap to unlock is enabled.  @return `true` if tapping to unlock select fly zones is enabled. ",
            ],
            [
                   "Gets whether tap to unlock is enabled.  @return `true` if tapping to unlock select fly zones is enabled. ",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_isTapToUnlockEnabled_inline",
                   "",
            ],
            [
                   "setSelfUnlockedBitmap",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setSelfUnlockedBitmap_inline",
                   "Changes the icon of the unlocked self-unlock zones.  @param bitmap The image to be set.",
            ],
            [
                   "Changes the icon of the unlocked self-unlock zones.  @param bitmap The image to be set.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setSelfUnlockedBitmap_inline",
                   "",
            ],
            [
                   "setSelfUnlockedBitmap",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setSelfUnlockedBitmapWithPosition_inline",
                   "Changes the icon of the unlocked self-unlock zones.  @param bitmap The image to be set. @param x Specifies the x axis value of anchor to be at a particular point in the marker image. @param y Specifies the y axis value of anchor to be at a particular point in the marker image.",
            ],
            [
                   "Changes the icon of the unlocked self-unlock zones.  @param bitmap The image to be set. @param x Specifies the x axis value of anchor to be at a particular point in the marker image. @param y Specifies the y axis value of anchor to be at a particular point in the marker image.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setSelfUnlockedBitmapWithPosition_inline",
                   "",
            ],
            [
                   "setSelfLockedBitmap",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setSelfLockedBitmap_inline",
                   "Changes the icon of the locked self-unlock zones  @param bitmap The image to be set.",
            ],
            [
                   "Changes the icon of the locked self-unlock zones  @param bitmap The image to be set.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setSelfLockedBitmap_inline",
                   "",
            ],
            [
                   "setSelfLockedBitmap",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setSelfLockedBitmapWithPosition_inline",
                   "Changes the icon of the locked self-unlock zones  @param bitmap The image to be set. @param x Specifies the x axis value of anchor to be at a particular point in the marker image. @param y Specifies the y axis value of anchor to be at a particular point in the marker image.",
            ],
            [
                   "Changes the icon of the locked self-unlock zones  @param bitmap The image to be set. @param x Specifies the x axis value of anchor to be at a particular point in the marker image. @param y Specifies the y axis value of anchor to be at a particular point in the marker image.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setSelfLockedBitmapWithPosition_inline",
                   "",
            ],
            [
                   "setCustomUnlockEnabledBitmap",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setCustomUnlockEnabledBitmap_inline",
                   "Changes the icon of the custom unlock zone which is enabled.  @param bitmap The image to be set.",
            ],
            [
                   "Changes the icon of the custom unlock zone which is enabled.  @param bitmap The image to be set.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setCustomUnlockEnabledBitmap_inline",
                   "",
            ],
            [
                   "setCustomUnlockEnabledBitmap",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setCustomUnlockEnabledBitmapWithPosition_inline",
                   "Changes the icon of the custom unlock zone which is enabled.  @param bitmap The image to be set. @param x Specifies the x axis value of anchor to be at a particular point in the marker image. @param y Specifies the y axis value of anchor to be at a particular point in the marker image.",
            ],
            [
                   "Changes the icon of the custom unlock zone which is enabled.  @param bitmap The image to be set. @param x Specifies the x axis value of anchor to be at a particular point in the marker image. @param y Specifies the y axis value of anchor to be at a particular point in the marker image.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setCustomUnlockEnabledBitmapWithPosition_inline",
                   "",
            ],
            [
                   "setCustomUnlockSentToAircraftBitmap",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setCustomUnlockSentToAircraftBitmap_inline",
                   "Changes the icon of the custom unlock zone which is on aircraft but not enabled.  @param bitmap The image to be set.",
            ],
            [
                   "Changes the icon of the custom unlock zone which is on aircraft but not enabled.  @param bitmap The image to be set.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setCustomUnlockSentToAircraftBitmap_inline",
                   "",
            ],
            [
                   "setCustomUnlockSentToAircraftBitmap",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setCustomUnlockSentToAircraftBitmapWithPosition_inline",
                   "Changes the icon of the custom unlock zone which is on aircraft but not enabled.  @param bitmap The image to be set. @param x Specifies the x axis value of anchor to be at a particular point in the marker image. @param y Specifies the y axis value of anchor to be at a particular point in the marker image.",
            ],
            [
                   "Changes the icon of the custom unlock zone which is on aircraft but not enabled.  @param bitmap The image to be set. @param x Specifies the x axis value of anchor to be at a particular point in the marker image. @param y Specifies the y axis value of anchor to be at a particular point in the marker image.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setCustomUnlockSentToAircraftBitmapWithPosition_inline",
                   "",
            ],
            [
                   "setDirectionToHomeVisible",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setDirectionToHomeVisible_inline",
                   "Sets the visibility of the path from aircraft to home point.  @param isVisible A boolean value that determines whether to show the path from aircraft to home point.",
            ],
            [
                   "Sets the visibility of the path from aircraft to home point.  @param isVisible A boolean value that determines whether to show the path from aircraft to home point.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setDirectionToHomeVisible_inline",
                   "",
            ],
            [
                   "isDirectionToHomeVisible",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_isDirectionToHomeVisible_inline",
                   "Defaults to `false`. A Boolean value indicating whether the map displays a line showing     the direction to home.  @return `true` if direction to home is visible.",
            ],
            [
                   "Defaults to `false`. A Boolean value indicating whether the map displays a line showing     the direction to home.  @return `true` if direction to home is visible.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_isDirectionToHomeVisible_inline",
                   "",
            ],
            [
                   "setDirectionToHomeColor",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setDirectionToHomeColor_inline",
                   "Sets the color of the path from aircraft to home point.  @param color The new color of the path.",
            ],
            [
                   "Sets the color of the path from aircraft to home point.  @param color The new color of the path.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setDirectionToHomeColor_inline",
                   "",
            ],
            [
                   "getDirectionToHomeColor",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getDirectionToHomeColor_inline",
                   "Gets the color of the path from aircraft to home point.  @return The color of the path.",
            ],
            [
                   "Gets the color of the path from aircraft to home point.  @return The color of the path.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getDirectionToHomeColor_inline",
                   "",
            ],
            [
                   "setDirectionToHomeWidth",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setDirectionToHomeWidth_inline",
                   "Sets the width of the path from aircraft to home point.  @param width The width of the path.",
            ],
            [
                   "Sets the width of the path from aircraft to home point.  @param width The width of the path.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setDirectionToHomeWidth_inline",
                   "",
            ],
            [
                   "getDirectionToHomeWidth",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getDirectionToHomeWidth_inline",
                   "Gets the width of the path from aircraft to home point.  @return The width of the path.",
            ],
            [
                   "Gets the width of the path from aircraft to home point.  @return The width of the path.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getDirectionToHomeWidth_inline",
                   "",
            ],
            [
                   "setFlightPathVisible",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setFlightPathVisible_inline",
                   "Sets the flight path visibility.  @param isVisible A boolean value that determines whether to show the flight path.",
            ],
            [
                   "Sets the flight path visibility.  @param isVisible A boolean value that determines whether to show the flight path.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setFlightPathVisible_inline",
                   "",
            ],
            [
                   "isFlightPathVisible",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_isFlightPathVisible_inline",
                   "`true` if the flight path is visible. The default value is `false`  @return A boolean value indicating if the flight path is visible.",
            ],
            [
                   "`true` if the flight path is visible. The default value is `false`  @return A boolean value indicating if the flight path is visible.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_isFlightPathVisible_inline",
                   "",
            ],
            [
                   "getFlightPathColor",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getFlightPathColor_inline",
                   "Gets the color of the flight path.  @return The color of the flight path.",
            ],
            [
                   "Gets the color of the flight path.  @return The color of the flight path.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getFlightPathColor_inline",
                   "",
            ],
            [
                   "setFlightPathWidth",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setFlightPathWidth_inline",
                   "Sets a line width, in pixels, for the flight path. Valid range is 0-100.  @param width The width in pixels of the flight path.",
            ],
            [
                   "Sets a line width, in pixels, for the flight path. Valid range is 0-100.  @param width The width in pixels of the flight path.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setFlightPathWidth_inline",
                   "",
            ],
            [
                   "setGimbalAttitudeVisible",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setGimbalAttitudeVisible_inline",
                   "Sets the visibility of the gimbal attitude marker.  @param isVisible A boolean value that determines whether to show the gimbal attitude marker.",
            ],
            [
                   "Sets the visibility of the gimbal attitude marker.  @param isVisible A boolean value that determines whether to show the gimbal attitude marker.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setGimbalAttitudeVisible_inline",
                   "",
            ],
            [
                   "isGimbalAttitudeVisible",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_isGimbalAttitudeVisible_inline",
                   "Gets the visibility of the gimbal attitude marker.  @return `true` if the gimbal attitude marker is visible.",
            ],
            [
                   "Gets the visibility of the gimbal attitude marker.  @return `true` if the gimbal attitude marker is visible.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_isGimbalAttitudeVisible_inline",
                   "",
            ],
            [
                   "setAircraftBitmap",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setAircraftBitmapWithPosition_inline",
                   "Set the icon of the aircraft marker.  @param bitmap The image to be set. @param x Specifies the x axis value of anchor to be at a particular point in the marker image. @param y Specifies the y axis value of anchor to be at a particular point in the marker image.",
            ],
            [
                   "Set the icon of the aircraft marker.  @param bitmap The image to be set. @param x Specifies the x axis value of anchor to be at a particular point in the marker image. @param y Specifies the y axis value of anchor to be at a particular point in the marker image.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setAircraftBitmapWithPosition_inline",
                   "",
            ],
            [
                   "setAircraftBitmap",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setAircraftBitmap_inline",
                   "Changes the icon of the aircraft marker.  @param bitmap The image to be set to.",
            ],
            [
                   "Changes the icon of the aircraft marker.  @param bitmap The image to be set to.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setAircraftBitmap_inline",
                   "",
            ],
            [
                   "getAircraftBitmap",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getAircraftBitmap_inline",
                   "Gets the icon of the aircraft marker.  @return The icon of the aircraft marker.",
            ],
            [
                   "Gets the icon of the aircraft marker.  @return The icon of the aircraft marker.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getAircraftBitmap_inline",
                   "",
            ],
            [
                   "setGimbalAttitudeBitmap",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setGimbalAttitudeBitmap_inline",
                   "Changes the icon of the gimbal attitude marker.  @param bitmap The image to be set to.",
            ],
            [
                   "Changes the icon of the gimbal attitude marker.  @param bitmap The image to be set to.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setGimbalAttitudeBitmap_inline",
                   "",
            ],
            [
                   "getGimbalAttitudeBitmap",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getGimbalAttitudeBitmap_inline",
                   "Gets the icon of the gimbal attitude marker.  @return The icon of the gimbal attitude marker.",
            ],
            [
                   "Gets the icon of the gimbal attitude marker.  @return The icon of the gimbal attitude marker.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getGimbalAttitudeBitmap_inline",
                   "",
            ],
            [
                   "setHomeVisible",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setHomeVisible_inline",
                   "Sets the visibility of the home marker if present on the map.  @param isVisible A boolean value to determine if the home marker is visible.",
            ],
            [
                   "Sets the visibility of the home marker if present on the map.  @param isVisible A boolean value to determine if the home marker is visible.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setHomeVisible_inline",
                   "",
            ],
            [
                   "isHomeVisible",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_isHomeVisible_inline",
                   "`true` if the map displays the home point of the aircraft. The default value of this property is `true`.  @return The icon of the home point marker.",
            ],
            [
                   "`true` if the map displays the home point of the aircraft. The default value of this property is `true`.  @return The icon of the home point marker.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_isHomeVisible_inline",
                   "",
            ],
            [
                   "setDialogTheme",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setDialogTheme_inline",
                   "Sets the theme of all dialogs launched by this widget, such as self-unlock and custom unlock prompts.  The theme must be an AppCompat theme since the AlertDialog is from the support library.  @param dialogTheme The theme set for all dialogs launched by this widget.",
            ],
            [
                   "Sets the theme of all dialogs launched by this widget, such as self-unlock and custom unlock prompts.  The theme must be an AppCompat theme since the AlertDialog is from the support library.  @param dialogTheme The theme set for all dialogs launched by this widget.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setDialogTheme_inline",
                   "",
            ],
            [
                   "OnMapReadyListener",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_OnMapReadyListener_inline",
                   "When added to the MapWidget, the OnMapReadyListener can be used to  determine when the map is ready to modify. No modifications should  be done to the MapWidget before the map is initialized using one  of the initialization methods.",
            ],
            [
                   "When added to the MapWidget, the OnMapReadyListener can be used to  determine when the map is ready to modify. No modifications should  be done to the MapWidget before the map is initialized using one  of the initialization methods.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_OnMapReadyListener_inline",
                   "",
            ],
            [
                   "onMapReady",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_onMapReadyCallback_inline",
                   "A callback indicating that the map is finished initializing.  @param map The object of `DJIMap`.",
            ],
            [
                   "A callback indicating that the map is finished initializing.  @param map The object of `DJIMap`.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_onMapReadyCallback_inline",
                   "",
            ],
            [
                   "MapCenterLock",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_MapCenterLock_inline",
                   "Map Centering Options.",
            ],
            [
                   "Map Centering Options.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_MapCenterLock_inline",
                   "",
            ],
            [
                   "NONE",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_MapCenterLock_NONE_inline",
                   "This will disable the centering of map on any markers.",
            ],
            [
                   "This will disable the centering of map on any markers.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_MapCenterLock_NONE_inline",
                   "",
            ],
            [
                   "AIRCRAFT",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_MapCenterLock_AIRCRAFT_inline",
                   "This will keep the aircraft icon always in center of the screen and keep following it during flight.",
            ],
            [
                   "This will keep the aircraft icon always in center of the screen and keep following it during flight.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_MapCenterLock_AIRCRAFT_inline",
                   "",
            ],
            [
                   "HOME",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_MapCenterLock_HOME_inline",
                   "This will keep the home icon always in center of the screen. The aircraft icon will disappear from view bounds if the aircraft travels that distance",
            ],
            [
                   "This will keep the home icon always in center of the screen. The aircraft icon will disappear from view bounds if the aircraft travels that distance",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_MapCenterLock_HOME_inline",
                   "",
            ],
            [
                   "showAllFlyZones",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_showAllFlyZones_inline",
                   "Make all Fly zones visible on the map.",
            ],
            [
                   "Make all Fly zones visible on the map.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_showAllFlyZones_inline",
                   "",
            ],
            [
                   "showFlyZoneLegend",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapViewController_showFlyZoneLegend_inline",
                   "Shows the fly zone legend. The fly zone legend indicates the color for all zone categories and self-unlock zones.  @param showFlyZoneLegend `true` to show the legend, `false` to hide.",
            ],
            [
                   "Shows the fly zone legend. The fly zone legend indicates the color for all zone categories and self-unlock zones.  @param showFlyZoneLegend `true` to show the legend, `false` to hide.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapViewController_showFlyZoneLegend_inline",
                   "",
            ],
            [
                   "showDJIAccountLoginIndicator",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_showDJIAccountLoginIndicator_inline",
                   "Defaults to `false`. Show a small indicator displaying the latest DJI account login state.  Useful if using FlySafe features.  @param isLoginIndicatorVisible `true` if visible, `false` if hidden.",
            ],
            [
                   "Defaults to `false`. Show a small indicator displaying the latest DJI account login state.  Useful if using FlySafe features.  @param isLoginIndicatorVisible `true` if visible, `false` if hidden.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_showDJIAccountLoginIndicator_inline",
                   "",
            ],
            [
                   "isDJIAccountLoginIndicatorVisible",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_isDJIAccountLoginIndicatorVisible_inline",
                   "Get current visibility of DJI Account Login Indicator.  @return `true` if visible, `false` if hidden.",
            ],
            [
                   "Get current visibility of DJI Account Login Indicator.  @return `true` if visible, `false` if hidden.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_isDJIAccountLoginIndicatorVisible_inline",
                   "",
            ],
            [
                   "showCustomUnlockZones",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_showCustomUnlockZones_inline",
                   "Defaults to `false`. Shows custom unlock zones if any are available for the currently connected aircraft.  @param isVisible `true` to show fly zones.",
            ],
            [
                   "Defaults to `false`. Shows custom unlock zones if any are available for the currently connected aircraft.  @param isVisible `true` to show fly zones.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_showCustomUnlockZones_inline",
                   "",
            ],
            [
                   "isCustomUnlockZonesVisible",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_isCustomUnlockZonesVisible_inline",
                   "Returns flag for the current visibility of Custom Unlock FlyZones  @return `true` if custom unlock fly zones are visible.",
            ],
            [
                   "Returns flag for the current visibility of Custom Unlock FlyZones  @return `true` if custom unlock fly zones are visible.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_isCustomUnlockZonesVisible_inline",
                   "",
            ],
            [
                   "syncCustomUnlockZones",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_syncCustomUnlockZones_inline",
                   "Call this to sync currently shown custom unlock zones to aircraft. They will still need to be manually enabled.",
            ],
            [
                   "Call this to sync currently shown custom unlock zones to aircraft. They will still need to be manually enabled.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_syncCustomUnlockZones_inline",
                   "",
            ],
            [
                   "WiFiSignalWidget",
                   2,
                   "/Widgets/DUXWiFiSignalWidget.html",
                   "",
                   "Display: Widget that displays the aircraft's WiFi signal strength and channel.  Usage: Preferred Aspect Ratio: 1:1",
            ],
            [
                   "Display: Widget that displays the aircraft's WiFi signal strength and channel.  Usage: Preferred Aspect Ratio: 1:1",
                   1,
                   "/Widgets/DUXWiFiSignalWidget.html",
                   "",
                   "",
            ],
            [
                   "onWifiSignalChange",
                   2,
                   "/Widgets/DUXWiFiSignalWidget.html",
                   "#DUXWiFiSignalWidget_onWifiSignalChange_inline",
                   "Triggers when WiFi signal changes.  @param signalValue 0 - 100; 0 means no signal, 100 means the best of the signal strength.",
            ],
            [
                   "Triggers when WiFi signal changes.  @param signalValue 0 - 100; 0 means no signal, 100 means the best of the signal strength.",
                   1,
                   "/Widgets/DUXWiFiSignalWidget.html",
                   "#DUXWiFiSignalWidget_onWifiSignalChange_inline",
                   "",
            ],
            [
                   "RadarWidget",
                   2,
                   "/Widgets/DUXRadarWidget.html",
                   "",
                   "Widget to see obstacle detection radar for front, back, left, right,  and top of aircraft.",
            ],
            [
                   "Widget to see obstacle detection radar for front, back, left, right,  and top of aircraft.",
                   1,
                   "/Widgets/DUXRadarWidget.html",
                   "",
                   "",
            ],
            [
                   "HistogramWidget",
                   2,
                   "/Widgets/DUXHistogramWidget.html",
                   "",
                   "Widget to display histogram chart.",
            ],
            [
                   "Widget to display histogram chart.",
                   1,
                   "/Widgets/DUXHistogramWidget.html",
                   "",
                   "",
            ],
            [
                   "getHistogramLineColor",
                   2,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_histogramLineColor_inline",
                   "Line color of the histogram.  @return An int value of histogram line color.",
            ],
            [
                   "Line color of the histogram.  @return An int value of histogram line color.",
                   1,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_histogramLineColor_inline",
                   "",
            ],
            [
                   "setHistogramLineColor",
                   2,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_setHistogramLineColor_inline",
                   "Set line color of the histogram.  @param histogramLineColor An int value of histogram line color.",
            ],
            [
                   "Set line color of the histogram.  @param histogramLineColor An int value of histogram line color.",
                   1,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_setHistogramLineColor_inline",
                   "",
            ],
            [
                   "getHistogramFillColor",
                   2,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_histogramFillColor_inline",
                   "Fill color of the histogram.  @return An int value of histogram fill color.",
            ],
            [
                   "Fill color of the histogram.  @return An int value of histogram fill color.",
                   1,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_histogramFillColor_inline",
                   "",
            ],
            [
                   "setHistogramFillColor",
                   2,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_setHistogramFillColor_inline",
                   "Set fill color of the histogram.  @param histogramFillColor An int value of the histogram fill color.",
            ],
            [
                   "Set fill color of the histogram.  @param histogramFillColor An int value of the histogram fill color.",
                   1,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_setHistogramFillColor_inline",
                   "",
            ],
            [
                   "getHistogramGridColor",
                   2,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_histogramGridColor_inline",
                   "Grid color of the histogram.  @return An int value of the histogram grid color.",
            ],
            [
                   "Grid color of the histogram.  @return An int value of the histogram grid color.",
                   1,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_histogramGridColor_inline",
                   "",
            ],
            [
                   "setHistogramGridColor",
                   2,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_setHistogramGridColor_inline",
                   "Set grid color of the histogram.  @param histogramGridColor An int value of the histogram grid color.",
            ],
            [
                   "Set grid color of the histogram.  @param histogramGridColor An int value of the histogram grid color.",
                   1,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_setHistogramGridColor_inline",
                   "",
            ],
            [
                   "getHistogramBackgroundColor",
                   2,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_histogramBackgroundColor_inline",
                   "Background color of the histogram.  @return An int value of the histogram background color.",
            ],
            [
                   "Background color of the histogram.  @return An int value of the histogram background color.",
                   1,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_histogramBackgroundColor_inline",
                   "",
            ],
            [
                   "setHistogramBackgroundColor",
                   2,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_setHistogramBackgroundColor_inline",
                   "Set background color of the histogram.  @param histogramBackgroundColor An int value of the histogram background color.",
            ],
            [
                   "Set background color of the histogram.  @param histogramBackgroundColor An int value of the histogram background color.",
                   1,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_setHistogramBackgroundColor_inline",
                   "",
            ],
            [
                   "shouldDrawGrid",
                   2,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_shouldDrawGrid_inline",
                   "Return `true` if grid needs to be drawn.  @return A boolean value to check if grid needs to be drawn.",
            ],
            [
                   "Return `true` if grid needs to be drawn.  @return A boolean value to check if grid needs to be drawn.",
                   1,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_shouldDrawGrid_inline",
                   "",
            ],
            [
                   "setShouldDrawGrid",
                   2,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_setShouldDrawGrid_inline",
                   "Determine whether grid needs to be drawn.  @param shouldDrawGrid `true` if grid needs to be drawn.",
            ],
            [
                   "Determine whether grid needs to be drawn.  @param shouldDrawGrid `true` if grid needs to be drawn.",
                   1,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_setShouldDrawGrid_inline",
                   "",
            ],
            [
                   "shouldDrawCubic",
                   2,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_shouldDrawCubic_inline",
                   "Return `true` if histogram should be drawn in cubic mode.  @return A boolean value to check if cubic needs to be drawn.",
            ],
            [
                   "Return `true` if histogram should be drawn in cubic mode.  @return A boolean value to check if cubic needs to be drawn.",
                   1,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_shouldDrawCubic_inline",
                   "",
            ],
            [
                   "setShouldDrawCubic",
                   2,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_setShouldDrawCubic_inline",
                   "Determine whether cubic needs to be drawn.  @param shouldDrawCubic `true` if cubic needs to be drawn.",
            ],
            [
                   "Determine whether cubic needs to be drawn.  @param shouldDrawCubic `true` if cubic needs to be drawn.",
                   1,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_setShouldDrawCubic_inline",
                   "",
            ],
            [
                   "shouldShowCloseButton",
                   2,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_shouldShowCloseButton_inline",
                   "Return `true` if histogram should show the close button.  @return A boolean value to check if histogram needs to show the close button.",
            ],
            [
                   "Return `true` if histogram should show the close button.  @return A boolean value to check if histogram needs to show the close button.",
                   1,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_shouldShowCloseButton_inline",
                   "",
            ],
            [
                   "setShouldShowCloseButton",
                   2,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_setShouldShowCloseButton_inline",
                   "Determine whether histogram should show the close button.  @param shouldShowCloseButton `true` if histogram should show the close button.",
            ],
            [
                   "Determine whether histogram should show the close button.  @param shouldShowCloseButton `true` if histogram should show the close button.",
                   1,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_setShouldShowCloseButton_inline",
                   "",
            ],
            [
                   "SpeakerWidget",
                   2,
                   "/Widgets/DUXSpeakerWidget.html",
                   "",
                   "Tapping the widget opens the speaker settings panel. The widget will be hidden automatically if the accessory is not present or not supported.",
            ],
            [
                   "Tapping the widget opens the speaker settings panel. The widget will be hidden automatically if the accessory is not present or not supported.",
                   1,
                   "/Widgets/DUXSpeakerWidget.html",
                   "",
                   "",
            ],
            [
                   "SpeakerPanel",
                   2,
                   "/Widgets/DUXSpeakerSettingsViewController.html",
                   "",
                   "This panel opens the controls to record voice or play voice on the speaker accessory It displays the list of the files on the drone available for playing.",
            ],
            [
                   "This panel opens the controls to record voice or play voice on the speaker accessory It displays the list of the files on the drone available for playing.",
                   1,
                   "/Widgets/DUXSpeakerSettingsViewController.html",
                   "",
                   "",
            ],
            [
                   "PreFlightCheckListPanel",
                   2,
                   "/Widgets/PreFlightCheckListPanel.html",
                   "",
                   "To allow user to toggle hide and show this panel, use in conjunction with `PreFlightStatusWidget`  Display: Panel that shows the preflight checklist that includes a list of items (like IMU, GPS etc) and their state that roll up into an overall state. <p> This panel is configurable to hide some of the items. Use the attribute excludeItem with flags corresponding to each item to hide.  Here are all the flags: <p> overall, flightMode, compass, IMUStatus, ESCStatus, visionSensors, radioChannelQuality, remoteControllerMode, aircraftBattery, remoteControllerBattery, aircraftBatteryTemperature, remainingStorageCapacity, gimbalStatus</code>  <p> Note that multiple flags can be used simultaneously by logically OR'ing them. For example, if user wants to hide aircraft battery temperature item ad ESC Status item in the panel, it can be done by following two steps. <p> Define custom xmlns in its layout file: xmlns:custom=http://schemas.android.com/apk/res-auto</code> <p> Then, add following attribute to the PreFlightCheckListPanel: custom:excludeItem=aircraftBatteryTemperature|ESCStatus</code>  Interaction: All the settings are presented in ListView hierarchy.",
            ],
            [
                   "To allow user to toggle hide and show this panel, use in conjunction with `PreFlightStatusWidget`  Display: Panel that shows the preflight checklist that includes a list of items (like IMU, GPS etc) and their state that roll up into an overall state. <p> This panel is configurable to hide some of the items. Use the attribute excludeItem with flags corresponding to each item to hide.  Here are all the flags: <p> overall, flightMode, compass, IMUStatus, ESCStatus, visionSensors, radioChannelQuality, remoteControllerMode, aircraftBattery, remoteControllerBattery, aircraftBatteryTemperature, remainingStorageCapacity, gimbalStatus</code>  <p> Note that multiple flags can be used simultaneously by logically OR'ing them. For example, if user wants to hide aircraft battery temperature item ad ESC Status item in the panel, it can be done by following two steps. <p> Define custom xmlns in its layout file: xmlns:custom=http://schemas.android.com/apk/res-auto</code> <p> Then, add following attribute to the PreFlightCheckListPanel: custom:excludeItem=aircraftBatteryTemperature|ESCStatus</code>  Interaction: All the settings are presented in ListView hierarchy.",
                   1,
                   "/Widgets/PreFlightCheckListPanel.html",
                   "",
                   "",
            ],
            [
                   "DJIMap",
                   2,
                   "/Widgets/DJIMap.html",
                   "",
                   "The public interface of map object.",
            ],
            [
                   "The public interface of map object.",
                   1,
                   "/Widgets/DJIMap.html",
                   "",
                   "",
            ],
            [
                   "addMarker",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_addMarker_inline",
                   "Adds a marker to this map.  @param markerOptions Describes how to create the marker.  @return The marker that was added to the map.",
            ],
            [
                   "Adds a marker to this map.  @param markerOptions Describes how to create the marker.  @return The marker that was added to the map.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_addMarker_inline",
                   "",
            ],
            [
                   "getMap",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_getMap_inline",
                   "Gets the base Map Object. This will enable all the features available by default in each Map Provider  @return The DJIMap object.",
            ],
            [
                   "Gets the base Map Object. This will enable all the features available by default in each Map Provider  @return The DJIMap object.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_getMap_inline",
                   "",
            ],
            [
                   "animateCamera",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_animateCamera_inline",
                   "Moves the camera position with default animation.  @param cameraUpdate The change to apply to the camera.",
            ],
            [
                   "Moves the camera position with default animation.  @param cameraUpdate The change to apply to the camera.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_animateCamera_inline",
                   "",
            ],
            [
                   "setOnCameraChangeListener",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_setOnCameraChangeListener_inline",
                   "Sets the `OnCameraChangeListener` which can listen to camera changes.  @param listener The listener that is added to this map.",
            ],
            [
                   "Sets the `OnCameraChangeListener` which can listen to camera changes.  @param listener The listener that is added to this map.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_setOnCameraChangeListener_inline",
                   "",
            ],
            [
                   "removeAllOnCameraChangeListeners",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_removeAllOnCameraChangeListeners_inline",
                   "Removes all instances of `OnCameraChangeListener` from the map.",
            ],
            [
                   "Removes all instances of `OnCameraChangeListener` from the map.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_removeAllOnCameraChangeListeners_inline",
                   "",
            ],
            [
                   "getCameraPosition",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_getCameraPosition_inline",
                   "Gets the camera position.  @return The `DJICameraPosition` object.",
            ],
            [
                   "Gets the camera position.  @return The `DJICameraPosition` object.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_getCameraPosition_inline",
                   "",
            ],
            [
                   "moveCamera",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_moveCamera_inline",
                   "Moves the camera position.  @param cameraUpdate The camera position.",
            ],
            [
                   "Moves the camera position.  @param cameraUpdate The camera position.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_moveCamera_inline",
                   "",
            ],
            [
                   "setMapType",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_setMapType_inline",
                   "Sets the map type of this map.  @param type The map type that the map will be set to.",
            ],
            [
                   "Sets the map type of this map.  @param type The map type that the map will be set to.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_setMapType_inline",
                   "",
            ],
            [
                   "addPolyline",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_addPolyline_inline",
                   "Adds a polyline.  @param options The polyline options.  @return The `DJIPolyline` that was added to the map.",
            ],
            [
                   "Adds a polyline.  @param options The polyline options.  @return The `DJIPolyline` that was added to the map.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_addPolyline_inline",
                   "",
            ],
            [
                   "addPolygon",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_addPolygon_inline",
                   "Adds a polygon.  @param options The polygon options.  @return The `DJIPolygon` that was added to the map. Returns null if the polygon is invalid.",
            ],
            [
                   "Adds a polygon.  @param options The polygon options.  @return The `DJIPolygon` that was added to the map. Returns null if the polygon is invalid.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_addPolygon_inline",
                   "",
            ],
            [
                   "addSingleCircle",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_addSingleCircle_inline",
                   "Adds a circle.  @param options The circle options.  @return The `DJICircle` that was added to the map. Returns null if the circle is invalid.",
            ],
            [
                   "Adds a circle.  @param options The circle options.  @return The `DJICircle` that was added to the map. Returns null if the circle is invalid.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_addSingleCircle_inline",
                   "",
            ],
            [
                   "removeOnMarkerClickListener",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_removeOnMarkerClickListener_inline",
                   "Removes the `` from the map.  @param listener The listener to remove.",
            ],
            [
                   "Removes the `` from the map.  @param listener The listener to remove.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_removeOnMarkerClickListener_inline",
                   "",
            ],
            [
                   "setOnMarkerClickListener",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_setOnMarkerClickListener_inline",
                   "Sets the `` which can listen to click events on the map's markers.  @param listener The listener that is added to this map.",
            ],
            [
                   "Sets the `` which can listen to click events on the map's markers.  @param listener The listener that is added to this map.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_setOnMarkerClickListener_inline",
                   "",
            ],
            [
                   "setOnMapClickListener",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_setOnMapClickListener_inline",
                   "Sets the ``.  @param listener The listener that is added to this map.",
            ],
            [
                   "Sets the ``.  @param listener The listener that is added to this map.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_setOnMapClickListener_inline",
                   "",
            ],
            [
                   "removeOnMapClickListener",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_removeOnMapClickListener_inline",
                   "Removes the `` from the map.  @param listener The listener to remove.",
            ],
            [
                   "Removes the `` from the map.  @param listener The listener to remove.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_removeOnMapClickListener_inline",
                   "",
            ],
            [
                   "setOnMarkerDragListener",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_setOnMarkerDragListener_inline",
                   "Sets the map's ``.  @param listener The listener that is added to this map.",
            ],
            [
                   "Sets the map's ``.  @param listener The listener that is added to this map.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_setOnMarkerDragListener_inline",
                   "",
            ],
            [
                   "removeOnMarkerDragListener",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_removeOnMarkerDragListener_inline",
                   "Removes the `` from the map.  @param listener The listener to remove.",
            ],
            [
                   "Removes the `` from the map.  @param listener The listener to remove.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_removeOnMarkerDragListener_inline",
                   "",
            ],
            [
                   "removeAllOnMarkerDragListener",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_removeAllOnMarkerDragListener_inline",
                   "Removes all instances of `` from the map.",
            ],
            [
                   "Removes all instances of `` from the map.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_removeAllOnMarkerDragListener_inline",
                   "",
            ],
            [
                   "",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_MapType_inline",
                   "The overall representation of the map.",
            ],
            [
                   "The overall representation of the map.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_MapType_inline",
                   "",
            ],
            [
                   "NORMAL",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_MapType_Normal_inline",
                   "The overall representation of the map.",
            ],
            [
                   "The overall representation of the map.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_MapType_Normal_inline",
                   "",
            ],
            [
                   "SATELLITE",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_MapType_Satellite_inline",
                   "Satellite photograph data.",
            ],
            [
                   "Satellite photograph data.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_MapType_Satellite_inline",
                   "",
            ],
            [
                   "HYBRID",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_MapType_Hybrid_inline",
                   "Satellite photograph data and roads",
            ],
            [
                   "Satellite photograph data and roads",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_MapType_Hybrid_inline",
                   "",
            ],
            [
                   "",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_OnMarkerClickListenerInterface_inline",
                   "Listener on the marker click event.",
            ],
            [
                   "Listener on the marker click event.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_OnMarkerClickListenerInterface_inline",
                   "",
            ],
            [
                   "onMarkerClick",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_onMarkerClickCallback_inline",
                   "A callback indicating that a marker on the map has been clicked.  @param marker An object of `DJIMarker`.  @return A boolean that indicates whether you have consumed the event (i.e.,  you want to suppress the default behavior). If it returns `false`, then  the default behavior will occur in addition to your custom behavior.",
            ],
            [
                   "A callback indicating that a marker on the map has been clicked.  @param marker An object of `DJIMarker`.  @return A boolean that indicates whether you have consumed the event (i.e.,  you want to suppress the default behavior). If it returns `false`, then  the default behavior will occur in addition to your custom behavior.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_onMarkerClickCallback_inline",
                   "",
            ],
            [
                   "",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_OnMapClickListenerInterface_inline",
                   "Listener on the map click event.",
            ],
            [
                   "Listener on the map click event.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_OnMapClickListenerInterface_inline",
                   "",
            ],
            [
                   "onMapClick",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_onMapClickCallback_inline",
                   "A callback indicating that the map has been clicked.  @param latLng The point on the map that was clicked.",
            ],
            [
                   "A callback indicating that the map has been clicked.  @param latLng The point on the map that was clicked.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_onMapClickCallback_inline",
                   "",
            ],
            [
                   "",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_OnMarkerDragListenerInterface_inline",
                   "Listener on the marker drag event.",
            ],
            [
                   "Listener on the marker drag event.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_OnMarkerDragListenerInterface_inline",
                   "",
            ],
            [
                   "onMarkerDragStart",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_onMarkerDragStartCallback_inline",
                   "A callback indicating that a marker drag has started.  @param marker The marker that is being dragged.",
            ],
            [
                   "A callback indicating that a marker drag has started.  @param marker The marker that is being dragged.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_onMarkerDragStartCallback_inline",
                   "",
            ],
            [
                   "onMarkerDrag",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_onMarkerDragCallback_inline",
                   "A callback indicating that a marker drag is in progress.  @param marker The marker that is being dragged.",
            ],
            [
                   "A callback indicating that a marker drag is in progress.  @param marker The marker that is being dragged.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_onMarkerDragCallback_inline",
                   "",
            ],
            [
                   "onMarkerDragEnd",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_onMarkerDragEndCallback_inline",
                   "A callback indicating that a marker drag has ended.  @param marker The marker that is being dragged.",
            ],
            [
                   "A callback indicating that a marker drag has ended.  @param marker The marker that is being dragged.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_onMarkerDragEndCallback_inline",
                   "",
            ],
            [
                   "OnCameraChangeListener",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_onCameraChangeListenerInterface_inline",
                   "Listener on the camera change event.",
            ],
            [
                   "Listener on the camera change event.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_onCameraChangeListenerInterface_inline",
                   "",
            ],
            [
                   "onCameraChange",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_onCameraChangeCallback_inline",
                   "A callback indicating that the camera position has changed.  @param cameraPosition The new camera position.",
            ],
            [
                   "A callback indicating that the camera position has changed.  @param cameraPosition The new camera position.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_onCameraChangeCallback_inline",
                   "",
            ],
            [
                   "DJICircle",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJICircle_inline",
                   "A circle that exists on a map object. To add a new circle to a map, see `DJICircleOptions`.",
            ],
            [
                   "A circle that exists on a map object. To add a new circle to a map, see `DJICircleOptions`.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJICircle_inline",
                   "",
            ],
            [
                   "remove",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJICircle_remove_inline",
                   "Removes the circle from the map it is on.",
            ],
            [
                   "Removes the circle from the map it is on.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJICircle_remove_inline",
                   "",
            ],
            [
                   "setVisible",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJICircle_setVisible_inline",
                   "Changes the visibility of the circle.  @param visible `true` if the circle is visible, `false` if it is hidden.",
            ],
            [
                   "Changes the visibility of the circle.  @param visible `true` if the circle is visible, `false` if it is hidden.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJICircle_setVisible_inline",
                   "",
            ],
            [
                   "isVisible",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJICircle_isVisible_inline",
                   "Gets the visibility of the circle.  @return `true` if the circle is visible, `false` if it is hidden.",
            ],
            [
                   "Gets the visibility of the circle.  @return `true` if the circle is visible, `false` if it is hidden.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJICircle_isVisible_inline",
                   "",
            ],
            [
                   "setCenter",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJICircle_setCenter_inline",
                   "Sets the center of the circle.  @param center The coordinates of the center of the circle.",
            ],
            [
                   "Sets the center of the circle.  @param center The coordinates of the center of the circle.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJICircle_setCenter_inline",
                   "",
            ],
            [
                   "getCenter",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJICircle_getCenter_inline",
                   "Gets the center of the circle.  @return The coordinates of the center of the circle.",
            ],
            [
                   "Gets the center of the circle.  @return The coordinates of the center of the circle.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJICircle_getCenter_inline",
                   "",
            ],
            [
                   "setRadius",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJICircle_setRadius_inline",
                   "Sets the radius of the circle.  @param radius The radius of the circle.",
            ],
            [
                   "Sets the radius of the circle.  @param radius The radius of the circle.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJICircle_setRadius_inline",
                   "",
            ],
            [
                   "getRadius",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJICircle_getRadius_inline",
                   "Gets the radius of the circle.  @return The radius of the circle.",
            ],
            [
                   "Gets the radius of the circle.  @return The radius of the circle.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJICircle_getRadius_inline",
                   "",
            ],
            [
                   "setFillColor",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJICircle_setFillColor_inline",
                   "Sets the fill color of the circle.  @param color The fill color of the circle.",
            ],
            [
                   "Sets the fill color of the circle.  @param color The fill color of the circle.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJICircle_setFillColor_inline",
                   "",
            ],
            [
                   "setStrokeColor",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJICircle_setStrokeColor_inline",
                   "Sets the stroke color of the circle.  @param color The stroke color of the circle.",
            ],
            [
                   "Sets the stroke color of the circle.  @param color The stroke color of the circle.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJICircle_setStrokeColor_inline",
                   "",
            ],
            [
                   "setZIndex",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJICircle_setZIndex_inline",
                   "Sets the zIndex of the circle.  @param zIndex The zIndex of the circle.",
            ],
            [
                   "Sets the zIndex of the circle.  @param zIndex The zIndex of the circle.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJICircle_setZIndex_inline",
                   "",
            ],
            [
                   "getZIndex",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJICircle_getZIndex_inline",
                   "Gets the zIndex of the circle.  @return The zIndex of the circle.",
            ],
            [
                   "Gets the zIndex of the circle.  @return The zIndex of the circle.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJICircle_getZIndex_inline",
                   "",
            ],
            [
                   "DJICircleOptions",
                   2,
                   "/Widgets/DJIMap_DJICircleOptions.html",
                   "",
                   "Represents a set of instructions for creating a new `DJICircle`. This object can be passed to `DJICircleOptions` to add a new circle to a map. Each method returns the object itself so that they can be used in a builder pattern.",
            ],
            [
                   "Represents a set of instructions for creating a new `DJICircle`. This object can be passed to `DJICircleOptions` to add a new circle to a map. Each method returns the object itself so that they can be used in a builder pattern.",
                   1,
                   "/Widgets/DJIMap_DJICircleOptions.html",
                   "",
                   "",
            ],
            [
                   "center",
                   2,
                   "/Widgets/DJIMap_DJICircleOptions.html",
                   "#DJIMap_DJICircleOptions_center_inline",
                   "Sets the center the new circle will have when added to the map.  @param center The coordinates of the center of the circle  @return The `DJICircleOptions` object.",
            ],
            [
                   "Sets the center the new circle will have when added to the map.  @param center The coordinates of the center of the circle  @return The `DJICircleOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJICircleOptions.html",
                   "#DJIMap_DJICircleOptions_center_inline",
                   "",
            ],
            [
                   "radius",
                   2,
                   "/Widgets/DJIMap_DJICircleOptions.html",
                   "#DJIMap_DJICircleOptions_radius_inline",
                   "Sets the radius the new circle will have when added to the map.  @param radius The radius of the circle in meters.  @return The `DJICircleOptions` object.",
            ],
            [
                   "Sets the radius the new circle will have when added to the map.  @param radius The radius of the circle in meters.  @return The `DJICircleOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJICircleOptions.html",
                   "#DJIMap_DJICircleOptions_radius_inline",
                   "",
            ],
            [
                   "zIndex",
                   2,
                   "/Widgets/DJIMap_DJICircleOptions.html",
                   "#DJIMap_DJICircleOptions_zIndex_inline",
                   "Sets the zIndex the new circle will have when added to the map.  @param zIndex The zIndex of the circle.  @return The `DJICircleOptions` object.",
            ],
            [
                   "Sets the zIndex the new circle will have when added to the map.  @param zIndex The zIndex of the circle.  @return The `DJICircleOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJICircleOptions.html",
                   "#DJIMap_DJICircleOptions_zIndex_inline",
                   "",
            ],
            [
                   "strokeWidth",
                   2,
                   "/Widgets/DJIMap_DJICircleOptions.html",
                   "#DJIMap_DJICircleOptions_strokeWidth_inline",
                   "Sets the stroke width the new circle will have when added to the map.  @param width The stroke width of the circle in pixels.  @return The `DJICircleOptions` object.",
            ],
            [
                   "Sets the stroke width the new circle will have when added to the map.  @param width The stroke width of the circle in pixels.  @return The `DJICircleOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJICircleOptions.html",
                   "#DJIMap_DJICircleOptions_strokeWidth_inline",
                   "",
            ],
            [
                   "strokeColor",
                   2,
                   "/Widgets/DJIMap_DJICircleOptions.html",
                   "#DJIMap_DJICircleOptions_strokeColor_inline",
                   "Sets the stroke color the new circle will have when added to the map.  @param color The stroke color of the circle.  @return The `DJICircleOptions` object.",
            ],
            [
                   "Sets the stroke color the new circle will have when added to the map.  @param color The stroke color of the circle.  @return The `DJICircleOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJICircleOptions.html",
                   "#DJIMap_DJICircleOptions_strokeColor_inline",
                   "",
            ],
            [
                   "fillColor",
                   2,
                   "/Widgets/DJIMap_DJICircleOptions.html",
                   "#DJIMap_DJICircleOptions_fillColor_inline",
                   "Sets the fill color the new circle will have when added to the map.  @param color The fill color of the circle.  @return The `DJICircleOptions` object.",
            ],
            [
                   "Sets the fill color the new circle will have when added to the map.  @param color The fill color of the circle.  @return The `DJICircleOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJICircleOptions.html",
                   "#DJIMap_DJICircleOptions_fillColor_inline",
                   "",
            ],
            [
                   "DJIMarker",
                   2,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "",
                   "A marker that exists on a map object. To add a new marker to a map, see `DJIMarkerOptions`.",
            ],
            [
                   "A marker that exists on a map object. To add a new marker to a map, see `DJIMarkerOptions`.",
                   1,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "",
                   "",
            ],
            [
                   "setPosition",
                   2,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_setPosition_inline",
                   "Sets the coordinates of the marker.  @param latLng The new coordinates.",
            ],
            [
                   "Sets the coordinates of the marker.  @param latLng The new coordinates.",
                   1,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_setPosition_inline",
                   "",
            ],
            [
                   "setRotation",
                   2,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_setRotation_inline",
                   "Changes the rotation of the marker.  @param rotation The new rotation.",
            ],
            [
                   "Changes the rotation of the marker.  @param rotation The new rotation.",
                   1,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_setRotation_inline",
                   "",
            ],
            [
                   "setIcon",
                   2,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_setIcon_inline",
                   "Changes the icon of the marker.  @param bitmap The new icon.",
            ],
            [
                   "Changes the icon of the marker.  @param bitmap The new icon.",
                   1,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_setIcon_inline",
                   "",
            ],
            [
                   "setAnchor",
                   2,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_setAnchor_inline",
                   "Sets the anchor point of the marker image.  @param u Horizontal distance, normalized to [0, 1], of the anchor from the left edge. @param v Vertical distance, normalized to [0, 1], of the anchor from the top edge.",
            ],
            [
                   "Sets the anchor point of the marker image.  @param u Horizontal distance, normalized to [0, 1], of the anchor from the left edge. @param v Vertical distance, normalized to [0, 1], of the anchor from the top edge.",
                   1,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_setAnchor_inline",
                   "",
            ],
            [
                   "getPosition",
                   2,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_getPosition_inline",
                   "Gets the position of the marker.  @return The position of the marker.",
            ],
            [
                   "Gets the position of the marker.  @return The position of the marker.",
                   1,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_getPosition_inline",
                   "",
            ],
            [
                   "setTitle",
                   2,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_setTitle_inline",
                   "Changes the title of the marker.  @param title The new title.",
            ],
            [
                   "Changes the title of the marker.  @param title The new title.",
                   1,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_setTitle_inline",
                   "",
            ],
            [
                   "getTitle",
                   2,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_getTitle_inline",
                   "Gets the title of the marker.  @return The title of the marker.",
            ],
            [
                   "Gets the title of the marker.  @return The title of the marker.",
                   1,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_getTitle_inline",
                   "",
            ],
            [
                   "setVisible",
                   2,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_setVisible_inline",
                   "Changes the visibility of the marker.  @param visible `true` if the marker is visible, `false` if it is hidden.",
            ],
            [
                   "Changes the visibility of the marker.  @param visible `true` if the marker is visible, `false` if it is hidden.",
                   1,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_setVisible_inline",
                   "",
            ],
            [
                   "isVisible",
                   2,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_isVisible_inline",
                   "Gets the visibility of the marker.  @return `true` if the marker is visible, `false` if it is hidden.",
            ],
            [
                   "Gets the visibility of the marker.  @return `true` if the marker is visible, `false` if it is hidden.",
                   1,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_isVisible_inline",
                   "",
            ],
            [
                   "remove",
                   2,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_remove_inline",
                   "Removes the marker from the map it is on.",
            ],
            [
                   "Removes the marker from the map it is on.",
                   1,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_remove_inline",
                   "",
            ],
            [
                   "setTag",
                   2,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_setTag_inline",
                   "Sets the tag which is an object associated with the marker.  @param o An object associated with the marker.",
            ],
            [
                   "Sets the tag which is an object associated with the marker.  @param o An object associated with the marker.",
                   1,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_setTag_inline",
                   "",
            ],
            [
                   "getTag",
                   2,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_getTag_inline",
                   "Gets the tag.  @return An object associated with the marker.",
            ],
            [
                   "Gets the tag.  @return An object associated with the marker.",
                   1,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_getTag_inline",
                   "",
            ],
            [
                   "setDraggable",
                   2,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_setDraggable_inline",
                   "Sets the draggability of the marker.  @param draggable The draggability of the marker.",
            ],
            [
                   "Sets the draggability of the marker.  @param draggable The draggability of the marker.",
                   1,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_setDraggable_inline",
                   "",
            ],
            [
                   "isDraggable",
                   2,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_isDraggable_inline",
                   "Gets the draggability of the marker.  @return The draggability of the marker.",
            ],
            [
                   "Gets the draggability of the marker.  @return The draggability of the marker.",
                   1,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_isDraggable_inline",
                   "",
            ],
            [
                   "DJIMarkerOptions",
                   2,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "",
                   "Represents a set of instructions for creating a new `DJIMarker`. This object can be passed to `DJIMarkerOptions` to add a new marker to a map. Each method returns the object itself so that they can be used in a builder pattern.",
            ],
            [
                   "Represents a set of instructions for creating a new `DJIMarker`. This object can be passed to `DJIMarkerOptions` to add a new marker to a map. Each method returns the object itself so that they can be used in a builder pattern.",
                   1,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "",
                   "",
            ],
            [
                   "DJIMarkerOptions",
                   2,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_init_inline",
                   "Creates a new `DJIMarkerOptions` object.",
            ],
            [
                   "Creates a new `DJIMarkerOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_init_inline",
                   "",
            ],
            [
                   "draggable",
                   2,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_draggable_inline",
                   "Sets the draggability the new marker will have when added to the map.  @param draggable The draggability of the marker.  @return The `DJIMarkerOptions` object.",
            ],
            [
                   "Sets the draggability the new marker will have when added to the map.  @param draggable The draggability of the marker.  @return The `DJIMarkerOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_draggable_inline",
                   "",
            ],
            [
                   "position",
                   2,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_position_inline",
                   "Sets the position the new marker will have when added to the map.  @param position The coordinates of the marker.  @return The `DJIMarkerOptions` object.",
            ],
            [
                   "Sets the position the new marker will have when added to the map.  @param position The coordinates of the marker.  @return The `DJIMarkerOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_position_inline",
                   "",
            ],
            [
                   "anchor",
                   2,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_anchor_inline",
                   "Sets the anchor point the marker image will have when added to the map. The default is (0.5, 0.5).  @param u Horizontal distance, normalized to [0, 1], of the anchor from the left edge. @param v Vertical distance, normalized to [0, 1], of the anchor from the top edge.  @return The `DJIMarkerOptions` object.",
            ],
            [
                   "Sets the anchor point the marker image will have when added to the map. The default is (0.5, 0.5).  @param u Horizontal distance, normalized to [0, 1], of the anchor from the left edge. @param v Vertical distance, normalized to [0, 1], of the anchor from the top edge.  @return The `DJIMarkerOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_anchor_inline",
                   "",
            ],
            [
                   "icon",
                   2,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_icon_inline",
                   "Sets the icon the new marker will have when added to the map.  @param bitmap The icon of the marker.  @return The `DJIMarkerOptions` object.",
            ],
            [
                   "Sets the icon the new marker will have when added to the map.  @param bitmap The icon of the marker.  @return The `DJIMarkerOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_icon_inline",
                   "",
            ],
            [
                   "rotation",
                   2,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_rotation_inline",
                   "Sets the rotation the new marker will have when added to the map.  @param rotation The rotation of the marker.  @return The `DJIMarkerOptions` object.",
            ],
            [
                   "Sets the rotation the new marker will have when added to the map.  @param rotation The rotation of the marker.  @return The `DJIMarkerOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_rotation_inline",
                   "",
            ],
            [
                   "zIndex",
                   2,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_zIndex_inline",
                   "Sets the zIndex the new marker will have when added to the map.  @param zIndex The zIndex of the marker.  @return The `DJIMarkerOptions` object.",
            ],
            [
                   "Sets the zIndex the new marker will have when added to the map.  @param zIndex The zIndex of the marker.  @return The `DJIMarkerOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_zIndex_inline",
                   "",
            ],
            [
                   "visible",
                   2,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_visible_inline",
                   "Sets the visibility the new marker will have when added to the map.  @param visible The visibility of the marker.  @return The `DJIMarkerOptions` object.",
            ],
            [
                   "Sets the visibility the new marker will have when added to the map.  @param visible The visibility of the marker.  @return The `DJIMarkerOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_visible_inline",
                   "",
            ],
            [
                   "title",
                   2,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_title_inline",
                   "Sets the title the new marker will have when added to the map.  @param title The title of the marker.  @return The `DJIMarkerOptions` object.",
            ],
            [
                   "Sets the title the new marker will have when added to the map.  @param title The title of the marker.  @return The `DJIMarkerOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_title_inline",
                   "",
            ],
            [
                   "flat",
                   2,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_flat_inline",
                   "Sets whether the marker should be flat against the map when added to the map. Only supported by AMaps and Google Maps.  @param flat `true` if the marker should be flat against the map, `false` if the marker should be a billboard facing the camera.  @return The `DJIMarkerOptions` object.",
            ],
            [
                   "Sets whether the marker should be flat against the map when added to the map. Only supported by AMaps and Google Maps.  @param flat `true` if the marker should be flat against the map, `false` if the marker should be a billboard facing the camera.  @return The `DJIMarkerOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_flat_inline",
                   "",
            ],
            [
                   "setInfoWindowEnable",
                   2,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_infoWindowEnable_inline",
                   "Sets whether the info window is enabled for the new marker when added to the map. Only supported by AMaps.  @param infoWindowEnable Whether the info window is enabled for the marker.  @return The `DJIMarkerOptions` object.",
            ],
            [
                   "Sets whether the info window is enabled for the new marker when added to the map. Only supported by AMaps.  @param infoWindowEnable Whether the info window is enabled for the marker.  @return The `DJIMarkerOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_infoWindowEnable_inline",
                   "",
            ],
            [
                   "DJIPolygon",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIPolygon_inline",
                   "A polygon that exists on a map object. To add a new polygon to a map, see `DJIPolygonOptions`.",
            ],
            [
                   "A polygon that exists on a map object. To add a new polygon to a map, see `DJIPolygonOptions`.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIPolygon_inline",
                   "",
            ],
            [
                   "remove",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIPolygon_remove_inline",
                   "Removes the polygon from the map it is on.",
            ],
            [
                   "Removes the polygon from the map it is on.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIPolygon_remove_inline",
                   "",
            ],
            [
                   "setVisible",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIPolygon_setVisible_inline",
                   "Changes the visibility of the polygon.  @param visible `true` if the polygon is visible, `false` if it is hidden.",
            ],
            [
                   "Changes the visibility of the polygon.  @param visible `true` if the polygon is visible, `false` if it is hidden.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIPolygon_setVisible_inline",
                   "",
            ],
            [
                   "isVisible",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIPolygon_isVisible_inline",
                   "Gets the visibility of the polygon.  @return `true` if the polygon is visible, `false` if it is hidden.",
            ],
            [
                   "Gets the visibility of the polygon.  @return `true` if the polygon is visible, `false` if it is hidden.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIPolygon_isVisible_inline",
                   "",
            ],
            [
                   "setPoints",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIPolygon_setPoints_inline",
                   "Sets the points of the polygon.  @param points The points of the polygon.",
            ],
            [
                   "Sets the points of the polygon.  @param points The points of the polygon.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIPolygon_setPoints_inline",
                   "",
            ],
            [
                   "setFillColor",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIPolygon_setFillColor_inline",
                   "Sets the fill color of the polygon.  @param color The fill color of the polygon.",
            ],
            [
                   "Sets the fill color of the polygon.  @param color The fill color of the polygon.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIPolygon_setFillColor_inline",
                   "",
            ],
            [
                   "setStrokeColor",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIPolygon_setStrokeColor_inline",
                   "Sets the stroke color of the polygon.  @param color The stroke color of the polygon.",
            ],
            [
                   "Sets the stroke color of the polygon.  @param color The stroke color of the polygon.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIPolygon_setStrokeColor_inline",
                   "",
            ],
            [
                   "DJIPolygonOptions",
                   2,
                   "/Widgets/DJIMap_DJIPolygonOptions.html",
                   "",
                   "Represents a set of instructions for creating a new `DJIPolygon`. This object can be passed to `DJIPolygonOptions` to add a new polygon to a map. Each method returns the object itself so that they can be used in a builder pattern.",
            ],
            [
                   "Represents a set of instructions for creating a new `DJIPolygon`. This object can be passed to `DJIPolygonOptions` to add a new polygon to a map. Each method returns the object itself so that they can be used in a builder pattern.",
                   1,
                   "/Widgets/DJIMap_DJIPolygonOptions.html",
                   "",
                   "",
            ],
            [
                   "DJIPolygonOptions",
                   2,
                   "/Widgets/DJIMap_DJIPolygonOptions.html",
                   "#DJIMap_DJIPolygonOptions_init_inline",
                   "Creates a new `DJIPolygonOptions` object.",
            ],
            [
                   "Creates a new `DJIPolygonOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIPolygonOptions.html",
                   "#DJIMap_DJIPolygonOptions_init_inline",
                   "",
            ],
            [
                   "strokeWidth",
                   2,
                   "/Widgets/DJIMap_DJIPolygonOptions.html",
                   "#DJIMap_DJIPolygonOptions_strokeWidth_inline",
                   "Sets the stroke width the new polygon will have when added to the map.  @param width The stroke width of the polygon in pixels.  @return The `DJIPolygonOptions` object.",
            ],
            [
                   "Sets the stroke width the new polygon will have when added to the map.  @param width The stroke width of the polygon in pixels.  @return The `DJIPolygonOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIPolygonOptions.html",
                   "#DJIMap_DJIPolygonOptions_strokeWidth_inline",
                   "",
            ],
            [
                   "zIndex",
                   2,
                   "/Widgets/DJIMap_DJIPolygonOptions.html",
                   "#DJIMap_DJIPolygonOptions_zIndex_inline",
                   "Sets the zIndex the new polygon will have when added to the map.  @param zIndex The zIndex of the polygon.  @return The `DJIPolygonOptions` object.",
            ],
            [
                   "Sets the zIndex the new polygon will have when added to the map.  @param zIndex The zIndex of the polygon.  @return The `DJIPolygonOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIPolygonOptions.html",
                   "#DJIMap_DJIPolygonOptions_zIndex_inline",
                   "",
            ],
            [
                   "strokeColor",
                   2,
                   "/Widgets/DJIMap_DJIPolygonOptions.html",
                   "#DJIMap_DJIPolygonOptions_strokeColor_inline",
                   "Sets the stroke color the new polygon will have when added to the map.  @param color The stroke color of the polygon.  @return The `DJIPolygonOptions` object.",
            ],
            [
                   "Sets the stroke color the new polygon will have when added to the map.  @param color The stroke color of the polygon.  @return The `DJIPolygonOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIPolygonOptions.html",
                   "#DJIMap_DJIPolygonOptions_strokeColor_inline",
                   "",
            ],
            [
                   "fillColor",
                   2,
                   "/Widgets/DJIMap_DJIPolygonOptions.html",
                   "#DJIMap_DJIPolygonOptions_fillColor_inline",
                   "Sets the fill color the new polygon will have when added to the map.  @param color The fill color of the polygon.  @return The `DJIPolygonOptions` object.",
            ],
            [
                   "Sets the fill color the new polygon will have when added to the map.  @param color The fill color of the polygon.  @return The `DJIPolygonOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIPolygonOptions.html",
                   "#DJIMap_DJIPolygonOptions_fillColor_inline",
                   "",
            ],
            [
                   "add",
                   2,
                   "/Widgets/DJIMap_DJIPolygonOptions.html",
                   "#DJIMap_DJIPolygonOptions_addPoint_inline",
                   "Adds the given point to the polygon.  @param point The coordinates of the point to add.  @return The `DJIPolygonOptions` object.",
            ],
            [
                   "Adds the given point to the polygon.  @param point The coordinates of the point to add.  @return The `DJIPolygonOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIPolygonOptions.html",
                   "#DJIMap_DJIPolygonOptions_addPoint_inline",
                   "",
            ],
            [
                   "add",
                   2,
                   "/Widgets/DJIMap_DJIPolygonOptions.html",
                   "#DJIMap_DJIPolygonOptions_addPoints_inline",
                   "Adds the given points to the polygon.  @param points The coordinates of the points to add.  @return The `DJIPolygonOptions` object.",
            ],
            [
                   "Adds the given points to the polygon.  @param points The coordinates of the points to add.  @return The `DJIPolygonOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIPolygonOptions.html",
                   "#DJIMap_DJIPolygonOptions_addPoints_inline",
                   "",
            ],
            [
                   "addAll",
                   2,
                   "/Widgets/DJIMap_DJIPolygonOptions.html",
                   "#DJIMap_DJIPolygonOptions_addAll_inline",
                   "Adds the given points to the polygon.  @param points The coordinates of the points to add.  @return The `DJIPolygonOptions` object.",
            ],
            [
                   "Adds the given points to the polygon.  @param points The coordinates of the points to add.  @return The `DJIPolygonOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIPolygonOptions.html",
                   "#DJIMap_DJIPolygonOptions_addAll_inline",
                   "",
            ],
            [
                   "DJIPolyline",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIPolyline_inline",
                   "A polyline that exists on a map object. To add a new polyline to a map, see `DJIPolylineOptions`.",
            ],
            [
                   "A polyline that exists on a map object. To add a new polyline to a map, see `DJIPolylineOptions`.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIPolyline_inline",
                   "",
            ],
            [
                   "remove",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIPolyline_remove_inline",
                   "Removes the polyline from the map it is on.",
            ],
            [
                   "Removes the polyline from the map it is on.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIPolyline_remove_inline",
                   "",
            ],
            [
                   "setWidth",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIPolyline_setWidth_inline",
                   "Sets the width of the polyline.  @param width The width of the polyline.",
            ],
            [
                   "Sets the width of the polyline.  @param width The width of the polyline.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIPolyline_setWidth_inline",
                   "",
            ],
            [
                   "getWidth",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIPolyline_getWidth_inline",
                   "Gets the width of the polyline.  @return The width of the polyline.",
            ],
            [
                   "Gets the width of the polyline.  @return The width of the polyline.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIPolyline_getWidth_inline",
                   "",
            ],
            [
                   "setPoints",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIPolyline_setPoints_inline",
                   "Sets the points of the polyline.  @param points The points of the polyline.",
            ],
            [
                   "Sets the points of the polyline.  @param points The points of the polyline.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIPolyline_setPoints_inline",
                   "",
            ],
            [
                   "setColor",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIPolyline_setColor_inline",
                   "Sets the color of the polyline.  @param color The color of the polyline.",
            ],
            [
                   "Sets the color of the polyline.  @param color The color of the polyline.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIPolyline_setColor_inline",
                   "",
            ],
            [
                   "setZIndex",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIPolyline_setZIndex_inline",
                   "Sets the zIndex of the polyline.  @param zIndex The zIndex of the polyline.",
            ],
            [
                   "Sets the zIndex of the polyline.  @param zIndex The zIndex of the polyline.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIPolyline_setZIndex_inline",
                   "",
            ],
            [
                   "getZIndex",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIPolyline_getZIndex_inline",
                   "Gets the zIndex of the polyline.  @return The zIndex of the polyline.",
            ],
            [
                   "Gets the zIndex of the polyline.  @return The zIndex of the polyline.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIPolyline_getZIndex_inline",
                   "",
            ],
            [
                   "DJIPolylineOptions",
                   2,
                   "/Widgets/DJIMap_DJIPolylineOptions.html",
                   "",
                   "Represents a set of instructions for creating a new `DJIPolyline`. This object can be passed to `DJIPolylineOptions` to add a new polyline to a map. Each method returns the object itself so that they can be used in a builder pattern.",
            ],
            [
                   "Represents a set of instructions for creating a new `DJIPolyline`. This object can be passed to `DJIPolylineOptions` to add a new polyline to a map. Each method returns the object itself so that they can be used in a builder pattern.",
                   1,
                   "/Widgets/DJIMap_DJIPolylineOptions.html",
                   "",
                   "",
            ],
            [
                   "DJIPolylineOptions",
                   2,
                   "/Widgets/DJIMap_DJIPolylineOptions.html",
                   "#DJIMap_DJIPolylineOptions_init_inline",
                   "Creates a new `DJIPolylineOptions` object.",
            ],
            [
                   "Creates a new `DJIPolylineOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIPolylineOptions.html",
                   "#DJIMap_DJIPolylineOptions_init_inline",
                   "",
            ],
            [
                   "width",
                   2,
                   "/Widgets/DJIMap_DJIPolylineOptions.html",
                   "#DJIMap_DJIPolylineOptions_width_inline",
                   "Sets the width the new polyline will have when added to the map.  @param width The width of the polyline in pixels.  @return The `DJIPolylineOptions` object.",
            ],
            [
                   "Sets the width the new polyline will have when added to the map.  @param width The width of the polyline in pixels.  @return The `DJIPolylineOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIPolylineOptions.html",
                   "#DJIMap_DJIPolylineOptions_width_inline",
                   "",
            ],
            [
                   "zIndex",
                   2,
                   "/Widgets/DJIMap_DJIPolylineOptions.html",
                   "#DJIMap_DJIPolylineOptions_zIndex_inline",
                   "Sets the zIndex the new polyline will have when added to the map.  @param zIndex The zIndex of the polyline.  @return The `DJIPolylineOptions` object.",
            ],
            [
                   "Sets the zIndex the new polyline will have when added to the map.  @param zIndex The zIndex of the polyline.  @return The `DJIPolylineOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIPolylineOptions.html",
                   "#DJIMap_DJIPolylineOptions_zIndex_inline",
                   "",
            ],
            [
                   "color",
                   2,
                   "/Widgets/DJIMap_DJIPolylineOptions.html",
                   "#DJIMap_DJIPolylineOptions_color_inline",
                   "Sets the color the new polyline will have when added to the map.  @param color The color of the polyline.  @return The `DJIPolylineOptions` object.",
            ],
            [
                   "Sets the color the new polyline will have when added to the map.  @param color The color of the polyline.  @return The `DJIPolylineOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIPolylineOptions.html",
                   "#DJIMap_DJIPolylineOptions_color_inline",
                   "",
            ],
            [
                   "geodesic",
                   2,
                   "/Widgets/DJIMap_DJIPolylineOptions.html",
                   "#DJIMap_DJIPolylineOptions_geodesic_inline",
                   "Indicates whether the polyline will be drawn as geodesic when added to the map. Supported by AMaps and Google Maps.  @param geodesic Whether the polyline will be drawn as geodesic.  @return The `DJIPolylineOptions` object.",
            ],
            [
                   "Indicates whether the polyline will be drawn as geodesic when added to the map. Supported by AMaps and Google Maps.  @param geodesic Whether the polyline will be drawn as geodesic.  @return The `DJIPolylineOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIPolylineOptions.html",
                   "#DJIMap_DJIPolylineOptions_geodesic_inline",
                   "",
            ],
            [
                   "visible",
                   2,
                   "/Widgets/DJIMap_DJIPolylineOptions.html",
                   "#DJIMap_DJIPolylineOptions_visible_inline",
                   "Sets the visibility the new polyline will have when added to the map.  @param visible The visibility of the polyline.  @return The `DJIPolylineOptions` object.",
            ],
            [
                   "Sets the visibility the new polyline will have when added to the map.  @param visible The visibility of the polyline.  @return The `DJIPolylineOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIPolylineOptions.html",
                   "#DJIMap_DJIPolylineOptions_visible_inline",
                   "",
            ],
            [
                   "setDashed",
                   2,
                   "/Widgets/DJIMap_DJIPolylineOptions.html",
                   "#DJIMap_DJIPolylineOptions_dashed_inline",
                   "Indicates whether the new polyline will be dashed when added to the map.  @param dashed Whether the polyline is dashed.  @return The `DJIPolylineOptions` object.",
            ],
            [
                   "Indicates whether the new polyline will be dashed when added to the map.  @param dashed Whether the polyline is dashed.  @return The `DJIPolylineOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIPolylineOptions.html",
                   "#DJIMap_DJIPolylineOptions_dashed_inline",
                   "",
            ],
            [
                   "setDashLength",
                   2,
                   "/Widgets/DJIMap_DJIPolylineOptions.html",
                   "#DJIMap_DJIPolylineOptions_dashLength_inline",
                   "Sets the dash length in pixels the new polyline will have when added to the map. Not supported by AMaps.  @param length The dash length in pixels of the polyline.  @return The `DJIPolylineOptions` object.",
            ],
            [
                   "Sets the dash length in pixels the new polyline will have when added to the map. Not supported by AMaps.  @param length The dash length in pixels of the polyline.  @return The `DJIPolylineOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIPolylineOptions.html",
                   "#DJIMap_DJIPolylineOptions_dashLength_inline",
                   "",
            ],
            [
                   "add",
                   2,
                   "/Widgets/DJIMap_DJIPolylineOptions.html",
                   "#DJIMap_DJIPolylineOptions_addPoint_inline",
                   "Adds the given point to the polyline.  @param point The coordinates of the point to add.  @return The `DJIPolylineOptions` object.",
            ],
            [
                   "Adds the given point to the polyline.  @param point The coordinates of the point to add.  @return The `DJIPolylineOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIPolylineOptions.html",
                   "#DJIMap_DJIPolylineOptions_addPoint_inline",
                   "",
            ],
            [
                   "add",
                   2,
                   "/Widgets/DJIMap_DJIPolylineOptions.html",
                   "#DJIMap_DJIPolylineOptions_addPoints_inline",
                   "Adds the given points to the polyline.  @param points The coordinates of the points to add.  @return The `DJIPolylineOptions` object.",
            ],
            [
                   "Adds the given points to the polyline.  @param points The coordinates of the points to add.  @return The `DJIPolylineOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIPolylineOptions.html",
                   "#DJIMap_DJIPolylineOptions_addPoints_inline",
                   "",
            ],
            [
                   "addAll",
                   2,
                   "/Widgets/DJIMap_DJIPolylineOptions.html",
                   "#DJIMap_DJIPolylineOptions_addAll_inline",
                   "Adds the given points to the polyline.  @param points The coordinates of the points to add.  @return The `DJIPolylineOptions` object.",
            ],
            [
                   "Adds the given points to the polyline.  @param points The coordinates of the points to add.  @return The `DJIPolylineOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIPolylineOptions.html",
                   "#DJIMap_DJIPolylineOptions_addAll_inline",
                   "",
            ],
            [
                   "DJICameraPosition",
                   2,
                   "/Widgets/DJIMap_DJICameraPosition.html",
                   "",
                   "The position of the camera.",
            ],
            [
                   "The position of the camera.",
                   1,
                   "/Widgets/DJIMap_DJICameraPosition.html",
                   "",
                   "",
            ],
            [
                   "DJICameraPosition",
                   2,
                   "/Widgets/DJIMap_DJICameraPosition.html",
                   "#DJIMap_DJICameraPosition_constructor1_inline",
                   "Creates a new camera position with the given coordinates, zoom level, tilt, and bearing.  @param target The position of the center point. @param zoom The zoom level between 0 and 20. 0 is the lowest zoom level which will show  the entire map, and 20 is the highest zoom level. @param tilt The tilt of the camera. @param bearing The orientation of the camera.",
            ],
            [
                   "Creates a new camera position with the given coordinates, zoom level, tilt, and bearing.  @param target The position of the center point. @param zoom The zoom level between 0 and 20. 0 is the lowest zoom level which will show  the entire map, and 20 is the highest zoom level. @param tilt The tilt of the camera. @param bearing The orientation of the camera.",
                   1,
                   "/Widgets/DJIMap_DJICameraPosition.html",
                   "#DJIMap_DJICameraPosition_constructor1_inline",
                   "",
            ],
            [
                   "DJICameraPosition",
                   2,
                   "/Widgets/DJIMap_DJICameraPosition.html",
                   "#DJIMap_DJICameraPosition_constructor2_inline",
                   "Creates a new camera position with the given coordinates and zoom level.  @param position The position of the center point. @param zoom The zoom level between 0 and 20. 0 is the lowest zoom level which will show  the entire map, and 20 is the highest zoom level.",
            ],
            [
                   "Creates a new camera position with the given coordinates and zoom level.  @param position The position of the center point. @param zoom The zoom level between 0 and 20. 0 is the lowest zoom level which will show  the entire map, and 20 is the highest zoom level.",
                   1,
                   "/Widgets/DJIMap_DJICameraPosition.html",
                   "#DJIMap_DJICameraPosition_constructor2_inline",
                   "",
            ],
            [
                   "getPosition",
                   2,
                   "/Widgets/DJIMap_DJICameraPosition.html",
                   "#DJIMap_DJICameraPosition_getPosition_inline",
                   "Gets the position of the center point of the camera.  @return The position of the center point of the camera.",
            ],
            [
                   "Gets the position of the center point of the camera.  @return The position of the center point of the camera.",
                   1,
                   "/Widgets/DJIMap_DJICameraPosition.html",
                   "#DJIMap_DJICameraPosition_getPosition_inline",
                   "",
            ],
            [
                   "getZoom",
                   2,
                   "/Widgets/DJIMap_DJICameraPosition.html",
                   "#DJIMap_DJICameraPosition_getZoom_inline",
                   "Gets the zoom level of the camera.  @return The zoom level of the camera.",
            ],
            [
                   "Gets the zoom level of the camera.  @return The zoom level of the camera.",
                   1,
                   "/Widgets/DJIMap_DJICameraPosition.html",
                   "#DJIMap_DJICameraPosition_getZoom_inline",
                   "",
            ],
            [
                   "getTilt",
                   2,
                   "/Widgets/DJIMap_DJICameraPosition.html",
                   "#DJIMap_DJICameraPosition_getTilt_inline",
                   "Gets the tilt of the camera.  @return The tilt of the camera.",
            ],
            [
                   "Gets the tilt of the camera.  @return The tilt of the camera.",
                   1,
                   "/Widgets/DJIMap_DJICameraPosition.html",
                   "#DJIMap_DJICameraPosition_getTilt_inline",
                   "",
            ],
            [
                   "getBearing",
                   2,
                   "/Widgets/DJIMap_DJICameraPosition.html",
                   "#DJIMap_DJICameraPosition_getBearing_inline",
                   "Gets the orientation of the camera.  @return The orientation of the camera.",
            ],
            [
                   "Gets the orientation of the camera.  @return The orientation of the camera.",
                   1,
                   "/Widgets/DJIMap_DJICameraPosition.html",
                   "#DJIMap_DJICameraPosition_getBearing_inline",
                   "",
            ],
            [
                   "DJICameraUpdateFactory",
                   2,
                   "/Widgets/DJIMap_DJICameraUpdateFactory.html",
                   "",
                   "Factory for creating DJICameraUpdate objects.",
            ],
            [
                   "Factory for creating DJICameraUpdate objects.",
                   1,
                   "/Widgets/DJIMap_DJICameraUpdateFactory.html",
                   "",
                   "",
            ],
            [
                   "newCameraPosition",
                   2,
                   "/Widgets/DJIMap_DJICameraUpdateFactory.html",
                   "#DJIMap_DJICameraUpdateFactory_newCameraPosition_inline",
                   "Creates a camera update that moves the center of the screen to the `DJICameraPosition`.  @param cameraPosition The new position of the camera.  @return A DJICameraUpdate object.",
            ],
            [
                   "Creates a camera update that moves the center of the screen to the `DJICameraPosition`.  @param cameraPosition The new position of the camera.  @return A DJICameraUpdate object.",
                   1,
                   "/Widgets/DJIMap_DJICameraUpdateFactory.html",
                   "#DJIMap_DJICameraUpdateFactory_newCameraPosition_inline",
                   "",
            ],
            [
                   "newLatLngBounds",
                   2,
                   "/Widgets/DJIMap_DJICameraUpdateFactory.html",
                   "#DJIMap_DJICameraUpdateFactory_newLatLngBoundsWithPadding_inline",
                   "Creates a camera update that moves the center of the screen to the `DJILatLngBounds` at the given zoom level or with the given padding.  @param bounds The bounding box. @param zoom The zoom level. @param padding Additional space in pixels to leave between the bounds and the edge.  @return A DJICameraUpdate object.",
            ],
            [
                   "Creates a camera update that moves the center of the screen to the `DJILatLngBounds` at the given zoom level or with the given padding.  @param bounds The bounding box. @param zoom The zoom level. @param padding Additional space in pixels to leave between the bounds and the edge.  @return A DJICameraUpdate object.",
                   1,
                   "/Widgets/DJIMap_DJICameraUpdateFactory.html",
                   "#DJIMap_DJICameraUpdateFactory_newLatLngBoundsWithPadding_inline",
                   "",
            ],
            [
                   "newLatLngBounds",
                   2,
                   "/Widgets/DJIMap_DJICameraUpdateFactory.html",
                   "#DJIMap_DJICameraUpdateFactory_newLatLngBounds_inline",
                   "Creates a camera update that moves the center of the screen to the `DJILatLngBounds` at the given zoom level.  @param bounds The bounding box. @param zoom The zoom level.  @return A DJICameraUpdate object.",
            ],
            [
                   "Creates a camera update that moves the center of the screen to the `DJILatLngBounds` at the given zoom level.  @param bounds The bounding box. @param zoom The zoom level.  @return A DJICameraUpdate object.",
                   1,
                   "/Widgets/DJIMap_DJICameraUpdateFactory.html",
                   "#DJIMap_DJICameraUpdateFactory_newLatLngBounds_inline",
                   "",
            ],
            [
                   "DJIBitmapDescriptorFactory",
                   2,
                   "/Widgets/DJIMap_DJIBitmapDescriptorFactory.html",
                   "",
                   "Used to create instances of DJIBitmapDescriptor.",
            ],
            [
                   "Used to create instances of DJIBitmapDescriptor.",
                   1,
                   "/Widgets/DJIMap_DJIBitmapDescriptorFactory.html",
                   "",
                   "",
            ],
            [
                   "fromAsset",
                   2,
                   "/Widgets/DJIMap_DJIBitmapDescriptorFactory.html",
                   "#DJIMap_DJIBitmapDescriptorFactory_fromAsset_inline",
                   "Creates a DJIBitmapDescriptor using the name of a bitmap file in the assets directory.  @param assetName The name of a bitmap in the assets directory.  @return A DJIBitmapDescriptor object.",
            ],
            [
                   "Creates a DJIBitmapDescriptor using the name of a bitmap file in the assets directory.  @param assetName The name of a bitmap in the assets directory.  @return A DJIBitmapDescriptor object.",
                   1,
                   "/Widgets/DJIMap_DJIBitmapDescriptorFactory.html",
                   "#DJIMap_DJIBitmapDescriptorFactory_fromAsset_inline",
                   "",
            ],
            [
                   "fromBitmap",
                   2,
                   "/Widgets/DJIMap_DJIBitmapDescriptorFactory.html",
                   "#DJIMap_DJIBitmapDescriptorFactory_fromBitmap_inline",
                   "Creates a DJIBitmapDescriptor from the given Bitmap.  @param image A Bitmap image.  @return A `DJIBitmapDescriptor object.",
            ],
            [
                   "Creates a DJIBitmapDescriptor from the given Bitmap.  @param image A Bitmap image.  @return A `DJIBitmapDescriptor object.",
                   1,
                   "/Widgets/DJIMap_DJIBitmapDescriptorFactory.html",
                   "#DJIMap_DJIBitmapDescriptorFactory_fromBitmap_inline",
                   "",
            ],
            [
                   "fromFile",
                   2,
                   "/Widgets/DJIMap_DJIBitmapDescriptorFactory.html",
                   "#DJIMap_DJIBitmapDescriptorFactory_fromFile_inline",
                   "Creates a DJIBitmapDescriptor using the name of a bitmap image file located in the internal storage.  @param fileName The name of the bitmap image file.  @return A DJIBitmapDescriptor object.",
            ],
            [
                   "Creates a DJIBitmapDescriptor using the name of a bitmap image file located in the internal storage.  @param fileName The name of the bitmap image file.  @return A DJIBitmapDescriptor object.",
                   1,
                   "/Widgets/DJIMap_DJIBitmapDescriptorFactory.html",
                   "#DJIMap_DJIBitmapDescriptorFactory_fromFile_inline",
                   "",
            ],
            [
                   "fromPath",
                   2,
                   "/Widgets/DJIMap_DJIBitmapDescriptorFactory.html",
                   "#DJIMap_DJIBitmapDescriptorFactory_fromPath_inline",
                   "Creates a DJIBitmapDescriptor from the absolute file path of a bitmap image.  @param path The absolute file path of the bitmap image file.  @return A `DJIBitmapDescriptor object.",
            ],
            [
                   "Creates a DJIBitmapDescriptor from the absolute file path of a bitmap image.  @param path The absolute file path of the bitmap image file.  @return A `DJIBitmapDescriptor object.",
                   1,
                   "/Widgets/DJIMap_DJIBitmapDescriptorFactory.html",
                   "#DJIMap_DJIBitmapDescriptorFactory_fromPath_inline",
                   "",
            ],
            [
                   "fromResource",
                   2,
                   "/Widgets/DJIMap_DJIBitmapDescriptorFactory.html",
                   "#DJIMap_DJIBitmapDescriptorFactory_fromResource_inline",
                   "Creates a DJIBitmapDescriptor from the resource id of a bitmap image.  @param resourceId The resource id of a bitmap image.  @return A DJIBitmapDescriptor object.",
            ],
            [
                   "Creates a DJIBitmapDescriptor from the resource id of a bitmap image.  @param resourceId The resource id of a bitmap image.  @return A DJIBitmapDescriptor object.",
                   1,
                   "/Widgets/DJIMap_DJIBitmapDescriptorFactory.html",
                   "#DJIMap_DJIBitmapDescriptorFactory_fromResource_inline",
                   "",
            ],
            [
                   "DJILatLng",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "",
                   "Represents a point which includes latitude, longitude, altitude,  and accuracy info on a map.",
            ],
            [
                   "Represents a point which includes latitude, longitude, altitude,  and accuracy info on a map.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "",
                   "",
            ],
            [
                   "DJILatLng",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_constructor1_inline",
                   "Creates a new `DJILatLng` object with the coordinates (latitude, longitude).  @param latitude The latitude of the map point. @param longitude The longitude of the map point.",
            ],
            [
                   "Creates a new `DJILatLng` object with the coordinates (latitude, longitude).  @param latitude The latitude of the map point. @param longitude The longitude of the map point.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_constructor1_inline",
                   "",
            ],
            [
                   "DJILatLng",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_constructor2_inline",
                   "Creates a new `DJILatLng` object with the coordinates (latitude, longitude and altitude).  @param latitude The latitude of the map point. @param longitude The longitude of the map point. @param altitude The altitude of the map point.",
            ],
            [
                   "Creates a new `DJILatLng` object with the coordinates (latitude, longitude and altitude).  @param latitude The latitude of the map point. @param longitude The longitude of the map point. @param altitude The altitude of the map point.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_constructor2_inline",
                   "",
            ],
            [
                   "DJILatLng",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_constructor3_inline",
                   "Creates a new `DJILatLng` object with four related parameters.  @param latitude The latitude of the map point. @param longitude The longitude of the map point. @param altitude The altitude of the map point. @param accuracy The accuracy of the map point.",
            ],
            [
                   "Creates a new `DJILatLng` object with four related parameters.  @param latitude The latitude of the map point. @param longitude The longitude of the map point. @param altitude The altitude of the map point. @param accuracy The accuracy of the map point.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_constructor3_inline",
                   "",
            ],
            [
                   "DJILatLng",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_constructor4_inline",
                   "Creates a new LatLng object with five related parameters.  @param latitude The latitude of the map point. @param longitude The longitude of the map point. @param altitude The altitude of the map point. @param accuracy The accuracy of the map point. @param time The time of the map point.",
            ],
            [
                   "Creates a new LatLng object with five related parameters.  @param latitude The latitude of the map point. @param longitude The longitude of the map point. @param altitude The altitude of the map point. @param accuracy The accuracy of the map point. @param time The time of the map point.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_constructor4_inline",
                   "",
            ],
            [
                   "DJILatLng",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_constructor5_inline",
                   "Creates a new LatLng object with five related parameters.  @param latitude The latitude of the map point. @param longitude The longitude of the map point. @param altitude The altitude of the map point. @param accuracy The accuracy of the map point. @param time The time of the map point. @param elapsedRealtimeNanos The time in elapsed real-time of the map point.",
            ],
            [
                   "Creates a new LatLng object with five related parameters.  @param latitude The latitude of the map point. @param longitude The longitude of the map point. @param altitude The altitude of the map point. @param accuracy The accuracy of the map point. @param time The time of the map point. @param elapsedRealtimeNanos The time in elapsed real-time of the map point.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_constructor5_inline",
                   "",
            ],
            [
                   "DJILatLng",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_constructor6_inline",
                   "Creates a new `DJILatLng` object with a `DJILatLng` parameter.  @param latLng A `DJILatLng` object",
            ],
            [
                   "Creates a new `DJILatLng` object with a `DJILatLng` parameter.  @param latLng A `DJILatLng` object",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_constructor6_inline",
                   "",
            ],
            [
                   "getLatitude",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_getLatitude_inline",
                   "Gets the latitude of the map point.  @return The latitude of the map point.",
            ],
            [
                   "Gets the latitude of the map point.  @return The latitude of the map point.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_getLatitude_inline",
                   "",
            ],
            [
                   "setLatitude",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_setLatitude_inline",
                   "Sets the latitude of the map point.  @param latitude The latitude of the map point.",
            ],
            [
                   "Sets the latitude of the map point.  @param latitude The latitude of the map point.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_setLatitude_inline",
                   "",
            ],
            [
                   "getLongitude",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_getLongitude_inline",
                   "Gets the longitude of the map point.  @return The longitude of the map point.",
            ],
            [
                   "Gets the longitude of the map point.  @return The longitude of the map point.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_getLongitude_inline",
                   "",
            ],
            [
                   "setLongitude",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_setLongitude_inline",
                   "Sets the longitude of the map point.  @param longitude The longitude of the map point.",
            ],
            [
                   "Sets the longitude of the map point.  @param longitude The longitude of the map point.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_setLongitude_inline",
                   "",
            ],
            [
                   "getAltitude",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_getAltitude_inline",
                   "Gets the altitude of the map point.  @return The altitude of the map point.",
            ],
            [
                   "Gets the altitude of the map point.  @return The altitude of the map point.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_getAltitude_inline",
                   "",
            ],
            [
                   "getAccuracy",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_getAccuracy_inline",
                   "Gets the accuracy of the map point.  @return The accuracy of the map point.",
            ],
            [
                   "Gets the accuracy of the map point.  @return The accuracy of the map point.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_getAccuracy_inline",
                   "",
            ],
            [
                   "setAccuracy",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_setAccuracy_inline",
                   "Sets the accuracy of the map point.  @param accuracy The accuracy of the map point.",
            ],
            [
                   "Sets the accuracy of the map point.  @param accuracy The accuracy of the map point.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_setAccuracy_inline",
                   "",
            ],
            [
                   "getTime",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_getTime_inline",
                   "Gets the time of the map point.  @return The time of the map point.",
            ],
            [
                   "Gets the time of the map point.  @return The time of the map point.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_getTime_inline",
                   "",
            ],
            [
                   "setTime",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_setTime_inline",
                   "Sets the time of the map point.  @param time The accuracy of the point.",
            ],
            [
                   "Sets the time of the map point.  @param time The accuracy of the point.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_setTime_inline",
                   "",
            ],
            [
                   "getElapsedRealtimeNanos",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_getElapsedRealtimeNanos_inline",
                   "Gets the time in elapsed real-time of the map point.  @return The time in elapsed real-time of the point.",
            ],
            [
                   "Gets the time in elapsed real-time of the map point.  @return The time in elapsed real-time of the point.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_getElapsedRealtimeNanos_inline",
                   "",
            ],
            [
                   "setElapsedRealtimeNanos",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_setElapsedRealtimeNanos_inline",
                   "Sets the time in elapsed real-time of the map point.  @param elapsedRealtimeNanos The time in elapsed real-time of the point.",
            ],
            [
                   "Sets the time in elapsed real-time of the map point.  @param elapsedRealtimeNanos The time in elapsed real-time of the point.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_setElapsedRealtimeNanos_inline",
                   "",
            ],
            [
                   "isAvailable",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_isAvailable_inline",
                   "Determines if this map point is valid. A valid map point has a latitude in the range [-90,90], has a longitude in the range [-180,180], and is not (0,0).  @return `true` if this map point is valid.",
            ],
            [
                   "Determines if this map point is valid. A valid map point has a latitude in the range [-90,90], has a longitude in the range [-180,180], and is not (0,0).  @return `true` if this map point is valid.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_isAvailable_inline",
                   "",
            ],
            [
                   "DJILatLngBounds",
                   2,
                   "/Widgets/DJIMap_DJILatLngBounds.html",
                   "",
                   "Represents a rectangle defined by the coordinates of its northeast and southwest corners.",
            ],
            [
                   "Represents a rectangle defined by the coordinates of its northeast and southwest corners.",
                   1,
                   "/Widgets/DJIMap_DJILatLngBounds.html",
                   "",
                   "",
            ],
            [
                   "fromLatLngs",
                   2,
                   "/Widgets/DJIMap_DJILatLngBounds.html",
                   "#DJIMap_DJILatLngBounds_fromLatLngs_inline",
                   "Creates a new DJILatLngBounds defined by the minimum and maximum coordinate values in the given list.  @param latLngs A list of coordinates.  @return A `DJILatLngBounds` object.",
            ],
            [
                   "Creates a new DJILatLngBounds defined by the minimum and maximum coordinate values in the given list.  @param latLngs A list of coordinates.  @return A `DJILatLngBounds` object.",
                   1,
                   "/Widgets/DJIMap_DJILatLngBounds.html",
                   "#DJIMap_DJILatLngBounds_fromLatLngs_inline",
                   "",
            ],
            [
                   "DJIMapViewInternal",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIMapViewInternal_inline",
                   "A view which displays a map. All the life cycle methods must be forwarded from the Activity or Fragment containing this view to the corresponding ones in this class. In particular, the following methods must be forwarded:     - `onCreate`     - `onStart`     - `onResume`     - `onPause`     - `onStop`     - `onDestroy`     - `onSaveInstanceState`     - `onLowMemory`",
            ],
            [
                   "A view which displays a map. All the life cycle methods must be forwarded from the Activity or Fragment containing this view to the corresponding ones in this class. In particular, the following methods must be forwarded:     - `onCreate`     - `onStart`     - `onResume`     - `onPause`     - `onStop`     - `onDestroy`     - `onSaveInstanceState`     - `onLowMemory`",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIMapViewInternal_inline",
                   "",
            ],
            [
                   "onCreate",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIMapViewInternal_onCreate_inline",
                   "Must be called from the parent Activity/Fragment's corresponding method.  @param saveInstanceState Bundle which contains the saved instance state.",
            ],
            [
                   "Must be called from the parent Activity/Fragment's corresponding method.  @param saveInstanceState Bundle which contains the saved instance state.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIMapViewInternal_onCreate_inline",
                   "",
            ],
            [
                   "onStart",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIMapViewInternal_onStart_inline",
                   "Must be called from the parent Activity/Fragment's corresponding method.",
            ],
            [
                   "Must be called from the parent Activity/Fragment's corresponding method.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIMapViewInternal_onStart_inline",
                   "",
            ],
            [
                   "onResume",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIMapViewInternal_onResume_inline",
                   "Must be called from the parent Activity/Fragment's corresponding method.",
            ],
            [
                   "Must be called from the parent Activity/Fragment's corresponding method.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIMapViewInternal_onResume_inline",
                   "",
            ],
            [
                   "onPause",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIMapViewInternal_onPause_inline",
                   "Must be called from the parent Activity/Fragment's corresponding method.",
            ],
            [
                   "Must be called from the parent Activity/Fragment's corresponding method.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIMapViewInternal_onPause_inline",
                   "",
            ],
            [
                   "onStop",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIMapViewInternal_onStop_inline",
                   "Must be called from the parent Activity/Fragment's corresponding method.",
            ],
            [
                   "Must be called from the parent Activity/Fragment's corresponding method.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIMapViewInternal_onStop_inline",
                   "",
            ],
            [
                   "onDestroy",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIMapViewInternal_onDestroy_inline",
                   "Must be called from the parent Activity/Fragment's corresponding method.",
            ],
            [
                   "Must be called from the parent Activity/Fragment's corresponding method.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIMapViewInternal_onDestroy_inline",
                   "",
            ],
            [
                   "onSaveInstanceState",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIMapViewInternal_onSaveInstanceState_inline",
                   "Must be called from the parent Activity/Fragment's corresponding method.  @param outState Bundle in which to place your saved state.",
            ],
            [
                   "Must be called from the parent Activity/Fragment's corresponding method.  @param outState Bundle in which to place your saved state.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIMapViewInternal_onSaveInstanceState_inline",
                   "",
            ],
            [
                   "onLowMemory",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIMapViewInternal_onLowMemory_inline",
                   "Must be called from the parent Activity/Fragment's corresponding method.",
            ],
            [
                   "Must be called from the parent Activity/Fragment's corresponding method.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIMapViewInternal_onLowMemory_inline",
                   "",
            ],
            [
                   "getDJIMapAsync",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIMapViewInternal_getDJIMapAsync_inline",
                   "Initializes the map view.  @param callback The callback that will be invoked when the map is ready to be used.",
            ],
            [
                   "Initializes the map view.  @param callback The callback that will be invoked when the map is ready to be used.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_DJIMapViewInternal_getDJIMapAsync_inline",
                   "",
            ],
            [
                   "DJIMapView",
                   2,
                   "/Widgets/DJIMap_DJIMapView.html",
                   "",
                   "A View that contains a `DJIMapViewInternal` and initializes it based on the given defaultProvider attribute. If no attribute is given, the provider will be AMaps. All the life cycle methods must be forwarded from the Activity or Fragment containing this view to the corresponding ones in this class. In particular, the following methods must be forwarded:     - `onCreate`     - `onStart`     - `onResume`     - `onPause`     - `onStop`     - `onDestroy`     - `onSaveInstanceState`     - `onLowMemory`",
            ],
            [
                   "A View that contains a `DJIMapViewInternal` and initializes it based on the given defaultProvider attribute. If no attribute is given, the provider will be AMaps. All the life cycle methods must be forwarded from the Activity or Fragment containing this view to the corresponding ones in this class. In particular, the following methods must be forwarded:     - `onCreate`     - `onStart`     - `onResume`     - `onPause`     - `onStop`     - `onDestroy`     - `onSaveInstanceState`     - `onLowMemory`",
                   1,
                   "/Widgets/DJIMap_DJIMapView.html",
                   "",
                   "",
            ],
            [
                   "onCreate",
                   2,
                   "/Widgets/DJIMap_DJIMapView.html",
                   "#DJIMap_DJIMapView_onCreate_inline",
                   "Must be called from the parent Activity/Fragment's corresponding method.  @param savedInstanceState Bundle which contains the saved instance state.",
            ],
            [
                   "Must be called from the parent Activity/Fragment's corresponding method.  @param savedInstanceState Bundle which contains the saved instance state.",
                   1,
                   "/Widgets/DJIMap_DJIMapView.html",
                   "#DJIMap_DJIMapView_onCreate_inline",
                   "",
            ],
            [
                   "onStart",
                   2,
                   "/Widgets/DJIMap_DJIMapView.html",
                   "#DJIMap_DJIMapView_onStart_inline",
                   "Must be called from the parent Activity/Fragment's corresponding method.",
            ],
            [
                   "Must be called from the parent Activity/Fragment's corresponding method.",
                   1,
                   "/Widgets/DJIMap_DJIMapView.html",
                   "#DJIMap_DJIMapView_onStart_inline",
                   "",
            ],
            [
                   "onResume",
                   2,
                   "/Widgets/DJIMap_DJIMapView.html",
                   "#DJIMap_DJIMapView_onResume_inline",
                   "Must be called from the parent Activity/Fragment's corresponding method.",
            ],
            [
                   "Must be called from the parent Activity/Fragment's corresponding method.",
                   1,
                   "/Widgets/DJIMap_DJIMapView.html",
                   "#DJIMap_DJIMapView_onResume_inline",
                   "",
            ],
            [
                   "onPause",
                   2,
                   "/Widgets/DJIMap_DJIMapView.html",
                   "#DJIMap_DJIMapView_onPause_inline",
                   "Must be called from the parent Activity/Fragment's corresponding method.",
            ],
            [
                   "Must be called from the parent Activity/Fragment's corresponding method.",
                   1,
                   "/Widgets/DJIMap_DJIMapView.html",
                   "#DJIMap_DJIMapView_onPause_inline",
                   "",
            ],
            [
                   "onStop",
                   2,
                   "/Widgets/DJIMap_DJIMapView.html",
                   "#DJIMap_DJIMapView_onStop_inline",
                   "Must be called from the parent Activity/Fragment's corresponding method.",
            ],
            [
                   "Must be called from the parent Activity/Fragment's corresponding method.",
                   1,
                   "/Widgets/DJIMap_DJIMapView.html",
                   "#DJIMap_DJIMapView_onStop_inline",
                   "",
            ],
            [
                   "onDestroy",
                   2,
                   "/Widgets/DJIMap_DJIMapView.html",
                   "#DJIMap_DJIMapView_onDestroy_inline",
                   "Must be called from the parent Activity/Fragment's corresponding method.",
            ],
            [
                   "Must be called from the parent Activity/Fragment's corresponding method.",
                   1,
                   "/Widgets/DJIMap_DJIMapView.html",
                   "#DJIMap_DJIMapView_onDestroy_inline",
                   "",
            ],
            [
                   "onSaveInstanceState",
                   2,
                   "/Widgets/DJIMap_DJIMapView.html",
                   "#DJIMap_DJIMapView_onSaveInstanceState_inline",
                   "Must be called from the parent Activity/Fragment's corresponding method.  @param outState Bundle in which to place your saved state.",
            ],
            [
                   "Must be called from the parent Activity/Fragment's corresponding method.  @param outState Bundle in which to place your saved state.",
                   1,
                   "/Widgets/DJIMap_DJIMapView.html",
                   "#DJIMap_DJIMapView_onSaveInstanceState_inline",
                   "",
            ],
            [
                   "onLowMemory",
                   2,
                   "/Widgets/DJIMap_DJIMapView.html",
                   "#DJIMap_DJIMapView_onLowMemory_inline",
                   "Must be called from the parent Activity/Fragment's corresponding method.",
            ],
            [
                   "Must be called from the parent Activity/Fragment's corresponding method.",
                   1,
                   "/Widgets/DJIMap_DJIMapView.html",
                   "#DJIMap_DJIMapView_onLowMemory_inline",
                   "",
            ],
            [
                   "getDJIMapAsync",
                   2,
                   "/Widgets/DJIMap_DJIMapView.html",
                   "#DJIMap_DJIMapView_getDJIMapAsync_inline",
                   "Initializes the map view.  @param callback The callback that will be invoked when the map is ready to be used.",
            ],
            [
                   "Initializes the map view.  @param callback The callback that will be invoked when the map is ready to be used.",
                   1,
                   "/Widgets/DJIMap_DJIMapView.html",
                   "#DJIMap_DJIMapView_getDJIMapAsync_inline",
                   "",
            ],
            [
                   "OnDJIMapReadyCallback",
                   2,
                   "/Widgets/DJIMap_DJIMapView.html",
                   "#DJIMap_DJIMapView_OnDJIMapReadyCallbackInterface_inline",
                   "Callback for the map ready event.",
            ],
            [
                   "Callback for the map ready event.",
                   1,
                   "/Widgets/DJIMap_DJIMapView.html",
                   "#DJIMap_DJIMapView_OnDJIMapReadyCallbackInterface_inline",
                   "",
            ],
            [
                   "onDJIMapReady",
                   2,
                   "/Widgets/DJIMap_DJIMapView.html",
                   "#DJIMap_DJIMapView_OnDJIMapReadyCallback_inline",
                   "A callback indicating that the DJIMap is ready.  @param map The DJIMap.",
            ],
            [
                   "A callback indicating that the DJIMap is ready.  @param map The DJIMap.",
                   1,
                   "/Widgets/DJIMap_DJIMapView.html",
                   "#DJIMap_DJIMapView_OnDJIMapReadyCallback_inline",
                   "",
            ],
            [
                   "MapProvider",
                   2,
                   "/Widgets/DJIMap_MapProvider.html",
                   "",
                   "Provides utility methods for creating map views.",
            ],
            [
                   "Provides utility methods for creating map views.",
                   1,
                   "/Widgets/DJIMap_MapProvider.html",
                   "",
                   "",
            ],
            [
                   "dispatchMapViewRequest",
                   2,
                   "/Widgets/DJIMap_MapProvider.html",
                   "#DJIMap_MapProvider_dispatchMapViewRequest_inline",
                   "Dispatch a request to create a `DJIMapViewInternal` based on the given MapkitOptions. If MapkitOptions is null, a the default options will be used.  @param context A context object. @param mapkitOptions A set of options for initializing the map view.  @return A `DJIMapViewInternal` object.",
            ],
            [
                   "Dispatch a request to create a `DJIMapViewInternal` based on the given MapkitOptions. If MapkitOptions is null, a the default options will be used.  @param context A context object. @param mapkitOptions A set of options for initializing the map view.  @return A `DJIMapViewInternal` object.",
                   1,
                   "/Widgets/DJIMap_MapProvider.html",
                   "#DJIMap_MapProvider_dispatchMapViewRequest_inline",
                   "",
            ],
            [
                   "Mapkit",
                   2,
                   "/Widgets/DJIMap_Mapkit.html",
                   "",
                   "Contains methods to set information that is required for map initialization.",
            ],
            [
                   "Contains methods to set information that is required for map initialization.",
                   1,
                   "/Widgets/DJIMap_Mapkit.html",
                   "",
                   "",
            ],
            [
                   "mapboxAccessToken",
                   2,
                   "/Widgets/DJIMap_Mapkit.html",
                   "#DJIMap_Mapkit_mapboxAccessToken_inline",
                   "Sets the mapbox access token. This must be called before fetching the Mapbox map view.  @param accessToken The mapbox access token.",
            ],
            [
                   "Sets the mapbox access token. This must be called before fetching the Mapbox map view.  @param accessToken The mapbox access token.",
                   1,
                   "/Widgets/DJIMap_Mapkit.html",
                   "#DJIMap_Mapkit_mapboxAccessToken_inline",
                   "",
            ],
            [
                   "inMainlandChina",
                   2,
                   "/Widgets/DJIMap_Mapkit.html",
                   "#DJIMap_Mapkit_inMainlandChina_inline",
                   "Sets whether the drone's location is in mainland China. This information is used for GPS offset, and does not affect which map is used.  @param inMainlandChina `true` if the user is in mainland China.",
            ],
            [
                   "Sets whether the drone's location is in mainland China. This information is used for GPS offset, and does not affect which map is used.  @param inMainlandChina `true` if the user is in mainland China.",
                   1,
                   "/Widgets/DJIMap_Mapkit.html",
                   "#DJIMap_Mapkit_inMainlandChina_inline",
                   "",
            ],
            [
                   "inHongKong",
                   2,
                   "/Widgets/DJIMap_Mapkit.html",
                   "#DJIMap_Mapkit_inHongKong_inline",
                   "Sets whether the drone's location is in Hong Kong. This information is used for GPS offset, and does not affect which map is used.  @param inHongKong `true` if the user is in Hong Kong.",
            ],
            [
                   "Sets whether the drone's location is in Hong Kong. This information is used for GPS offset, and does not affect which map is used.  @param inHongKong `true` if the user is in Hong Kong.",
                   1,
                   "/Widgets/DJIMap_Mapkit.html",
                   "#DJIMap_Mapkit_inHongKong_inline",
                   "",
            ],
            [
                   "inMacau",
                   2,
                   "/Widgets/DJIMap_Mapkit.html",
                   "#DJIMap_Mapkit_inMacau_inline",
                   "Sets whether the drone's location is in Macau. This information is used for GPS offset, and does not affect which map is used.  @param inMacau `true` if the user is in Macau.",
            ],
            [
                   "Sets whether the drone's location is in Macau. This information is used for GPS offset, and does not affect which map is used.  @param inMacau `true` if the user is in Macau.",
                   1,
                   "/Widgets/DJIMap_Mapkit.html",
                   "#DJIMap_Mapkit_inMacau_inline",
                   "",
            ],
            [
                   "AccessLockerWidget",
                   2,
                   "/Widgets/DUXAccessLockerWidget.html",
                   "",
                   "The access locker widget is used to manage the password protection status of the aircraft. When password protection is enabled, data on the aircraft is only accessible to the user after entering the password. Tapping on the widget will bring up prompts according to the state of the access locker.",
            ],
            [
                   "The access locker widget is used to manage the password protection status of the aircraft. When password protection is enabled, data on the aircraft is only accessible to the user after entering the password. Tapping on the widget will bring up prompts according to the state of the access locker.",
                   1,
                   "/Widgets/DUXAccessLockerWidget.html",
                   "",
                   "",
            ],
            [
                   "AutoExposureLockWidget",
                   2,
                   "/Widgets/AutoExposureLockWidget.html",
                   "",
                   "Display: A lock icon with two states shows whether the camera's AE (auto exposure) is locked or not.  Usage: Preferred Aspect Ratio: 1:1  Interaction: Tapping the lock icon will toggle the value of AE lock.",
            ],
            [
                   "Display: A lock icon with two states shows whether the camera's AE (auto exposure) is locked or not.  Usage: Preferred Aspect Ratio: 1:1  Interaction: Tapping the lock icon will toggle the value of AE lock.",
                   1,
                   "/Widgets/AutoExposureLockWidget.html",
                   "",
                   "",
            ],
            [
                   "onAELockChange",
                   2,
                   "/Widgets/AutoExposureLockWidget.html",
                   "#AutoExposureLockWidget_onAELockChange_inline",
                   "Updates when AE Lock status has changed  @param isLocked `true` means AE is locked, `false` otherwise.",
            ],
            [
                   "Updates when AE Lock status has changed  @param isLocked `true` means AE is locked, `false` otherwise.",
                   1,
                   "/Widgets/AutoExposureLockWidget.html",
                   "#AutoExposureLockWidget_onAELockChange_inline",
                   "",
            ],
            [
                   "performAELockAction",
                   2,
                   "/Widgets/AutoExposureLockWidget.html",
                   "#AutoExposureLockWidget_performAELockAction_inline",
                   "Performs auto exposure lock action @see #`onAELockActionResult` to listen on the action result by overridding  @param isLock `true` if auto exposure is to be locked",
            ],
            [
                   "Performs auto exposure lock action @see #`onAELockActionResult` to listen on the action result by overridding  @param isLock `true` if auto exposure is to be locked",
                   1,
                   "/Widgets/AutoExposureLockWidget.html",
                   "#AutoExposureLockWidget_performAELockAction_inline",
                   "",
            ],
            [
                   "onAELockActionResult",
                   2,
                   "/Widgets/AutoExposureLockWidget.html",
                   "#AutoExposureLockWidget_onAELockActionResult_inline",
                   "Triggers when AE Lock action finishes  @param error error object, or null if no error has occurred",
            ],
            [
                   "Triggers when AE Lock action finishes  @param error error object, or null if no error has occurred",
                   1,
                   "/Widgets/AutoExposureLockWidget.html",
                   "#AutoExposureLockWidget_onAELockActionResult_inline",
                   "",
            ],
            [
                   "PreFlightStatusWidget",
                   2,
                   "/Widgets/PreFlightStatusWidget.html",
                   "",
                   "Display: The text shows a summary of the preflight checklist situation of the aircraft. The color of the background changes depends on how severe the situation is. Green indicates everything is ok. Yellow indicates something is at warning level. Red indicates something is wrong and aircraft won't take off.  Usage: Preferred Aspect Ratio: 238:33.  Interaction: Tapping on status text will toggle between show and hide `PreFlightCheckListPanel`.",
            ],
            [
                   "Display: The text shows a summary of the preflight checklist situation of the aircraft. The color of the background changes depends on how severe the situation is. Green indicates everything is ok. Yellow indicates something is at warning level. Red indicates something is wrong and aircraft won't take off.  Usage: Preferred Aspect Ratio: 238:33.  Interaction: Tapping on status text will toggle between show and hide `PreFlightCheckListPanel`.",
                   1,
                   "/Widgets/PreFlightStatusWidget.html",
                   "",
                   "",
            ],
            [
                   "ConnectionWidget",
                   2,
                   "/Widgets/DUXConnectionWidget.html",
                   "",
                   "Display: Widget has two states representing by two icons. Red triangle icon indicates there is no connection with the product. Green circle icon indicates there is connection with the product.  Usage: Preferred Aspect Ratio: 1:1.",
            ],
            [
                   "Display: Widget has two states representing by two icons. Red triangle icon indicates there is no connection with the product. Green circle icon indicates there is connection with the product.  Usage: Preferred Aspect Ratio: 1:1.",
                   1,
                   "/Widgets/DUXConnectionWidget.html",
                   "",
                   "",
            ],
            [
                   "FlightModeWidget",
                   2,
                   "/Widgets/DUXFlightModeWidget.html",
                   "",
                   "Display: The current flight mode of the aircraft. It uses the same language as DJIGo.  Usage: Preferred Aspect Ratio: 103:22.",
            ],
            [
                   "Display: The current flight mode of the aircraft. It uses the same language as DJIGo.  Usage: Preferred Aspect Ratio: 103:22.",
                   1,
                   "/Widgets/DUXFlightModeWidget.html",
                   "",
                   "",
            ],
            [
                   "onFlyControllerModeChange",
                   2,
                   "/Widgets/DUXFlightModeWidget.html",
                   "#DUXFlightModeWidget_onFlyControllerModeChange_inline",
                   "Triggers when flight controller's flight mode changes  @param flightMode Current flight controller flight mode",
            ],
            [
                   "Triggers when flight controller's flight mode changes  @param flightMode Current flight controller flight mode",
                   1,
                   "/Widgets/DUXFlightModeWidget.html",
                   "#DUXFlightModeWidget_onFlyControllerModeChange_inline",
                   "",
            ],
            [
                   "BatteryWidget",
                   2,
                   "/Widgets/DUXBatteryWidget.html",
                   "",
                   "<p> This widget is configurable to hide some of the subviews. Use the attribute excludeView with flags corresponding to each subview to hide.  Here are all the flags: <p> batteryIcon, percentage, singleVoltage, doubleVoltage</code>  <p> Note that multiple flags can be used simultaneously by logically OR'ing them. For example, if user wants to hide voltage subviews in the widget, it can be done by following two steps. <p> Define custom xmlns in its layout file: xmlns:custom=http://schemas.android.com/apk/res-auto</code> <p> Then, add following attribute to the BatteryWidget: custom:excludeView=singleVoltage|doubleVoltage</code>  Display: Battery icon has two color states. White color indicates everything is ok. Icon will change into red color if aircraft needs to return home, land immediately, or battery connection is bad. Text shows percentage of charge remaining in battery. Text also has two color states. Green indicates the percentage is ok. Red indicates the percentage is either below or just enough for returning home or landing immediately.  Usage: Preferred Aspect Ratio: 28:11.",
            ],
            [
                   "<p> This widget is configurable to hide some of the subviews. Use the attribute excludeView with flags corresponding to each subview to hide.  Here are all the flags: <p> batteryIcon, percentage, singleVoltage, doubleVoltage</code>  <p> Note that multiple flags can be used simultaneously by logically OR'ing them. For example, if user wants to hide voltage subviews in the widget, it can be done by following two steps. <p> Define custom xmlns in its layout file: xmlns:custom=http://schemas.android.com/apk/res-auto</code> <p> Then, add following attribute to the BatteryWidget: custom:excludeView=singleVoltage|doubleVoltage</code>  Display: Battery icon has two color states. White color indicates everything is ok. Icon will change into red color if aircraft needs to return home, land immediately, or battery connection is bad. Text shows percentage of charge remaining in battery. Text also has two color states. Green indicates the percentage is ok. Red indicates the percentage is either below or just enough for returning home or landing immediately.  Usage: Preferred Aspect Ratio: 28:11.",
                   1,
                   "/Widgets/DUXBatteryWidget.html",
                   "",
                   "",
            ],
            [
                   "onBatteryPercentageChange",
                   2,
                   "/Widgets/DUXBatteryWidget.html",
                   "#DUXBatteryWidget_onBatteryPercentageChange_inline",
                   "Triggers when battery percentage changes  @param percentage from 0 - 100; 0 means empty, 100 means full.",
            ],
            [
                   "Triggers when battery percentage changes  @param percentage from 0 - 100; 0 means empty, 100 means full.",
                   1,
                   "/Widgets/DUXBatteryWidget.html",
                   "#DUXBatteryWidget_onBatteryPercentageChange_inline",
                   "",
            ],
            [
                   "onBatteryConnectionStateChange",
                   2,
                   "/Widgets/DUXBatteryWidget.html",
                   "#DUXBatteryWidget_onBatteryConnectionStateChange_inline",
                   "Triggers when DJIBatteryConnectionState changes  @param status Normal, means the battery status is good, other values mean the battery is in error state.",
            ],
            [
                   "Triggers when DJIBatteryConnectionState changes  @param status Normal, means the battery status is good, other values mean the battery is in error state.",
                   1,
                   "/Widgets/DUXBatteryWidget.html",
                   "#DUXBatteryWidget_onBatteryConnectionStateChange_inline",
                   "",
            ],
            [
                   "onRemainingBatteryStateChange",
                   2,
                   "/Widgets/DUXBatteryWidget.html",
                   "#DUXBatteryWidget_onRemainingBatteryStateChange_inline",
                   "Triggers when warning level of battery changes  @param warningLevel Normal, means the battery energy is good. Low, means the battery energy is OK to go home. VeryLow, means the battery energy is only for landing immediately.",
            ],
            [
                   "Triggers when warning level of battery changes  @param warningLevel Normal, means the battery energy is good. Low, means the battery energy is OK to go home. VeryLow, means the battery energy is only for landing immediately.",
                   1,
                   "/Widgets/DUXBatteryWidget.html",
                   "#DUXBatteryWidget_onRemainingBatteryStateChange_inline",
                   "",
            ],
            [
                   "RemoteControlSignalWidget",
                   2,
                   "/Widgets/RemoteControllerSignalWidget.html",
                   "",
                   "Display: Icon with 5 vertical bars total represents the current signal strength between RC and aircraft.  Usage: Preferred Aspect Ratio: 19:11.",
            ],
            [
                   "Display: Icon with 5 vertical bars total represents the current signal strength between RC and aircraft.  Usage: Preferred Aspect Ratio: 19:11.",
                   1,
                   "/Widgets/RemoteControllerSignalWidget.html",
                   "",
                   "",
            ],
            [
                   "onRemoteControllerSignalStrengthChange",
                   2,
                   "/Widgets/RemoteControllerSignalWidget.html",
                   "#RemoteControllerSignalWidget_onRemoteControllerSignalStrengthChange_inline",
                   "Triggers when the value of remote controller signal strength changes  @param signalValue 0 - 100; 0 means no signal, 100 means the best signal strength.",
            ],
            [
                   "Triggers when the value of remote controller signal strength changes  @param signalValue 0 - 100; 0 means no signal, 100 means the best signal strength.",
                   1,
                   "/Widgets/RemoteControllerSignalWidget.html",
                   "#RemoteControllerSignalWidget_onRemoteControllerSignalStrengthChange_inline",
                   "",
            ],
            [
                   "GPSSignalWidget",
                   2,
                   "/Widgets/GPSSignalWidget.html",
                   "",
                   "Display: Small number on top of satellite icon shows the number of satellite available. 5 vertical bars represents the current GPS signal strength. Small 'R' letter shown or hidden indicates weather RTK is enabled or not.  Usage: Preferred Aspect Ratio: 21:11.",
            ],
            [
                   "Display: Small number on top of satellite icon shows the number of satellite available. 5 vertical bars represents the current GPS signal strength. Small 'R' letter shown or hidden indicates weather RTK is enabled or not.  Usage: Preferred Aspect Ratio: 21:11.",
                   1,
                   "/Widgets/GPSSignalWidget.html",
                   "",
                   "",
            ],
            [
                   "onGPSSignalStatusChange",
                   2,
                   "/Widgets/GPSSignalWidget.html",
                   "#GPSSignalWidget_onGPSSignalStatusChange_inline",
                   "Triggers when GPSSignalLevel changes  @param status status of the GPS signal quality. Level0 ~ Level5; Level0 means no signal, Level5 means the best signal quality.",
            ],
            [
                   "Triggers when GPSSignalLevel changes  @param status status of the GPS signal quality. Level0 ~ Level5; Level0 means no signal, Level5 means the best signal quality.",
                   1,
                   "/Widgets/GPSSignalWidget.html",
                   "#GPSSignalWidget_onGPSSignalStatusChange_inline",
                   "",
            ],
            [
                   "onRTKEnabled",
                   2,
                   "/Widgets/GPSSignalWidget.html",
                   "#GPSSignalWidget_onRTKEnabled_inline",
                   "Triggers when RTK is enabled or disabled.  @param isRTKEnabled `true` means the RTK is enabled, `false` otherwise",
            ],
            [
                   "Triggers when RTK is enabled or disabled.  @param isRTKEnabled `true` means the RTK is enabled, `false` otherwise",
                   1,
                   "/Widgets/GPSSignalWidget.html",
                   "#GPSSignalWidget_onRTKEnabled_inline",
                   "",
            ],
            [
                   "onSatelliteNumberChange",
                   2,
                   "/Widgets/GPSSignalWidget.html",
                   "#GPSSignalWidget_onSatelliteNumberChange_inline",
                   "Triggers when the number of available satellites changes  @param satelliteNum current number of available satellites",
            ],
            [
                   "Triggers when the number of available satellites changes  @param satelliteNum current number of available satellites",
                   1,
                   "/Widgets/GPSSignalWidget.html",
                   "#GPSSignalWidget_onSatelliteNumberChange_inline",
                   "",
            ],
            [
                   "VideoSignalWidget",
                   2,
                   "/Widgets/VideoSignalWidget.html",
                   "",
                   "Display: 5 vertical bars represents the current Video signal strength.  Usage: Preferred Aspect Ratio: 19:11.",
            ],
            [
                   "Display: 5 vertical bars represents the current Video signal strength.  Usage: Preferred Aspect Ratio: 19:11.",
                   1,
                   "/Widgets/VideoSignalWidget.html",
                   "",
                   "",
            ],
            [
                   "VisionWidget",
                   2,
                   "/Widgets/VisionWidget.html",
                   "",
                   "Display: Widget has two visual states to show if Visual Positioning is being used.   - White icon indicates Visual Positioning is being used.   - Red icon indicates Visual Positioning is not being used.  Usage: Preferred Aspect Ratio: 1:1.",
            ],
            [
                   "Display: Widget has two visual states to show if Visual Positioning is being used.   - White icon indicates Visual Positioning is being used.   - Red icon indicates Visual Positioning is not being used.  Usage: Preferred Aspect Ratio: 1:1.",
                   1,
                   "/Widgets/VisionWidget.html",
                   "",
                   "",
            ],
            [
                   "onIsVisionUsedChange",
                   2,
                   "/Widgets/VisionWidget.html",
                   "#VisionWidget_onIsVisionUsedChange_inline",
                   "Triggers when the vision detection state changes  @param visionSystemStatus The status of the vision system. NORMAL means the vision system is working and being used by flight controller. DISABLED or CLOSED means the vision sensor is not used. @param avoidanceSensorStatus The status of the omnidirectional obstacle avoidance sensors. ALL means all sensors are working. FRONT_BACK means only the front and back sensors are working. NONE or CLOSED means the avoidance sensors are not used.",
            ],
            [
                   "Triggers when the vision detection state changes  @param visionSystemStatus The status of the vision system. NORMAL means the vision system is working and being used by flight controller. DISABLED or CLOSED means the vision sensor is not used. @param avoidanceSensorStatus The status of the omnidirectional obstacle avoidance sensors. ALL means all sensors are working. FRONT_BACK means only the front and back sensors are working. NONE or CLOSED means the avoidance sensors are not used.",
                   1,
                   "/Widgets/VisionWidget.html",
                   "#VisionWidget_onIsVisionUsedChange_inline",
                   "",
            ],
            [
                   "VisionSystemStatus",
                   2,
                   "/Widgets/VisionWidget.html",
                   "#VisionWidget_VisionSystemStatus_inline",
                   "The status of the vision system.",
            ],
            [
                   "The status of the vision system.",
                   1,
                   "/Widgets/VisionWidget.html",
                   "#VisionWidget_VisionSystemStatus_inline",
                   "",
            ],
            [
                   "CLOSED",
                   2,
                   "/Widgets/VisionWidget.html",
                   "#VisionWidget_VisionSystemStatus_CLOSED_inline",
                   "User avoidance is disabled by the user.",
            ],
            [
                   "User avoidance is disabled by the user.",
                   1,
                   "/Widgets/VisionWidget.html",
                   "#VisionWidget_VisionSystemStatus_CLOSED_inline",
                   "",
            ],
            [
                   "DISABLED",
                   2,
                   "/Widgets/VisionWidget.html",
                   "#VisionWidget_VisionSystemStatus_DISABLED_inline",
                   "The vision system is disabled. This could be due to the flight mode, tap mode, tracking mode, or draw status.",
            ],
            [
                   "The vision system is disabled. This could be due to the flight mode, tap mode, tracking mode, or draw status.",
                   1,
                   "/Widgets/VisionWidget.html",
                   "#VisionWidget_VisionSystemStatus_DISABLED_inline",
                   "",
            ],
            [
                   "NORMAL",
                   2,
                   "/Widgets/VisionWidget.html",
                   "#VisionWidget_VisionSystemStatus_NORMAL_inline",
                   "The vision system is functioning normally.",
            ],
            [
                   "The vision system is functioning normally.",
                   1,
                   "/Widgets/VisionWidget.html",
                   "#VisionWidget_VisionSystemStatus_NORMAL_inline",
                   "",
            ],
            [
                   "AvoidanceSensorStatus",
                   2,
                   "/Widgets/VisionWidget.html",
                   "#VisionWidget_AvoidanceSensorStatus_inline",
                   "The status of the omnidirectional obstacle avoidance sensors.",
            ],
            [
                   "The status of the omnidirectional obstacle avoidance sensors.",
                   1,
                   "/Widgets/VisionWidget.html",
                   "#VisionWidget_AvoidanceSensorStatus_inline",
                   "",
            ],
            [
                   "ALL",
                   2,
                   "/Widgets/VisionWidget.html",
                   "#VisionWidget_AvoidanceSensorStatus_ALL_inline",
                   "All vision systems are available.",
            ],
            [
                   "All vision systems are available.",
                   1,
                   "/Widgets/VisionWidget.html",
                   "#VisionWidget_AvoidanceSensorStatus_ALL_inline",
                   "",
            ],
            [
                   "FRONT_BACK",
                   2,
                   "/Widgets/VisionWidget.html",
                   "#VisionWidget_AvoidanceSensorStatus_FRONT_BACK_inline",
                   "Only forward and backward vision systems are available. Left and right vision systems are only available in ActiveTrack mode and Tripod Mode.",
            ],
            [
                   "Only forward and backward vision systems are available. Left and right vision systems are only available in ActiveTrack mode and Tripod Mode.",
                   1,
                   "/Widgets/VisionWidget.html",
                   "#VisionWidget_AvoidanceSensorStatus_FRONT_BACK_inline",
                   "",
            ],
            [
                   "NONE",
                   2,
                   "/Widgets/VisionWidget.html",
                   "#VisionWidget_AvoidanceSensorStatus_NONE_inline",
                   "Vision systems are not available. This could be due to the flight mode or hardware failure.",
            ],
            [
                   "Vision systems are not available. This could be due to the flight mode or hardware failure.",
                   1,
                   "/Widgets/VisionWidget.html",
                   "#VisionWidget_AvoidanceSensorStatus_NONE_inline",
                   "",
            ],
            [
                   "CLOSED",
                   2,
                   "/Widgets/VisionWidget.html",
                   "#VisionWidget_AvoidanceSensorStatus_CLOSED_inline",
                   "Obstacle avoidance is disabled by the user.",
            ],
            [
                   "Obstacle avoidance is disabled by the user.",
                   1,
                   "/Widgets/VisionWidget.html",
                   "#VisionWidget_AvoidanceSensorStatus_CLOSED_inline",
                   "",
            ],
            [
                   "DashboardWidget",
                   2,
                   "/Widgets/DUXDashboardWidget.html",
                   "",
                   "Display: Compound widget that aggregates important physical state information of the aircraft into a dashboard. It includes the circular `CompassWidget`, the `DistanceHomeWidget`, the `HorizontalVelocityWidget`, the `DistanceRCWidget`, the `VerticalVelocityWidget`, and the `AltitudeWidget`.  Usage: Preferred Aspect Ratio: 405:91.",
            ],
            [
                   "Display: Compound widget that aggregates important physical state information of the aircraft into a dashboard. It includes the circular `CompassWidget`, the `DistanceHomeWidget`, the `HorizontalVelocityWidget`, the `DistanceRCWidget`, the `VerticalVelocityWidget`, and the `AltitudeWidget`.  Usage: Preferred Aspect Ratio: 405:91.",
                   1,
                   "/Widgets/DUXDashboardWidget.html",
                   "",
                   "",
            ],
            [
                   "CompassWidget",
                   2,
                   "/Widgets/DUXCompassWidget.html",
                   "",
                   "Display: Compound widget that aggregates attitude and location data into one widget. The widget shows:   - Heading of the aircraft relative to the pilot   - True north relative to pilot and aircraft   - Roll and pitch of aircraft   - Yaw and pitch of gimbal   - Position of aircraft relative to pilot   - Distance of aircraft from pilot   - Home location  Usage: Preferred Aspect Ratio: 1:1. Check `DashboardWidget` for an example of its usage.",
            ],
            [
                   "Display: Compound widget that aggregates attitude and location data into one widget. The widget shows:   - Heading of the aircraft relative to the pilot   - True north relative to pilot and aircraft   - Roll and pitch of aircraft   - Yaw and pitch of gimbal   - Position of aircraft relative to pilot   - Distance of aircraft from pilot   - Home location  Usage: Preferred Aspect Ratio: 1:1. Check `DashboardWidget` for an example of its usage.",
                   1,
                   "/Widgets/DUXCompassWidget.html",
                   "",
                   "",
            ],
            [
                   "DistanceHomeWidget",
                   2,
                   "/Widgets/DistanceFromHomeWidget.html",
                   "",
                   "Display: Distance between current location of the aircraft and home in meters.  Usage: Preferred Aspect Ratio: 71:16. Check `DashboardWidget` for an example of its usage.",
            ],
            [
                   "Display: Distance between current location of the aircraft and home in meters.  Usage: Preferred Aspect Ratio: 71:16. Check `DashboardWidget` for an example of its usage.",
                   1,
                   "/Widgets/DistanceFromHomeWidget.html",
                   "",
                   "",
            ],
            [
                   "HorizontalVelocityWidget",
                   2,
                   "/Widgets/HorizontalVelocityWidget.html",
                   "",
                   "Display: Horizontal velocity of aircraft in m/s.  Usage: Preferred Aspect Ratio: 71:16. Check `DashboardWidget` for an example of its usage.",
            ],
            [
                   "Display: Horizontal velocity of aircraft in m/s.  Usage: Preferred Aspect Ratio: 71:16. Check `DashboardWidget` for an example of its usage.",
                   1,
                   "/Widgets/HorizontalVelocityWidget.html",
                   "",
                   "",
            ],
            [
                   "DistanceRCWidget",
                   2,
                   "/Widgets/DistanceFromRCWidget.html",
                   "",
                   "Display: Distance between current location of the aircraft and RC (pilot) in meters.  Usage: Preferred Aspect Ratio: 71:16. Check `DashboardWidget` for an example of its usage.",
            ],
            [
                   "Display: Distance between current location of the aircraft and RC (pilot) in meters.  Usage: Preferred Aspect Ratio: 71:16. Check `DashboardWidget` for an example of its usage.",
                   1,
                   "/Widgets/DistanceFromRCWidget.html",
                   "",
                   "",
            ],
            [
                   "VerticalVelocityWidget",
                   2,
                   "/Widgets/VerticalVelocityWidget.html",
                   "",
                   "Display: Text shows the aircraft's current vertical velocity in m/s. Arrow indicates whether the aircraft is going up or down.  Usage: Preferred Aspect Ratio: 71:16. Check `DashboardWidget` for an example of its usage.",
            ],
            [
                   "Display: Text shows the aircraft's current vertical velocity in m/s. Arrow indicates whether the aircraft is going up or down.  Usage: Preferred Aspect Ratio: 71:16. Check `DashboardWidget` for an example of its usage.",
                   1,
                   "/Widgets/VerticalVelocityWidget.html",
                   "",
                   "",
            ],
            [
                   "AltitudeWidget",
                   2,
                   "/Widgets/AltitudeWidget.html",
                   "",
                   "Display: Current altitude of the aircraft in meters.  Usage: Preferred Aspect Ratio: 71:16. Check `DashboardWidget` for an example of its usage.",
            ],
            [
                   "Display: Current altitude of the aircraft in meters.  Usage: Preferred Aspect Ratio: 71:16. Check `DashboardWidget` for an example of its usage.",
                   1,
                   "/Widgets/AltitudeWidget.html",
                   "",
                   "",
            ],
            [
                   "CameraControlsWidget",
                   2,
                   "/Widgets/CameraControlsWidget.html",
                   "",
                   "Display: Compound widget  Usage: Preferred Aspect Ratio: 30:128  Interaction: Tapping the Menu button will toggle between show and hide `CameraSettingAdvancedPanel`. Tapping the switch button will toggle camera mode between shoot photo and record video. Tapping the bottom button will toggle between show and hide `CameraSettingExposurePanel`. Full interaction with `CameraCaptureWidget`.",
            ],
            [
                   "Display: Compound widget  Usage: Preferred Aspect Ratio: 30:128  Interaction: Tapping the Menu button will toggle between show and hide `CameraSettingAdvancedPanel`. Tapping the switch button will toggle camera mode between shoot photo and record video. Tapping the bottom button will toggle between show and hide `CameraSettingExposurePanel`. Full interaction with `CameraCaptureWidget`.",
                   1,
                   "/Widgets/CameraControlsWidget.html",
                   "",
                   "",
            ],
            [
                   "setAdvancedPanelVisibility",
                   2,
                   "/Widgets/CameraControlsWidget.html",
                   "#CameraControlsWidget_setAdvancedPanelVisibility_inline",
                   "Shows/hides the CameraSettingAdvancedPanel.  @param isVisible True to show the panel, false to hide it.",
            ],
            [
                   "Shows/hides the CameraSettingAdvancedPanel.  @param isVisible True to show the panel, false to hide it.",
                   1,
                   "/Widgets/CameraControlsWidget.html",
                   "#CameraControlsWidget_setAdvancedPanelVisibility_inline",
                   "",
            ],
            [
                   "setExposurePanelVisibility",
                   2,
                   "/Widgets/CameraControlsWidget.html",
                   "#CameraControlsWidget_setExposurePanelVisibility_inline",
                   "Shows/hides the CameraSettingExposurePanel.  @param isVisible True to show the panel, false to hide it.",
            ],
            [
                   "Shows/hides the CameraSettingExposurePanel.  @param isVisible True to show the panel, false to hide it.",
                   1,
                   "/Widgets/CameraControlsWidget.html",
                   "#CameraControlsWidget_setExposurePanelVisibility_inline",
                   "",
            ],
            [
                   "PictureVideoSwitch",
                   2,
                   "/Widgets/PictureVideoSwitchWidget.html",
                   "",
                   "Display: A switch button shows weather the camera mode is in shoot photo or record video.  Usage: Preferred Aspect Ratio: 44:36. Check `CameraControlsWidget` for an example of its usage.  Interaction: Use switch button to toggle the camera mode.",
            ],
            [
                   "Display: A switch button shows weather the camera mode is in shoot photo or record video.  Usage: Preferred Aspect Ratio: 44:36. Check `CameraControlsWidget` for an example of its usage.  Interaction: Use switch button to toggle the camera mode.",
                   1,
                   "/Widgets/PictureVideoSwitchWidget.html",
                   "",
                   "",
            ],
            [
                   "CameraCaptureWidget",
                   2,
                   "/Widgets/CameraCaptureWidget.html",
                   "",
                   "Display: In shooting photo, the widget can show the mode of photo will be taken and the related setting of that mode as following:   - Single mode.   - HDR mode.   - Burst mode and the number of burst shot will be taken.   - AEB mode and the number of shot will be taken.   - Interval mode.  Usage: Preferred Aspect Ratio: 3:4. Check `CameraControlsWidget` for an example of its usage.  Interaction: Tapping when in shoot photo mode will take a photo. Tapping when in record video mode will start/stop recording.",
            ],
            [
                   "Display: In shooting photo, the widget can show the mode of photo will be taken and the related setting of that mode as following:   - Single mode.   - HDR mode.   - Burst mode and the number of burst shot will be taken.   - AEB mode and the number of shot will be taken.   - Interval mode.  Usage: Preferred Aspect Ratio: 3:4. Check `CameraControlsWidget` for an example of its usage.  Interaction: Tapping when in shoot photo mode will take a photo. Tapping when in record video mode will start/stop recording.",
                   1,
                   "/Widgets/CameraCaptureWidget.html",
                   "",
                   "",
            ],
            [
                   "ExposureSettingsMenu",
                   2,
                   "/Widgets/ExposureSettingsMenu.html",
                   "",
                   "Usage: Preferred Aspect Ratio: 4:3. Check `CameraControlsWidget` for an example of its usage.  Interaction: Tapping the button will toggle between show and hide `CameraSettingExposurePanel`.",
            ],
            [
                   "Usage: Preferred Aspect Ratio: 4:3. Check `CameraControlsWidget` for an example of its usage.  Interaction: Tapping the button will toggle between show and hide `CameraSettingExposurePanel`.",
                   1,
                   "/Widgets/ExposureSettingsMenu.html",
                   "",
                   "",
            ],
            [
                   "RemainingFlightTimeWidget",
                   2,
                   "/Widgets/RemainingFlightTimeWidget.html",
                   "",
                   "Display: Has the same behavior as DJIGO's element. 1. The text inside white bubble shows the remaining flight time in minutes and seconds. 2. The middle line stretches along the width of the widget represents remaining battery percentage of the aircraft. If remaining battery is 100%, the line will cover the whole width of widget. If remaining battery is 0%, the line will disappear.   - Red part of the line represents the battery percentage needed   to land aircraft immediately.   - Yellow part of the line represents the battery percentage needed to   return aircraft home.   - Green part of the line represents the battery percentage left to fly safely. 3. The two white dots represent the two settable battery threshold.   - The first one from the left represents the land immediately threshold.   - The second one represents the go home threshold. 4. The `H` icon is an addition to yellow part of the line. It represents the battery percentage needed to go home.",
            ],
            [
                   "Display: Has the same behavior as DJIGO's element. 1. The text inside white bubble shows the remaining flight time in minutes and seconds. 2. The middle line stretches along the width of the widget represents remaining battery percentage of the aircraft. If remaining battery is 100%, the line will cover the whole width of widget. If remaining battery is 0%, the line will disappear.   - Red part of the line represents the battery percentage needed   to land aircraft immediately.   - Yellow part of the line represents the battery percentage needed to   return aircraft home.   - Green part of the line represents the battery percentage left to fly safely. 3. The two white dots represent the two settable battery threshold.   - The first one from the left represents the land immediately threshold.   - The second one represents the go home threshold. 4. The `H` icon is an addition to yellow part of the line. It represents the battery percentage needed to go home.",
                   1,
                   "/Widgets/RemainingFlightTimeWidget.html",
                   "",
                   "",
            ],
            [
                   "ColorWaveformWidget",
                   2,
                   "/Widgets/DULColorWaveformWidget.html",
                   "",
                   "Display: Widget to display color waveform of live video.",
            ],
            [
                   "Display: Widget to display color waveform of live video.",
                   1,
                   "/Widgets/DULColorWaveformWidget.html",
                   "",
                   "",
            ],
            [
                   "FPVWidget",
                   2,
                   "/Widgets/DULFPVWidget.html",
                   "",
                   "Display: The video feed from camera.  Usage: To allow user to interact with the video feed, use this widget in conjunction with ``FPVOverlayWidget",
            ],
            [
                   "Display: The video feed from camera.  Usage: To allow user to interact with the video feed, use this widget in conjunction with ``FPVOverlayWidget",
                   1,
                   "/Widgets/DULFPVWidget.html",
                   "",
                   "",
            ],
            [
                   "setVideoSource",
                   2,
                   "/Widgets/DULFPVWidget.html",
                   "#DULFPVWidget_setVideoSource_inline",
                   "User can set video source to these three options: AUTO, PRIMARY, SECONDARY. By default, the video source is set to AUTO if user does not specify it.  @param videoSource An enum value of `VideoSource`.",
            ],
            [
                   "User can set video source to these three options: AUTO, PRIMARY, SECONDARY. By default, the video source is set to AUTO if user does not specify it.  @param videoSource An enum value of `VideoSource`.",
                   1,
                   "/Widgets/DULFPVWidget.html",
                   "#DULFPVWidget_setVideoSource_inline",
                   "",
            ],
            [
                   "getVideoSource",
                   2,
                   "/Widgets/DULFPVWidget.html",
                   "#DULFPVWidget_getVideoSource_inline",
                   "Retrieves the type of the video feed selection.  @return An enum value of `VideoSource`.",
            ],
            [
                   "Retrieves the type of the video feed selection.  @return An enum value of `VideoSource`.",
                   1,
                   "/Widgets/DULFPVWidget.html",
                   "#DULFPVWidget_getVideoSource_inline",
                   "",
            ],
            [
                   "setSourceCameraNameVisibility",
                   2,
                   "/Widgets/DULFPVWidget.html",
                   "#DULFPVWidget_setSourceCameraNameVisibility_inline",
                   "Shows or Hides the video feed source's camera name on the video feed.  @param isVisible A boolean value that determines whether to show the source camera name.",
            ],
            [
                   "Shows or Hides the video feed source's camera name on the video feed.  @param isVisible A boolean value that determines whether to show the source camera name.",
                   1,
                   "/Widgets/DULFPVWidget.html",
                   "#DULFPVWidget_setSourceCameraNameVisibility_inline",
                   "",
            ],
            [
                   "setSourceCameraSideVisibility",
                   2,
                   "/Widgets/DULFPVWidget.html",
                   "#DUXFPVWidget_setSourceCameraSideVisibility_inline",
                   "Flag to show/hide the side (starboard / port) of the camera on the video feed. Only works on aircrafts that support multiple gimbals.  @param isVisible A boolean value that determines whether to show the source camera side.",
            ],
            [
                   "Flag to show/hide the side (starboard / port) of the camera on the video feed. Only works on aircrafts that support multiple gimbals.  @param isVisible A boolean value that determines whether to show the source camera side.",
                   1,
                   "/Widgets/DULFPVWidget.html",
                   "#DUXFPVWidget_setSourceCameraSideVisibility_inline",
                   "",
            ],
            [
                   "VideoSource",
                   2,
                   "/Widgets/DULFPVWidget.html",
                   "#DULFPVWidget_VideoSource_inline",
                   "Options for the user to select the video feed to associate with the FPVWidget. Please  be aware that the video feed can only associate with one FPVWidget object. If several  FPVWidget objects are associated with the same VideoSource, only the last one can get the live video.",
            ],
            [
                   "Options for the user to select the video feed to associate with the FPVWidget. Please  be aware that the video feed can only associate with one FPVWidget object. If several  FPVWidget objects are associated with the same VideoSource, only the last one can get the live video.",
                   1,
                   "/Widgets/DULFPVWidget.html",
                   "#DULFPVWidget_VideoSource_inline",
                   "",
            ],
            [
                   "AUTO",
                   2,
                   "/Widgets/DULFPVWidget.html",
                   "#DULFPVWidget_VideoSource_AUTO_inline",
                   "Auto switch from PRIMARY video feed to SECONDARY video feed to show the DJICamera live video when connecting with M600, M600Pro, A3, or N3 product. It is PRIMARY video feed by default when connecting with other products.",
            ],
            [
                   "Auto switch from PRIMARY video feed to SECONDARY video feed to show the DJICamera live video when connecting with M600, M600Pro, A3, or N3 product. It is PRIMARY video feed by default when connecting with other products.",
                   1,
                   "/Widgets/DULFPVWidget.html",
                   "#DULFPVWidget_VideoSource_AUTO_inline",
                   "",
            ],
            [
                   "PRIMARY",
                   2,
                   "/Widgets/DULFPVWidget.html",
                   "#DULFPVWidget_VideoSource_PRIMARY_inline",
                   "The first video feed of getVideoFeeds array list in VideoFeeder singleton object.",
            ],
            [
                   "The first video feed of getVideoFeeds array list in VideoFeeder singleton object.",
                   1,
                   "/Widgets/DULFPVWidget.html",
                   "#DULFPVWidget_VideoSource_PRIMARY_inline",
                   "",
            ],
            [
                   "SECONDARY",
                   2,
                   "/Widgets/DULFPVWidget.html",
                   "#DULFPVWidget_VideoSource_SECONDARY_inline",
                   "The second video feed of getVideoFeeds array list in VideoFeeder singleton object.",
            ],
            [
                   "The second video feed of getVideoFeeds array list in VideoFeeder singleton object.",
                   1,
                   "/Widgets/DULFPVWidget.html",
                   "#DULFPVWidget_VideoSource_SECONDARY_inline",
                   "",
            ],
            [
                   "FPVOverlayWidget",
                   2,
                   "/Widgets/FPVOverlayWidget.html",
                   "",
                   "Display: Single tap will show the selected target on top of the `FPVWidget`. Has two modes with two different icons.   - Focus mode will have a green square icon.   - Meter mode will have a yellow circle icon. Press and hold will show the gimbal control.   - Small white dot will stay at where user first taps the screen to indicate the anchor point.   - Blue circle will follow user's drag. Together with the anchor point, this dictates the gimbal movement. When grid mode is turned on (using the `CameraSettingAdvancedPanel`), this also shows the grid lines. When center  point is turned on  (using the `CameraSettingAdvancedPanel`), this also shows the center point.  Usage: Should be the same size and placed on top of `FPVOverlayWidget`.  Interaction: Tapping in focus mode will select that point as focus target point. Tapping in meter mode will select that point as exposure meter target point. Press and hold will activate gimbal control mode. Dragging gimbal control will move the gimbal accordingly.",
            ],
            [
                   "Display: Single tap will show the selected target on top of the `FPVWidget`. Has two modes with two different icons.   - Focus mode will have a green square icon.   - Meter mode will have a yellow circle icon. Press and hold will show the gimbal control.   - Small white dot will stay at where user first taps the screen to indicate the anchor point.   - Blue circle will follow user's drag. Together with the anchor point, this dictates the gimbal movement. When grid mode is turned on (using the `CameraSettingAdvancedPanel`), this also shows the grid lines. When center  point is turned on  (using the `CameraSettingAdvancedPanel`), this also shows the center point.  Usage: Should be the same size and placed on top of `FPVOverlayWidget`.  Interaction: Tapping in focus mode will select that point as focus target point. Tapping in meter mode will select that point as exposure meter target point. Press and hold will activate gimbal control mode. Dragging gimbal control will move the gimbal accordingly.",
                   1,
                   "/Widgets/FPVOverlayWidget.html",
                   "",
                   "",
            ],
            [
                   "setSpotMeteringEnabled",
                   2,
                   "/Widgets/FPVOverlayWidget.html",
                   "#FPVOverlayWidget_setSpotMeteringEnabled_inline",
                   "Enable or disable spot metering by this method.  Enabled by default.  @param isSpotMeteringEnabled `true` to enable, `false` to disable.",
            ],
            [
                   "Enable or disable spot metering by this method.  Enabled by default.  @param isSpotMeteringEnabled `true` to enable, `false` to disable.",
                   1,
                   "/Widgets/FPVOverlayWidget.html",
                   "#FPVOverlayWidget_setSpotMeteringEnabled_inline",
                   "",
            ],
            [
                   "isSpotMeteringEnabled",
                   2,
                   "/Widgets/FPVOverlayWidget.html",
                   "#FPVOverlayWidget_isSpotMeteringEnabled_inline",
                   "Method to check if spot metering using touch is enabled.  @return `true` if enabled, `false` if disabled.",
            ],
            [
                   "Method to check if spot metering using touch is enabled.  @return `true` if enabled, `false` if disabled.",
                   1,
                   "/Widgets/FPVOverlayWidget.html",
                   "#FPVOverlayWidget_isSpotMeteringEnabled_inline",
                   "",
            ],
            [
                   "setGimbalControlEnabled",
                   2,
                   "/Widgets/FPVOverlayWidget.html",
                   "#FPVOverlayWidget_setGimbalControlEnabled_inline",
                   "Enable or disable gimbal control by this method. Enabled by default.  @param isGimbalControlEnabled `true` to enable, `false` to disable.",
            ],
            [
                   "Enable or disable gimbal control by this method. Enabled by default.  @param isGimbalControlEnabled `true` to enable, `false` to disable.",
                   1,
                   "/Widgets/FPVOverlayWidget.html",
                   "#FPVOverlayWidget_setGimbalControlEnabled_inline",
                   "",
            ],
            [
                   "isGimbalControlEnabled",
                   2,
                   "/Widgets/FPVOverlayWidget.html",
                   "#FPVOverlayWidget_isGimbalControlEnabled_inline",
                   "Method to check if gimbal control using touch is enabled.  @return `true` if enabled, `false` if disabled.",
            ],
            [
                   "Method to check if gimbal control using touch is enabled.  @return `true` if enabled, `false` if disabled.",
                   1,
                   "/Widgets/FPVOverlayWidget.html",
                   "#FPVOverlayWidget_isGimbalControlEnabled_inline",
                   "",
            ],
            [
                   "setTouchFocusEnabled",
                   2,
                   "/Widgets/FPVOverlayWidget.html",
                   "#FPVOverlayWidget_setTouchFocusEnabled_inline",
                   "Enable or disable Touch to Focus by this method.  Enabled by default.  @param isTouhFocusEnabled `true` to enable, `false` to disable.",
            ],
            [
                   "Enable or disable Touch to Focus by this method.  Enabled by default.  @param isTouhFocusEnabled `true` to enable, `false` to disable.",
                   1,
                   "/Widgets/FPVOverlayWidget.html",
                   "#FPVOverlayWidget_setTouchFocusEnabled_inline",
                   "",
            ],
            [
                   "isTouchFocusEnabled",
                   2,
                   "/Widgets/FPVOverlayWidget.html",
                   "#FPVOverlayWidget_isTouchFocusEnabled_inline",
                   "Method to check if Touch to Focus is enabled.  @return `true` if enabled, `false` if disabled.",
            ],
            [
                   "Method to check if Touch to Focus is enabled.  @return `true` if enabled, `false` if disabled.",
                   1,
                   "/Widgets/FPVOverlayWidget.html",
                   "#FPVOverlayWidget_isTouchFocusEnabled_inline",
                   "",
            ],
            [
                   "setGridOverlayEnabled",
                   2,
                   "/Widgets/FPVOverlayWidget.html",
                   "#FPVOverlayWidget_setGridOverlayVisibility_inline",
                   "Defaults to `true`. If `true`, FPVOverlayWidget will display grid setting if prompted by the user via the CameraGridListWidget. Setting this to `false` means the grid will never be displayed.  @param isGridOverlayEnabled `true` to enable, `false` to disable.",
            ],
            [
                   "Defaults to `true`. If `true`, FPVOverlayWidget will display grid setting if prompted by the user via the CameraGridListWidget. Setting this to `false` means the grid will never be displayed.  @param isGridOverlayEnabled `true` to enable, `false` to disable.",
                   1,
                   "/Widgets/FPVOverlayWidget.html",
                   "#FPVOverlayWidget_setGridOverlayVisibility_inline",
                   "",
            ],
            [
                   "isGridOverlayEnabled",
                   2,
                   "/Widgets/FPVOverlayWidget.html",
                   "#FPVOverlayWidget_isGridOverlayEnabled_inline",
                   "If `true`, FPVOverlayWidget will display grid setting if prompted by the user via the CameraGridListWidget. If `false`, the grid will never be displayed.  @return `true` to enable, `false` to disable.",
            ],
            [
                   "If `true`, FPVOverlayWidget will display grid setting if prompted by the user via the CameraGridListWidget. If `false`, the grid will never be displayed.  @return `true` to enable, `false` to disable.",
                   1,
                   "/Widgets/FPVOverlayWidget.html",
                   "#FPVOverlayWidget_isGridOverlayEnabled_inline",
                   "",
            ],
            [
                   "setCurrentGridOverlayType",
                   2,
                   "/Widgets/FPVOverlayWidget.html",
                   "#FPVOverlayWidget_setCurrentGridOverlayType_inline",
                   "Sets the type of the grid overlay.  @param type The grid overlay type.",
            ],
            [
                   "Sets the type of the grid overlay.  @param type The grid overlay type.",
                   1,
                   "/Widgets/FPVOverlayWidget.html",
                   "#FPVOverlayWidget_setCurrentGridOverlayType_inline",
                   "",
            ],
            [
                   "getCurrentGridOverlayType",
                   2,
                   "/Widgets/FPVOverlayWidget.html",
                   "#FPVOverlayWidget_getCurrentGridOverlayType_inline",
                   "Gets the current type of the grid overlay.  @return The current grid overlay type.",
            ],
            [
                   "Gets the current type of the grid overlay.  @return The current grid overlay type.",
                   1,
                   "/Widgets/FPVOverlayWidget.html",
                   "#FPVOverlayWidget_getCurrentGridOverlayType_inline",
                   "",
            ],
            [
                   "GridOverlayType",
                   2,
                   "/Widgets/FPVOverlayWidget.html",
                   "#FPVOverlayWidget_GridOverlayType_inline",
                   "Represents the types of grid lines that can be set to be on top of the FPV.",
            ],
            [
                   "Represents the types of grid lines that can be set to be on top of the FPV.",
                   1,
                   "/Widgets/FPVOverlayWidget.html",
                   "#FPVOverlayWidget_GridOverlayType_inline",
                   "",
            ],
            [
                   "NONE",
                   2,
                   "/Widgets/FPVOverlayWidget.html",
                   "#FPVOverlayWidget_GridOverlayType_NONE_inline",
                   "No grid lines are visible.",
            ],
            [
                   "No grid lines are visible.",
                   1,
                   "/Widgets/FPVOverlayWidget.html",
                   "#FPVOverlayWidget_GridOverlayType_NONE_inline",
                   "",
            ],
            [
                   "PARALLEL",
                   2,
                   "/Widgets/FPVOverlayWidget.html",
                   "#FPVOverlayWidget_GridOverlayType_PARALLEL_inline",
                   "Horizontal and vertical grid lines are visible using a 3x3 grid.",
            ],
            [
                   "Horizontal and vertical grid lines are visible using a 3x3 grid.",
                   1,
                   "/Widgets/FPVOverlayWidget.html",
                   "#FPVOverlayWidget_GridOverlayType_PARALLEL_inline",
                   "",
            ],
            [
                   "PARALLEL_DIAGONAL",
                   2,
                   "/Widgets/FPVOverlayWidget.html",
                   "#FPVOverlayWidget_GridOverlayType_PARALLEL_DIAGONAL_inline",
                   "Same as `FPVOverlayWidget_GridOverlayType_PARALLEL` with the addition of 2 diagonal lines running through the center.",
            ],
            [
                   "Same as `FPVOverlayWidget_GridOverlayType_PARALLEL` with the addition of 2 diagonal lines running through the center.",
                   1,
                   "/Widgets/FPVOverlayWidget.html",
                   "#FPVOverlayWidget_GridOverlayType_PARALLEL_DIAGONAL_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Widgets/FPVOverlayWidget.html",
                   "#FPVOverlayWidget_GridOverlayType_UNKNOWN_inline",
                   "The type of grid is unknown.",
            ],
            [
                   "The type of grid is unknown.",
                   1,
                   "/Widgets/FPVOverlayWidget.html",
                   "#FPVOverlayWidget_GridOverlayType_UNKNOWN_inline",
                   "",
            ],
            [
                   "TakeOffWidget",
                   2,
                   "/Widgets/TakeOffLandWidget.html",
                   "",
                   "Display: Widget has three states with three different interactions.  - White icon with arrow up indicates the aircraft is not flying and the widget interaction is to start taking off.  - White icon with arrow down indicates the aircraft is flying and the widget  interaction is to start landing.  - Red icon indicates the aircraft is landing and the widget interaction is  to cancel landing.  Usage: Preferred Aspect Ratio: 1:1 Widget needs to be in Activity context to show Dialog  Interaction: Tapping the widget will open up a Dialog to confirm the desired action. Slide the dialog from left to right to start the action.",
            ],
            [
                   "Display: Widget has three states with three different interactions.  - White icon with arrow up indicates the aircraft is not flying and the widget interaction is to start taking off.  - White icon with arrow down indicates the aircraft is flying and the widget  interaction is to start landing.  - Red icon indicates the aircraft is landing and the widget interaction is  to cancel landing.  Usage: Preferred Aspect Ratio: 1:1 Widget needs to be in Activity context to show Dialog  Interaction: Tapping the widget will open up a Dialog to confirm the desired action. Slide the dialog from left to right to start the action.",
                   1,
                   "/Widgets/TakeOffLandWidget.html",
                   "",
                   "",
            ],
            [
                   "onTakeOffStatusChange",
                   2,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_onTakeOffStatusChange_inline",
                   "Triggers when take off status changes.  @param isTakingOff `true` if taking off, `false` otherwise",
            ],
            [
                   "Triggers when take off status changes.  @param isTakingOff `true` if taking off, `false` otherwise",
                   1,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_onTakeOffStatusChange_inline",
                   "",
            ],
            [
                   "onLandingStatusChange",
                   2,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_onLandingStatusChange_inline",
                   "Triggers when landing status changes.  @param isLanding `true` if in process of landing, `false` otherwise",
            ],
            [
                   "Triggers when landing status changes.  @param isLanding `true` if in process of landing, `false` otherwise",
                   1,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_onLandingStatusChange_inline",
                   "",
            ],
            [
                   "performTakeOffAction",
                   2,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_performTakeOffAction_inline",
                   "Performs take off action @see #`onTakeOffActionResult` to listen on the action result by overridding",
            ],
            [
                   "Performs take off action @see #`onTakeOffActionResult` to listen on the action result by overridding",
                   1,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_performTakeOffAction_inline",
                   "",
            ],
            [
                   "performLandingAction",
                   2,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_performLandingAction_inline",
                   "Performs landing action @see #`onLandingActionResult` to listen on the action result by overridding",
            ],
            [
                   "Performs landing action @see #`onLandingActionResult` to listen on the action result by overridding",
                   1,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_performLandingAction_inline",
                   "",
            ],
            [
                   "performCancelLandingAction",
                   2,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_performCancelLandingAction_inline",
                   "Performs cancel landing action @see #`onCancelLandingActionResult` to listen on the action result by overridding",
            ],
            [
                   "Performs cancel landing action @see #`onCancelLandingActionResult` to listen on the action result by overridding",
                   1,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_performCancelLandingAction_inline",
                   "",
            ],
            [
                   "performLandingConfirmationAction",
                   2,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_performLandingConfirmationAction_inline",
                   "Performs the landing confirmation action. This allows aircraft to land when landing  confirmation is received.",
            ],
            [
                   "Performs the landing confirmation action. This allows aircraft to land when landing  confirmation is received.",
                   1,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_performLandingConfirmationAction_inline",
                   "",
            ],
            [
                   "onTakeOffActionResult",
                   2,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_onTakeOffActionResult_inline",
                   "Triggers when take off action completes @see #`performTakeOffAction`  @param error error object, or null if no error has occurred",
            ],
            [
                   "Triggers when take off action completes @see #`performTakeOffAction`  @param error error object, or null if no error has occurred",
                   1,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_onTakeOffActionResult_inline",
                   "",
            ],
            [
                   "onLandingActionResult",
                   2,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_onLandingActionResult_inline",
                   "Triggers when landing action completes @see #`performLandingAction`  @param error error object, or null if no error has occurred",
            ],
            [
                   "Triggers when landing action completes @see #`performLandingAction`  @param error error object, or null if no error has occurred",
                   1,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_onLandingActionResult_inline",
                   "",
            ],
            [
                   "onCancelLandingActionResult",
                   2,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_onCancelLandingActionResult_inline",
                   "Triggers when cancel landing action completes @see #`performCancelLandingAction`  @param error error object, or null if no error has occurred",
            ],
            [
                   "Triggers when cancel landing action completes @see #`performCancelLandingAction`  @param error error object, or null if no error has occurred",
                   1,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_onCancelLandingActionResult_inline",
                   "",
            ],
            [
                   "onLandingConfirmedResult",
                   2,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_onLandingConfirmedResult_inline",
                   "Triggers when confirm landing action completes.  @param error error object, or null if no error has occurred.",
            ],
            [
                   "Triggers when confirm landing action completes.  @param error error object, or null if no error has occurred.",
                   1,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_onLandingConfirmedResult_inline",
                   "",
            ],
            [
                   "onTakeOffEnable",
                   2,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_onTakeOffEnable_inline",
                   "Triggers when TakeOff Widget changes between being enabled or not.  @param enabled Current state that is `true` if button is enabled.",
            ],
            [
                   "Triggers when TakeOff Widget changes between being enabled or not.  @param enabled Current state that is `true` if button is enabled.",
                   1,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_onTakeOffEnable_inline",
                   "",
            ],
            [
                   "ReturnHomeWidget",
                   2,
                   "/Widgets/ReturnHomeWidget.html",
                   "",
                   "Display: Widget has two states with two different interactions.  - White icon with arrow down indicates the aircraft is flying and the widget  interaction is to start returning home.  - Red icon indicates the aircraft is returning home and the widget interaction is  to cancel returning home.  Usage: Preferred Aspect Ratio: 1:1. Widget needs to be in Activity context for showing Dialog  Interaction: Tapping the widget will open up a Dialog to confirm the desired action. Slide the dialog from left to right to start the action.",
            ],
            [
                   "Display: Widget has two states with two different interactions.  - White icon with arrow down indicates the aircraft is flying and the widget  interaction is to start returning home.  - Red icon indicates the aircraft is returning home and the widget interaction is  to cancel returning home.  Usage: Preferred Aspect Ratio: 1:1. Widget needs to be in Activity context for showing Dialog  Interaction: Tapping the widget will open up a Dialog to confirm the desired action. Slide the dialog from left to right to start the action.",
                   1,
                   "/Widgets/ReturnHomeWidget.html",
                   "",
                   "",
            ],
            [
                   "performReturnHomeAction",
                   2,
                   "/Widgets/ReturnHomeWidget.html",
                   "#ReturnHomeWidget_performReturnHomeAction_inline",
                   "Performs return home action. @see #`onReturnHomeActionResult` for result of action by overridding",
            ],
            [
                   "Performs return home action. @see #`onReturnHomeActionResult` for result of action by overridding",
                   1,
                   "/Widgets/ReturnHomeWidget.html",
                   "#ReturnHomeWidget_performReturnHomeAction_inline",
                   "",
            ],
            [
                   "onReturnHomeActionResult",
                   2,
                   "/Widgets/ReturnHomeWidget.html",
                   "#ReturnHomeWidget_onReturnHomeActionResult_inline",
                   "Triggers when return home action completes @see #`performReturnHomeAction`  @param error null means success, otherwise error object returns",
            ],
            [
                   "Triggers when return home action completes @see #`performReturnHomeAction`  @param error null means success, otherwise error object returns",
                   1,
                   "/Widgets/ReturnHomeWidget.html",
                   "#ReturnHomeWidget_onReturnHomeActionResult_inline",
                   "",
            ],
            [
                   "performCancelReturnHomeAction",
                   2,
                   "/Widgets/ReturnHomeWidget.html",
                   "#ReturnHomeWidget_performCancelReturnHomeAction_inline",
                   "Perform cancel return home action @see #`onCancelReturnHomeActionResult`",
            ],
            [
                   "Perform cancel return home action @see #`onCancelReturnHomeActionResult`",
                   1,
                   "/Widgets/ReturnHomeWidget.html",
                   "#ReturnHomeWidget_performCancelReturnHomeAction_inline",
                   "",
            ],
            [
                   "onCancelReturnHomeActionResult",
                   2,
                   "/Widgets/ReturnHomeWidget.html",
                   "#ReturnHomeWidget_onCancelReturnHomeActionResult_inline",
                   "Triggers when cancel return home action completes @see #`performCancelReturnHomeAction`  @param error null means success, otherwise error object returns",
            ],
            [
                   "Triggers when cancel return home action completes @see #`performCancelReturnHomeAction`  @param error null means success, otherwise error object returns",
                   1,
                   "/Widgets/ReturnHomeWidget.html",
                   "#ReturnHomeWidget_onCancelReturnHomeActionResult_inline",
                   "",
            ],
            [
                   "ManualFocusWidget",
                   2,
                   "/Widgets/ManualFocusWidget.html",
                   "",
                   "Display: Allows the focus distance to be set manually by using a slider. Macro and infinity buttons can also be clicked to set focus distance to those values.  Usage: Preferred Aspect Ratio: 36:7.",
            ],
            [
                   "Display: Allows the focus distance to be set manually by using a slider. Macro and infinity buttons can also be clicked to set focus distance to those values.  Usage: Preferred Aspect Ratio: 36:7.",
                   1,
                   "/Widgets/ManualFocusWidget.html",
                   "",
                   "",
            ],
            [
                   "FocusModeWidget",
                   2,
                   "/Widgets/FocusModeWidget.html",
                   "",
                   "Display: Shows the current focus mode of aircraft camera.   - MF text highlighted (in green) indicates focus mode is MF.   - AF text highlighted (in green) indicates focus mode is AF.  Usage: Preferred Aspect Ratio: 1:1  Interaction: Tapping will toggle between AF and MF mode.",
            ],
            [
                   "Display: Shows the current focus mode of aircraft camera.   - MF text highlighted (in green) indicates focus mode is MF.   - AF text highlighted (in green) indicates focus mode is AF.  Usage: Preferred Aspect Ratio: 1:1  Interaction: Tapping will toggle between AF and MF mode.",
                   1,
                   "/Widgets/FocusModeWidget.html",
                   "",
                   "",
            ],
            [
                   "onFocusModeChange",
                   2,
                   "/Widgets/FocusModeWidget.html",
                   "#FocusModeWidget_onFocusModeChange_inline",
                   "Triggers when FocusMode has changed  @param focusMode Camera focus mode enum",
            ],
            [
                   "Triggers when FocusMode has changed  @param focusMode Camera focus mode enum",
                   1,
                   "/Widgets/FocusModeWidget.html",
                   "#FocusModeWidget_onFocusModeChange_inline",
                   "",
            ],
            [
                   "performFocusModeAction",
                   2,
                   "/Widgets/FocusModeWidget.html",
                   "#FocusModeWidget_performFocusModeAction_inline",
                   "Performs the FocusMode change action. @see #`onFocusModeActionResult` to listen on the action result by overridding  @param mode FocusMode enum value",
            ],
            [
                   "Performs the FocusMode change action. @see #`onFocusModeActionResult` to listen on the action result by overridding  @param mode FocusMode enum value",
                   1,
                   "/Widgets/FocusModeWidget.html",
                   "#FocusModeWidget_performFocusModeAction_inline",
                   "",
            ],
            [
                   "onFocusModeActionResult",
                   2,
                   "/Widgets/FocusModeWidget.html",
                   "#FocusModeWidget_onFocusModeActionResult_inline",
                   "Triggers when focus mode action completes.  @param error error object, or null if no error has occurred",
            ],
            [
                   "Triggers when focus mode action completes.  @param error error object, or null if no error has occurred",
                   1,
                   "/Widgets/FocusModeWidget.html",
                   "#FocusModeWidget_onFocusModeActionResult_inline",
                   "",
            ],
            [
                   "CameraConfigShutterWidget",
                   2,
                   "/Widgets/CameraConfigShutterWidget.html",
                   "",
                   "Display: Camera's current shutter speed setting.  Usage: Preferred Aspect Ratio: 2:1.",
            ],
            [
                   "Display: Camera's current shutter speed setting.  Usage: Preferred Aspect Ratio: 2:1.",
                   1,
                   "/Widgets/CameraConfigShutterWidget.html",
                   "",
                   "",
            ],
            [
                   "CameraConfigApertureWidget",
                   2,
                   "/Widgets/CameraConfigApertureWidget.html",
                   "",
                   "Display: Camera's current aperture setting.  Usage: Preferred Aspect Ratio: 2:1.",
            ],
            [
                   "Display: Camera's current aperture setting.  Usage: Preferred Aspect Ratio: 2:1.",
                   1,
                   "/Widgets/CameraConfigApertureWidget.html",
                   "",
                   "",
            ],
            [
                   "CameraConfigISOAndEIWidget",
                   2,
                   "/Widgets/CameraConfigISOWidget.html",
                   "",
                   "Display: Camera's current ISO setting.  Usage: Preferred Aspect Ratio: 2:1.",
            ],
            [
                   "Display: Camera's current ISO setting.  Usage: Preferred Aspect Ratio: 2:1.",
                   1,
                   "/Widgets/CameraConfigISOWidget.html",
                   "",
                   "",
            ],
            [
                   "CameraConfigWBWidget",
                   2,
                   "/Widgets/CameraConfigWBWidget.html",
                   "",
                   "Display: Camera's current White Balance setting.  Usage: Preferred Aspect Ratio: 2:1.",
            ],
            [
                   "Display: Camera's current White Balance setting.  Usage: Preferred Aspect Ratio: 2:1.",
                   1,
                   "/Widgets/CameraConfigWBWidget.html",
                   "",
                   "",
            ],
            [
                   "CameraConfigStorageWidget",
                   2,
                   "/Widgets/CameraConfigStorageWidget.html",
                   "",
                   "Display: First text from the left shows format/resolution of photo/video that camera wil capture. Second text shows how many shots can be taken, or how many minutes can be recorded.  Usage: Preferred Aspect Ratio: 13:3.",
            ],
            [
                   "Display: First text from the left shows format/resolution of photo/video that camera wil capture. Second text shows how many shots can be taken, or how many minutes can be recorded.  Usage: Preferred Aspect Ratio: 13:3.",
                   1,
                   "/Widgets/CameraConfigStorageWidget.html",
                   "",
                   "",
            ],
            [
                   "CameraConfigSSDWidget",
                   2,
                   "/Widgets/CameraConfigSSDWidget.html",
                   "",
                   "Usage: Shows SSD Video format, clip name, license, and capacity info.",
            ],
            [
                   "Usage: Shows SSD Video format, clip name, license, and capacity info.",
                   1,
                   "/Widgets/CameraConfigSSDWidget.html",
                   "",
                   "",
            ],
            [
                   "CameraConfigEVWidget",
                   2,
                   "/Widgets/CameraEVConfigWidget.html",
                   "",
                   "Display: Camera's current EV setting.  Usage: Preferred Aspect Ratio: 2:1.",
            ],
            [
                   "Display: Camera's current EV setting.  Usage: Preferred Aspect Ratio: 2:1.",
                   1,
                   "/Widgets/CameraEVConfigWidget.html",
                   "",
                   "",
            ],
            [
                   "CameraSettingAdvancedPanel",
                   2,
                   "/Widgets/CameraSettingAdvancedPanel.html",
                   "",
                   "Display: This panel shows all the camera settings that are not related to exposure. It is segmented in three parts:     - Picture Settings     - Video Settings     - Common Settings  Usage: Preferred Aspect Ratio: 53:79. To allow user to toggle hide and show this panel, use in conjunction with `CameraControlsWidget`  Interaction: All the settings are presented in ListView hierarchy.",
            ],
            [
                   "Display: This panel shows all the camera settings that are not related to exposure. It is segmented in three parts:     - Picture Settings     - Video Settings     - Common Settings  Usage: Preferred Aspect Ratio: 53:79. To allow user to toggle hide and show this panel, use in conjunction with `CameraControlsWidget`  Interaction: All the settings are presented in ListView hierarchy.",
                   1,
                   "/Widgets/CameraSettingAdvancedPanel.html",
                   "",
                   "",
            ],
            [
                   "CameraSettingExposurePanel",
                   2,
                   "/Widgets/CameraSettingExposurePanel.html",
                   "",
                   "Display: This panel shows all the camera settings that are related to exposure. It allows exposure mode selection (auto, aperture priority, shutter priority and manual) depending on the connected camera. Depending on the mode, the ISO, aperture, shutter speed and exposure compensation value can also be set.  Usage: Preferred Aspect Ratio: 211:316. To allow user to toggle hide and show this panel, use in conjunction with `CameraControlsWidget`  Interaction: All the settings are presented in ListView hierarchy.",
            ],
            [
                   "Display: This panel shows all the camera settings that are related to exposure. It allows exposure mode selection (auto, aperture priority, shutter priority and manual) depending on the connected camera. Depending on the mode, the ISO, aperture, shutter speed and exposure compensation value can also be set.  Usage: Preferred Aspect Ratio: 211:316. To allow user to toggle hide and show this panel, use in conjunction with `CameraControlsWidget`  Interaction: All the settings are presented in ListView hierarchy.",
                   1,
                   "/Widgets/CameraSettingExposurePanel.html",
                   "",
                   "",
            ],
            [
                   "RTKStatusPanel",
                   2,
                   "/Widgets/RTKStatusPanel.html",
                   "",
                   "Display: This panel shows all the information related to RTK.  This includes coordinates and altitude of the aircraft and base station, course angle, GLONASS, Beidou and GPS satellite counts for both antennas and the base station, and overall status of the RTK system.  Interaction: RTK can be toggled using a switch at the top of the panel.",
            ],
            [
                   "Display: This panel shows all the information related to RTK.  This includes coordinates and altitude of the aircraft and base station, course angle, GLONASS, Beidou and GPS satellite counts for both antennas and the base station, and overall status of the RTK system.  Interaction: RTK can be toggled using a switch at the top of the panel.",
                   1,
                   "/Widgets/RTKStatusPanel.html",
                   "",
                   "",
            ],
            [
                   "CompassCalibratingWorkFlow",
                   2,
                   "/Widgets/CompassCalibratingWorkFlow.html",
                   "",
                   "Display: The progress of compas calibration.  Usage: To step the user through the compass calibration process  Interaction: Depends on the step, there will be buttons at the bottom of the dialog for the user to interact. The user can either quit out of or continue with the process.",
            ],
            [
                   "Display: The progress of compas calibration.  Usage: To step the user through the compass calibration process  Interaction: Depends on the step, there will be buttons at the bottom of the dialog for the user to interact. The user can either quit out of or continue with the process.",
                   1,
                   "/Widgets/CompassCalibratingWorkFlow.html",
                   "",
                   "",
            ],
            [
                   "startCalibration",
                   2,
                   "/Widgets/CompassCalibratingWorkFlow.html",
                   "#CompassCalibratingWorkFlow_startCalibration_inline",
                   "Call this to send the start calibration command to the aircraft. As soon as the aircraft sends back the progress data, a dialog will show up to guide the user through the process.  @param callback ActionCallback.",
            ],
            [
                   "Call this to send the start calibration command to the aircraft. As soon as the aircraft sends back the progress data, a dialog will show up to guide the user through the process.  @param callback ActionCallback.",
                   1,
                   "/Widgets/CompassCalibratingWorkFlow.html",
                   "#CompassCalibratingWorkFlow_startCalibration_inline",
                   "",
            ],
            [
                   "stopCalibration",
                   2,
                   "/Widgets/CompassCalibratingWorkFlow.html",
                   "#CompassCalibratingWorkFlow_stopCalibration_inline",
                   "Call this to send the stop calibration command to the aircraft.  @param callback ActionCallback.",
            ],
            [
                   "Call this to send the stop calibration command to the aircraft.  @param callback ActionCallback.",
                   1,
                   "/Widgets/CompassCalibratingWorkFlow.html",
                   "#CompassCalibratingWorkFlow_stopCalibration_inline",
                   "",
            ],
            [
                   "BeaconWidget",
                   2,
                   "/Widgets/DUXBeaconWidget.html",
                   "",
                   "Widget is used to turn on and turn off the Beacon accessory on Mavic 2 Enterprise.  Interaction: Tapping the widget will enable/disable the flashing of the external beacon accessory.  The widget will be hidden automatically if the accessory is not present or not supported.",
            ],
            [
                   "Widget is used to turn on and turn off the Beacon accessory on Mavic 2 Enterprise.  Interaction: Tapping the widget will enable/disable the flashing of the external beacon accessory.  The widget will be hidden automatically if the accessory is not present or not supported.",
                   1,
                   "/Widgets/DUXBeaconWidget.html",
                   "",
                   "",
            ],
            [
                   "SpotlightWidget",
                   2,
                   "/Widgets/DUXSpotlightWidget.html",
                   "",
                   "Tapping the widget opens the spotlight settings panel. The widget will be hidden automatically if the accessory is not present or not supported.",
            ],
            [
                   "Tapping the widget opens the spotlight settings panel. The widget will be hidden automatically if the accessory is not present or not supported.",
                   1,
                   "/Widgets/DUXSpotlightWidget.html",
                   "",
                   "",
            ],
            [
                   "SpotlightPanel",
                   2,
                   "/Widgets/DUXSpotlightSettingsViewController.html",
                   "",
                   "This panel shows all the information related to the spotlight accessory on the Mavic 2 Enterprise. This includes a switch to enable/disable it, brightness control and display of it's temperature value.",
            ],
            [
                   "This panel shows all the information related to the spotlight accessory on the Mavic 2 Enterprise. This includes a switch to enable/disable it, brightness control and display of it's temperature value.",
                   1,
                   "/Widgets/DUXSpotlightSettingsViewController.html",
                   "",
                   "",
            ],
        ]
    }
}
